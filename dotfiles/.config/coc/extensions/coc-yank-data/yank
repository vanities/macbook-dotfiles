e2ee469f091158508cd3cc02cf3043f3|file:///Users/vanities/git/fun/bitchan/js/src/App.js|32|40|v|javascript
	Or right-aligned
da5281f51d97823b6d8ec3091eb61d1b|file:///Users/vanities/git/fun/bitchan/js/src/App.js|33|13|V|javascript
	            Account: {this.state.account}
21463b748ee1eb4aa7bf756efd2966bf|file:///Users/vanities/git/fun/bitchan/js/src/App.js|32|21|v|javascript
	className="text-right mt-4 mb-4"
a4a7cc9476a1bbbcaeec8cfe38d3fae3|file:///Users/vanities/git/fun/bitchan/js/src/App.js|35|13|V|javascript
	            {this.state.network}
72ffbef058303f95d68e59693f523bbe|file:///Users/vanities/git/fun/bitchan/js/src/App.js|32|11|V|javascript
	          <p style=color:>
70ebe5c0f8e708be1821d913743d0fb7|file:///Users/vanities/git/fun/bitchan/js/src/App.js|34|11|V|javascript
	          </p>
d88517b141e230d94f50609aa36060a0|file:///Users/vanities/git/fun/bitchan/js/package.json|14|5|V|json
	    "react-native": "0.62.2",
5ebe155100d5b9eded22e9a85e7fa84d|file:///Users/vanities/git/fun/bitchan/js/package.json|14|5|V|json
	    "react-native-web": "0.12.2",
2c4dba333b0e1203ed16f01c8cb49a4c|file:///Users/vanities/git/fun/bitchan/js/package.json|14|5|V|json
	    "react-router-native": "5.2.0",
91604805e268be141482035dbcf8a9c8|file:///Users/vanities/git/fun/bitchan/js/package.json|23|5|V|json
	    "@types/react-native": "0.62.7",
c9257540f5cf90fe2ba7fb1a494bad12|file:///Users/vanities/git/fun/bitchan/js/package.json|20|1|V|json
	    "@types/node": "14.0.1",
	    "@types/jest":"25.2.1", 
	    "@types/react": "16.9.35",
	    "@types/react-test-renderer": "16.9.2"
e1e7928cddb8b5d9623ede4ac0b729c1|file:///Users/vanities/git/fun/bitchan/js/src/index.js|5|1|V|javascript
	import 'bootstrap/dist/css/bootstrap.css';
040bf507fd334e43829af26189b3bd3a|file:///Users/vanities/git/fun/bitchan/js/src/App.js|3|1|V|javascript
	import { Navbar, Nav } from 'react-bootstrap';
a2feadb2c104647d3d90de8329e5929a|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|12|1|V|yaml
	      - node_modules:/bitchan/node_modules
97fe3eccec8cc825c544647cb8416bb9|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|17|1|V|yaml
	
	volumes:
	  node_modules:  
b55e28ea5338dc26712fd6484bf67b3b|file:///Users/vanities/git/fun/bitchan/js/src/App.js|74|1|V|javascript
	  }
	      <Navbar bg="dark" variant="dark" collapseOnSelect="true">
	        <Navbar.Brand href="#home">bitchan</Navbar.Brand>
	        <Navbar.Toggle aria-controls="basic-navbar-nav" />
	        <Navbar.Collapse id="basic-navbar-nav">
	          <Nav className="mr-auto">
	          </Nav>
	            Account: {this.state.account}
	            {this.state.network}
	        </Navbar.Collapse>
	      </Navbar>
	    );
6d678bd7f8add04367076c80b519a3e0|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|18|1|V|dockerfile
	COPY package.json ./
de2914c609b2cd1ab634885f48047435|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|20|1|V|dockerfile
	RUN yarn install --emoji true --dev
a02e0dd0eaede3fe1030058c2dda510f|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|21|1|V|dockerfile
	# add app
	COPY . ./
18237d48ef01749d1a52755fe61d6212|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|12|7|V|yaml
	      - /usr/app/node_modules
77f25702347a946c8bd0a85b34540463|file:///Users/vanities/git/fun/bitchan/js/src/App.js|84|1|V|javascript
	            Account: {this.state.account}
	            {this.state.network}
656f00e92de3544e3784fa339dce708e|file:///Users/vanities/git/fun/bitchan/js/src/App.js|81|1|V|javascript
	      <Navbar bg="dark" variant="dark" collapseOnSelect="true">
	        <Navbar.Brand href="#home">bitchan</Navbar.Brand>
	        <Navbar.Toggle aria-controls="basic-navbar-nav" />
	        <Navbar.Collapse id="basic-navbar-nav">
	          <Nav className="mr-auto">
	          </Nav>
	        </Navbar.Collapse>
	      </Navbar>
	    );
801020af60df8b19cc5c4fac4fa0f26b|file:///Users/vanities/git/fun/bitchan/js/src/App.js|34|1|V|javascript
	    const [isOpen, setIsOpen] = useState(false);
	    const toggle = () => setIsOpen(!isOpen);
51325ef5108ded198583ab037778208d|file:///Users/vanities/git/fun/bitchan/js/src/App.js|21|1|V|javascript
	  const [isOpen, setIsOpen] = useState(false);
	  const toggle = () => setIsOpen(!isOpen);
870f7ebf11e56871161d6f24730bd253|file:///Users/vanities/git/fun/bitchan/js/src/App.js|20|1|V|javascript
	const [isOpen, setIsOpen] = useState(false);
	const toggle = () => setIsOpen(!isOpen);
80689878685665f7fe7965ae20c45857|file:///Users/vanities/git/fun/bitchan/js/src/App.js|44|9|V|javascript
	        <Collapse isOpen={isOpen} navbar>
2afe476a19b4f22cf80aa9660ed21841|file:///Users/vanities/git/fun/bitchan/js/src/App.js|43|9|V|javascript
	        <NavbarToggler onClick={toggle} />
1e2b0fa1aee1655233258507e1aa4653|file:///Users/vanities/git/fun/bitchan/js/src/App.js|72|9|V|javascript
	        </Collapse>
abe3784a53d9ff35a8cc75e36e7168bd|file:///Users/vanities/git/fun/bitchan/js/src/App.js|4|3|V|javascript
	  Collapse,
47e30c0da50b91ee61705003a8ef641e|file:///Users/vanities/git/fun/bitchan/js/src/App.js|5|3|V|javascript
	  NavbarToggler,
bbf2d835fda92c4adcf4584749d4db6b|file:///Users/vanities/git/fun/bitchan/js/src/App.js|1|26|v|javascript
	 useState
e14c9029a065bbd297b30b6b8140bf2e|file:///Users/vanities/git/fun/bitchan/js/src/App.js|45|1|V|javascript
	            <NavItem>
	              <NavLink href="https://github.com/reactstrap/reactstrap">GitHub</NavLink>
	            </NavItem>
	            <UncontrolledDropdown nav inNavbar>
	              <DropdownToggle nav caret>
	                Options
	              </DropdownToggle>
	              <DropdownMenu right>
	                <DropdownItem>
	                  Option 1
	                </DropdownItem>
	                <DropdownItem>
	                  Option 2
	                </DropdownItem>
	                <DropdownItem divider />
	                <DropdownItem>
	                  Reset
	                </DropdownItem>
	              </DropdownMenu>
	            </UncontrolledDropdown>
8e7f3e7fd1948b8172b48d79be401391|file:///Users/vanities/git/fun/bitchan/js/src/App.js|9|1|V|javascript
	  UncontrolledDropdown,
	  DropdownToggle,
	  DropdownMenu,
	  DropdownItem,
097e0deabd3e95e06bdbb40960964682|file:///Users/vanities/git/fun/bitchan/js/src/App.js|1|1|V|javascript
	import React, { Component } from 'react'
	import Web3 from 'web3'
	import {
	  Navbar,
	  NavbarBrand,
	  Nav,
	  NavItem,
	  NavLink,
	  NavbarText
	} from 'reactstrap';
	
	// https://www.dappuniversity.com/articles/ethereum-dapp-react-tutorial
	//
	
	class App extends Component {
	  componentWillMount() {
	    this.loadBlockchainData()
	  }
	
	  async loadBlockchainData() {
	    const web3 = new Web3(Web3.givenProvider || "http://localhost:8545")
	    const accounts = await web3.eth.getAccounts()
	    const network = await web3.eth.net.getNetworkType()
	    this.setState({ account: accounts[0], network })
	  }
	
	  constructor(props) {
	    super(props)
	    this.state = { account: "", network: "" }
	  }
	
	  render() {
	    return (
	          <div>
	      <Navbar color="dark" dark expand="md">
	        <NavbarBrand href="/">bitchan</NavbarBrand>
	          <Nav className="mr-auto" navbar>
	            <NavItem>
	              <NavLink href="/components/">Components</NavLink>
	            </NavItem>
	          </Nav>
	          <NavbarText>
	            {this.state.account} on {this.state.network}
	          </NavbarText>
	      </Navbar>
	    </div>
	  );
	  }
	}
	
	export default App;
9f9708064ad2f980feaeba2cec4862fd|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|4|1|V|javascript
	  import Page1 from './page1';
	  import Page2 from './page2';
	  import Page3 from './page3';
edf94cd19507c4bd2dcb3bc4ce1105aa|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|14|1|V|javascript
	                <Route exactly component={Page1} pattern="/path1" />
	                <Route exactly component={Page2} pattern="/path2" />
	                <Route exactly component={Page3} pattern="/path3" />
e7536237a6b676e78f23d467a7e61c97|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|1|1|V|javascript
	  import React from 'react';
	  import { Link, Switch, Route } from 'react-router';
	  import Nav from './nav';
	
	  export default class App extends React.Component {
	    render() {    
	      return (
	        <div className="App">
	          <Router>
	            <div>
	              <Nav />
	              <Switch>
	                <Route exactly component={Landing} pattern="/" />
	                <Route component={Page404} />
	              </Switch>
	            </div>
	          </Router>
	        </div>
	      );
	    }
	  }
666b1d22087c875edf95358b7a14a9be|file:///Users/vanities/git/fun/bitchan/js/src/App.js|4|1|V|javascript
	import { Router, Route, Link } from 'react-router'
28d43ec025ec09941873204c96bbf919|file:///Users/vanities/git/fun/bitchan/js/src/App.js|14|17|V|javascript
	                <Route component={Page404} />
dcc5948b1fd43e20e33abb98a90bdb8e|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|11|1|V|javascript
	import { Link } from 'react-router';
03e43c52c6f529b6a2d2da665436cdf4|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|16|1|V|javascript
	  componentWillMount() {
	    this.loadBlockchainData()
	  }
	
	  async loadBlockchainData() {
	    const web3 = new Web3(Web3.givenProvider || "http://localhost:8545")
	    const accounts = await web3.eth.getAccounts()
	    const network = await web3.eth.net.getNetworkType()
	    this.setState({ account: accounts[0], network })
	  }
	
	  constructor(props) {
	    super(props)
	    this.state = { account: "", network: "" }
	  }
082c8e12c8af1069ad80a17af65c3fc5|file:///Users/vanities/git/fun/bitchan/js/src/App.js|10|3|V|javascript
	  componentWillMount() {
	    this.loadBlockchainData()
	  }
	
	  async loadBlockchainData() {
	    const web3 = new Web3(Web3.givenProvider || "http://localhost:8545")
	    const accounts = await web3.eth.getAccounts()
	    const network = await web3.eth.net.getNetworkType()
	    this.setState({ account: accounts[0], network })
	  }
643113ea088aab15847f737677d4617e|file:///Users/vanities/git/fun/bitchan/js/src/App.js|2|1|V|javascript
	import { BrowserRouter as Router, Switch, Route } from 'react-router';
4195465deda3a55aac162672fbfc03de|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|29|44|v|javascript
	 histoy:
d24840757e08123f234d3ea8d5269ebe|file:///Users/vanities/git/fun/bitchan/js/src/App.js|28|1|V|javascript
	                <Route exactly component={Home} pattern="/" />
864dfb187cff9dee4c16ed9794ed83c3|file:///Users/vanities/git/fun/bitchan/js/src/App.js|10|1|V|javascript
	function Home() {
	  return <h3>Home</h3>;
	}
53459e3b4a35c968092ef14f401a883b|file:///Users/vanities/git/fun/bitchan/js/src/App.js|32|1|V|javascript
	                <Route exact path="/">
	                  <Home />
	                </Route>
93e607bd97f202ccff42e5a99bc0e256|file:///Users/vanities/git/fun/bitchan/js/src/App.js|38|1|V|javascript
	                <Route exactly component={Board} pattern="/board" />
0cea32c30f9b0fd5a96d4bb71f27d90e|file:///Users/vanities/git/fun/bitchan/js/src/App.js|6|3|V|javascript
	  Link
1cb3c48c033b308d3cb858f46cc628e4|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|26|1|V|yaml
	                                                              --unlock "0x96afb074FBF48A2b12e31D5f1aB2112d7643801B"
e9dc6f0ea125ac9a9f79e4a3d3521eb9|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|51|1|V|javascript
	    module.exports = {
	// See <http://truffleframework.com/docs/advanced/configuration>  networks: {
447c479befe011881de87c3e32bd14d4|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|56|1|V|javascript
	  }
	};
269b70347fefe8729c6c2bddf13ddea4|file:///Users/vanities/git/fun/bitchan/solidity/build/contracts/User.json|3|1|V|json
	  "abi": [
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ],
51c2f7d40575dd470d01ae82c44008b8|file:///Users/vanities/git/fun/bitchan/js/src/App.js|11|1|V|javascript
	const NameContract = web3.eth.Contract(contract_abi, "0x5197D017Af1847e05e2b21d9EA6babA2F6007418");
62b227fee579badf62b29c02bcd993d8|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|1|V|javascript
	    const 
f540f61e93e54a0ec890b2aeaee68459|file:///Users/vanities/git/fun/bitchan/solidity/build/contracts/User.json|3|10|v|json
	[
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ],
d0399c187c964811f8c29f4b20376d12|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|5|V|javascript
	    const NameContract = await web3.eth.Contract(contract_abi, "0x5197D017Af1847e05e2b21d9EA6babA2F6007418");
0a2cd8621eb880327ec3b80a7bafe47f|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|28|1|V|solidity
	    function getOwner() public view returns (uint, address, string memory) {
	        return retrieve(0);
	    }
	    
b9f7bacb80a3d66e79a2f02ec60f6da1|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|32|53|v|solidity
	, address, string memory
6fd1cfd7f9361508812cff3da1cc9bf0|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|32|53|v|solidity
	 address,
0f4a02713503a1fa3040a260819dcea2|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|32|53|v|solidity
	 string
441967cccbff6662c5bf32962eac6b25|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|32|53|v|solidity
	 memory
e6a780ce6bd42b079ece8fc0f92f4d98|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|7|1|V|make
		truffle create migration deploy_user
b003d1fadd4ef464a0d59158b24ffbfd|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|8|10|v|make
	create migration deploy_user
dc91148a2553c685d786008aa74a31a8|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|40|1|V|solidity
	    function createUserIncrementsUserCount() public {
	        (id1, acc1, username1) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc1, acc1, "get owner returns the address of the user");
	        Assert.equal(username1, string(""), "get owner returns the username of the user");
	        
	        
	        (id2, acc2, username2) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc2, acc2, "get owner returns the address of the user");
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
	    }
f11fa607a2914b4ef2ddbc30430e3fe5|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|53|14|v|solidity
	createUserIncrementsUserCount
912dc765a076df24d868353d25b915aa|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|55|1|V|solidity
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
f7b5f78ab777d7d43d236738f59a5e84|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|54|55|v|solidity
	 owner returns the id of the user
6ca31cf6016e9df666220955c70096cf|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|7|5|V|solidity
	    User owner;
954ee5789e46d500d7d509998f1932e5|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|55|23|v|javascript
	// <--- Twice as much
0d8fb12056fb02de891e11aba8e54bb8|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1_initial_migration.js|4|1|V|javascript
	  deployer.deploy(Migrations);
22c7e883688e0f3ed43d381ac43656fe|file:///Users/vanities/git/fun/bitchan/solidity/contracts/User.sol|32|1|V|solidity
	    function getNumUsers() public view returns (uint) {
	        return userCount;
	    }
	    
5a79fa754bd666e6f24c0757ca27e6ee|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|52|1|V|solidity
	    function getNumUsersReturnsTotalUsers() public {
	        Assert.equal(user.getNumUsers(), uint(1), "get initial num of users");
	        (id1, acc1, username1) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc1, acc1, "get owner returns the address of the user");
	        Assert.equal(username1, string(""), "get owner returns the username of the user");
	        
	        
	        (id2, acc2, username2) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc2, acc2, "get owner returns the address of the user");
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
	    }
	}
41cea482047f0eecb52341ac6633cafd|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|51|1|V|solidity
	
	    function getNumUsersReturnsTotalUsers() public {
	        Assert.equal(user.getNumUsers(), uint(1), "get initial num of users");
	        (id1, acc1, username1) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc1, acc1, "get owner returns the address of the user");
	        Assert.equal(username1, string(""), "get owner returns the username of the user");
	        
	        
	        (id2, acc2, username2) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc2, acc2, "get owner returns the address of the user");
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
	    }
c2ce2f89f7f5ed9380fc2ddca1a3f372|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|49|1|V|solidity
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
d1a3e95335c6a7f35a3026c40a0e67c4|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|53|7|V|solidity
	      user.getNumUser()
a127fd1f86e4ab650f2216f09992afa4|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|53|22|v|solidity
	      
fdf65f9ebc8ff131074ad20499655755|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|53|40|v|solidity
	username2
96a265b78d2fd684d9e5f8a353a0fc36|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|53|53|v|solidity
	get owner returns the username of the user
2534ed1098ef0a0c8c09e1a24c09bdd4|file:///Users/vanities/git/fun/bitchan/solidity/tests/user_test.sol|39|1|V|solidity
	    function createUserIncrementsUserCount() public {
	        (id1, acc1, username1) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc1, acc1, "get owner returns the address of the user");
	        Assert.equal(username1, string(""), "get owner returns the username of the user");
	        
	        
	        (id2, acc2, username2) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc2, acc2, "get owner returns the address of the user");
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
	    }
	
	    function getNumUsersReturnsUserCount() public {
	        Assert.equal(user.getNumUsers(), uint(1), "gets correct number of users");
	        (id1, acc1, username1) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc1, acc1, "get owner returns the address of the user");
	        Assert.equal(username1, string(""), "get owner returns the username of the user");
	        
	        
	        (id2, acc2, username2) = user.create("some-username");
	        Assert.equal(id1, uint(0), "get owner returns the id of the user");
	        Assert.equal(acc2, acc2, "get owner returns the address of the user");
	        Assert.equal(username2, string(""), "get owner returns the username of the user");
	    }
2bc9f5d66d71e9155c3391c1150a66a3|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|14|2|v|make
	docker-compose run --rm node remix-tests
3dcfdc7b5edc2ca020b503f7e76c30af|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|191|68|v|javascript
	"0x5197D017Af1847e05e2b21d9EA6babA2F6007418"
7510efb46ef950a14b58b2aec201db35|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589480126_deploy_user.js|3|1|V|javascript
	  deployer.deploy(User);
5806fe225a01d3b7a49ce4ad14d40d84|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|1|V|javascript
	0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B
e951a04981e73f467783ae53dc8b6a51|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|25|1|v|javascript
	0x3841b2264769419bCdA141F2510fEefF1AFDfB7F"
1ee24e4c742f1d5d656f14f8e1e5304d|file:///Users/vanities/git/fun/bitchan/js/src/App.js|9|1|V|javascript
	function Home() {
	  return <h3>Number of users: this.state.num_users</h3>;
	}
9ecff3c59953387cbb0365a13f78f1d3|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|16|17|v|javascript
	ount() {
78eef5265164fa84247e937d509ff438|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|22|13|v|javascript
	counts = await web3.eth.getAccounts()
4c709b1d1df30bfd1597c407d85dbd0b|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|1|V|javascript
	    const contractAddress = "0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B"
	
	    const contract_abi = [
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ]
	    const UserContract = await new web3.eth.Contract(contract_abi, contractAddress);
	    const numUsers = UserContract.methods.userCount().call();
7a352c0ab62928d50bba6d96aad67a19|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|16|1|V|javascript
	  componentWillMount() {
	    this.loadBlockchainData()
	  }
0aa4d6cf100a128a888169ec563bc979|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|2|1|V|javascript
	import Web3 from 'web3'
1797bb370cb5d599fc4140331e653a73|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|59|v|javascript
	 numUsers:
64c568520fbd7f771a04ff9df7ca4495|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|59|v|javascript
	 numUsers
e43ece89a14b693e23092f5f47428f8f|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|29|44|v|javascript
	, numUsers: 0
68e4fcd72e87ba52e753d0af1b16fc7d|file:///Users/vanities/git/fun/bitchan/js/src/App.js|198|4|V|javascript
	   }
dd07567841d5ffb4b5fd484294ff9291|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|21|1|V|javascript
	    const web3 = new Web3(Web3.givenProvider || "http://localhost:8545")
1007101e2b7262f135368da107711454|file:///Users/vanities/git/fun/bitchan/js/src/App.js|33|1|V|javascript
	    const contract_abi = [
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ]
02f8943b7a71694a7d5bb091a473d292|file:///Users/vanities/git/fun/bitchan/js/src/App.js|28|7|V|javascript
	      this.state = { numUsers: }
eec16f31921ead2751e81d35270141ae|file:///Users/vanities/git/fun/bitchan/js/src/App.js|11|10|V|javascript
	function Home() {
	  return <h3>Number of users: this.state.numUsers</h3>;
593ee0c9b8dad2e13511c202edc8843d|file:///Users/vanities/git/fun/bitchan/js/src/App.js|11|1|V|javascript
	function Home() {
	  return <h3>Number of users: this.state.numUsers</h3>;
	}
0d0397a3c6a83f3d71733d1aecd199c6|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|51|1|V|javascript
	export default TopNav;
1036be73b917d0d354dfb811cf703892|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|168|16|v|javascript
	TopNav
fd362560a5b5053a2ba9b6c74caae762|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|167|1|V|javascript
	
	export default userAbi;
4e5f755e82a3b4b08414f373900e79c0|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|1|1|V|javascript
	export const userAbi = [
	  {
	  "inputs": [],
	  "payable": false,
	  "stateMutability": "nonpayable",
	  "type": "constructor"
	  },
	  {
	  "constant": true,
	  "inputs": [],
	  "name": "owner",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "id",
	      "type": "uint256"
	    },
	    {
	      "internalType": "address",
	      "name": "addr",
	      "type": "address"
	    },
	    {
	      "internalType": "string",
	      "name": "username",
	      "type": "string"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "view",
	  "type": "function"
	  },
	  {
	  "constant": true,
	  "inputs": [],
	  "name": "userCount",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "",
	      "type": "uint256"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "view",
	  "type": "function"
	  },
	  {
	  "constant": true,
	  "inputs": [
	    {
	      "internalType": "uint256",
	      "name": "",
	      "type": "uint256"
	    }
	  ],
	  "name": "users",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "id",
	      "type": "uint256"
	    },
	    {
	      "internalType": "address",
	      "name": "addr",
	      "type": "address"
	    },
	    {
	      "internalType": "string",
	      "name": "username",
	      "type": "string"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "view",
	  "type": "function"
	  },
	  {
	  "constant": true,
	  "inputs": [],
	  "name": "getOwner",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "",
	      "type": "uint256"
	    },
	    {
	      "internalType": "address",
	      "name": "",
	      "type": "address"
	    },
	    {
	      "internalType": "string",
	      "name": "",
	      "type": "string"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "view",
	  "type": "function"
	  },
	  {
	  "constant": true,
	  "inputs": [
	    {
	      "internalType": "uint256",
	      "name": "_id",
	      "type": "uint256"
	    }
	  ],
	  "name": "retrieve",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "",
	      "type": "uint256"
	    },
	    {
	      "internalType": "address",
	      "name": "",
	      "type": "address"
	    },
	    {
	      "internalType": "string",
	      "name": "",
	      "type": "string"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "view",
	  "type": "function"
	  },
	  {
	  "constant": false,
	  "inputs": [
	    {
	      "internalType": "string",
	      "name": "_username",
	      "type": "string"
	    }
	  ],
	  "name": "create",
	  "outputs": [
	    {
	      "internalType": "uint256",
	      "name": "",
	      "type": "uint256"
	    },
	    {
	      "internalType": "address",
	      "name": "",
	      "type": "address"
	    },
	    {
	      "internalType": "string",
	      "name": "",
	      "type": "string"
	    }
	  ],
	  "payable": false,
	  "stateMutability": "nonpayable",
	  "type": "function"
	  }
	]
b41e34ff5bcc6aa7979d1f119256668a|file:///Users/vanities/git/fun/bitchan/js/src/App.js|28|7|v|javascript
	const web3 = new Web3(Web3.givenProvider || "http://localhost:8545");
7e95ab7d3c9e26505c4460c96d24375a|file:///Users/vanities/git/fun/bitchan/js/src/App.js|29|7|v|javascript
	const contractAddress = "0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B";
c9fc3290cf91c09db0cbc38ab5dec5e8|file:///Users/vanities/git/fun/bitchan/js/src/App.js|32|7|v|javascript
	const UserContract = await new web3.eth.Contract(userAbi, contractAddress);
1095746c84cbbcd0ca2615f76991d162|file:///Users/vanities/git/fun/bitchan/js/src/App.js|33|7|v|javascript
	const numUsers = UserContract.methods.userCount().call();
60d1d653c75b0a1ee932f70b3573a9db|file:///Users/vanities/git/fun/bitchan/js/src/App.js|38|35|v|javascript
	{this.state.numUsers}
1e8c16a0f4543e7a3d31c559d9a204d0|file:///Users/vanities/git/fun/bitchan/js/src/App.js|21|48|v|javascript
	ddUser.bind
9b03dbb48f164dbe8565fa5511d77894|file:///Users/vanities/git/fun/bitchan/js/src/App.js|21|36|v|javascript
	addUser
35e004eedc50ee1443ca2ca7c5477fd4|file:///Users/vanities/git/fun/bitchan/js/src/App.js|21|12|v|javascript
	loadBlockchainData
0f8d545b0106392e498553a0ebea5bfe|file:///Users/vanities/git/fun/bitchan/js/src/App.js|21|7|V|javascript
	      this.loadBlockchainData=this.loadBlockchainData.bind(this);
eee4a5959c5a8841f47f130ba09c831f|file:///Users/vanities/.config/nvim/init.vim|111|1|V|vim
	let g:ale_fixers = {
	 \ 'javascript': ['prettier']
	 \ }
320b09c28d67be6610dc8c1570c8496f|file:///Users/vanities/.config/nvim/init.vim|94|1|V|vim
	Plug 'w0rp/ale'
9d1b805f0b650a9f484d7f3db104f87f|file:///Users/vanities/git/fun/bitchan/solidity/%5BPlugins%5D|6|1|V|vim-plug
	~ /Users/vanities/.config/nvim/plugged/ale/
	    Invalid URI: https://github.com/w0rp/ale.git
432715596d17306860f3699c5573338c|file:///Users/vanities/.config/nvim/init.vim|95|1|V|vim
	Plug 'sbdchd/neoformat'
2eeb238486f39d0c90ddebd04fe685d0|file:///Users/vanities/.config/nvim/init.vim|98|1|V|vim
	autocmd BufWritePre,TextChanged,InsertLeave *.js Neoformat
	autocmd FileType javascript setlocal formatprg=prettier\ --single-quote\ --trailing-comma\ es5
7885a6fae90b06be23bc71690a4a3394|file:///Users/vanities/git/fun/bitchan/js/src/App.js|22|1|V|javascript
	    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
	    const contractAddress = '0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B';
ac7fc650ac0d499259fbe684092598ed|file:///Users/vanities/git/fun/bitchan/js/src/App.js|24|5|V|javascript
	    console.log(userAbi);
4ec0deb3459add99dc31b965bf5587e1|file:///Users/vanities/git/fun/bitchan/js/src/App.js|22|1|V|javascript
	    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
	    const contractAddress = '0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B';
	    const UserContract = new web3.eth.Contract(userAbi, contractAddress);
	    const numUsers = await UserContract.methods.userCount().call();
18ae853c880dd53e1d1e4f5973bb9b46|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|1|1|V|javascript
	export const userAbi = [
	  {
	    inputs: [],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'constructor',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'owner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'userCount',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    name: 'users',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'getOwner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '_id',
	        type: 'uint256',
	      },
	    ],
	    name: 'retrieve',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: false,
	    inputs: [
	      {
	        internalType: 'string',
	        name: '_username',
	        type: 'string',
	      },
	    ],
	    name: 'create',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'function',
	  },
	];
f7905474ae3877a959e55c0ecc9469d6|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|1|14|v|javascript
	userAbi = [
	  {
	    inputs: [],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'constructor',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'owner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'userCount',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    name: 'users',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'getOwner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '_id',
	        type: 'uint256',
	      },
	    ],
	    name: 'retrieve',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: false,
	    inputs: [
	      {
	        internalType: 'string',
	        name: '_username',
	        type: 'string',
	      },
	    ],
	    name: 'create',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'function',
	  },
	]
f309da5ffc8b2545e6eb1a81d084cd77|file:///Users/vanities/git/fun/bitchan/js/src/App.js|22|11|v|javascript
	web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
0f11c7c3899f7842b7e2d9da21db7de7|file:///Users/vanities/git/fun/bitchan/js/src/App.js|23|11|v|javascript
	contractAddress = '0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B';
2ac7acb1fdf449f92a539e88f54d36f3|file:///Users/vanities/git/fun/bitchan/js/src/App.js|24|11|v|javascript
	UserContract = new web3.eth.Contract(userAbi, contractAddress);
1b0430c33ca4dc5e35f0e9b6616dd295|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|22|12|v|yaml
	trufflesuite/ganache-cli
7b3a9967bb2b2c2158836622f5b9a16f|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|22|35|v|yaml
	i
	    ports
ad20b21827b5c5979e977b27e688cb25|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|20|1|V|yaml
	
	  truffle:
	    image: trufflesuite/ganache-cli:next
	    ports:
	      - 8545:8545
	    command: >
	      ganache-cli \
	      --account="0x2264248e750146323373851aec1f3f700f6d9ed0ebdc934137c9e007a047197f,1000000000000000000" \
	      --unlock "0x96afb074FBF48A2b12e31D5f1aB2112d7643801B"
	    restart: on-failure
1aaab4fcfcc1f8de0cfe1f6a5e1966e1|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|9|1|V|yaml
	
	  test:
	    build:
	      context: ./
	      dockerfile: ./Dockerfile.test
	    volumes:
	      - .:/sources 
	    restart: on-failure
	    depends_on:
	      - ethereum-local
48769b9fe7c7188940911d8b07e2ce9f|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|12|1|V|yaml
	    ports:
	      - 8545:8545
ec69e37deb650508c6b72a5d7265d3db|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|6|1|V|yaml
	    volumes:
	      - .:/sources 
2bae883161561ee5537ad672145b2044|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|18|5|V|yaml
	    restart: on-failure
552231a2e468cf70017c50f9f94c20e9|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|13|1|v|make
	build_test:
4361491679eaae912f6422fb08e1ffed|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|13|1|V|make
	j
		docker-compose build test
530b70431322084e045540728718caa0|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|14|58|v|make
	/user_test.sol
7fbeb657b613ac8044db19fbb3031cb5|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|13|7|v|make
	build_test
12af2907b837fbc8e7770b0f736904c8|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|15|1|V|yaml
	      ganache-cli \
	      --account="0x2264248e750146323373851aec1f3f700f6d9ed0ebdc934137c9e007a047197f,1000000000000000000" \
	      --unlock "0x96afb074FBF48A2b12e31D5f1aB2112d7643801B"
92f7b6025975c9c84ff2c422a96a900a|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|14|31|v|make
	truffle test /sources/tests
ada6ebf7cb25e389fdd2e71cbc4c4076|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|14|5|V|yaml
	    command: >
81bd60998140a836b913cecef63790cf|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|11|25|v|yaml
	trufflesuite/ganache-cli:next
e23b261df5a54e2eace261a214248691|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|14|53|v|yaml
	 /sources/tests
45131125ef84c6217dd6d2868d9997c4|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|17|1|V|yaml
	    depends_on:
	      - ethereum-local
fe4934651e4be1ec724ca6905a96f9cb|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|18|9|v|yaml
	ethereum-local
8566b22c94847640dd48a68d0903af1f|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|17|1|V|yaml
	    depends_on:
	      - truffle
698629bbca49fba55515809e55f08fc3|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|55|1|V|javascript
	      gas: 2000000,
	      gasPrice: 10000000000,
e3c948200cc7f3cd1f403fe2e2292605|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|53|1|V|javascript
	    development: {
	      host: 'localhost',
	      port: 8545,
	      network_id: '*', // Match any network id
	    },
0cf31b2c283ce3431794586df7b0996d|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|52|4|V|javascript
	    
285f2b8938932809aaf286f35102f488|file:///Users/vanities/git/fun/bitchan/solidity/truffle-config.js|44|5|^v|javascript
	//
	//
	//
	//
	//
c65c9768e04a082fe3a5aa462b1f614e|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|16|1|V|make
	test: build_truffle
		docker-compose run --rm truffle truffle test /sources/tests
80f25f66ea9dbbef843182e37e572084|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|20|42|v|make
	test /sources/tests
67740a774ededf38b23564798cd1ce1d|file:///Users/vanities/git/fun/bitchan/solidity/test/user_test.sol|2|1|V|solidity
	import "remix_tests.sol"; // injected by remix-tests
1ad7edc0d849825d6ac42586eca6784b|file:///Users/vanities/git/fun/bitchan/solidity/test/user_test.sol|2|1|V|solidity
	///import "remix_accounts.sol";
36da627a554042a0dcd65601086b85a2|file:///Users/vanities/git/fun/bitchan/solidity/test/user_test.sol|3|1|V|solidity
	import "truffle/Assert.sol";
	import "truffle/DeployedAddresses.sol";
ddaa410210fcc7da81213630f3ac991e|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|21|2|V|make
		docker-compose run --rm truffle truffle migrate
cec655bce238dc4944791bd8f081b885|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|20|33|v|make
	 truffle migrate
baedb53e845ae71f13945fcc00572ae9|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|22|2|v|make
	docker-compose
5485dddbce3115a704d7e5160b63bf7e|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|22|2|v|make
	 run
4772f10f56551b6adf3f65de225d0c38|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|22|2|v|make
	 --rm
328607087ec4cbe6938f273bbdf462a7|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|22|3|v|make
	truffle
ae2e73f89c4be698c2cbd7a81fa249c0|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|9|1|V|make
	migrate:
		truffle create migration deploy_user
		truffle migrate
73e8261bfe5d33ef2077043190cd3bc5|file:///Users/vanities/git/fun/bitchan/solidity/build/contracts/User.json|3|1|v|json
	  "abi": [
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getNumUsers",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ],
f7c64994bc100ffcb6ec0d73e9938e2d|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|1|10|v|javascript
	[
	    {
	      "inputs": [],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "constructor"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "owner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "userCount",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "name": "users",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "id",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "addr",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "username",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getOwner",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [],
	      "name": "getNumUsers",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": true,
	      "inputs": [
	        {
	          "internalType": "uint256",
	          "name": "_id",
	          "type": "uint256"
	        }
	      ],
	      "name": "retrieve",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "view",
	      "type": "function"
	    },
	    {
	      "constant": false,
	      "inputs": [
	        {
	          "internalType": "string",
	          "name": "_username",
	          "type": "string"
	        }
	      ],
	      "name": "create",
	      "outputs": [
	        {
	          "internalType": "uint256",
	          "name": "",
	          "type": "uint256"
	        },
	        {
	          "internalType": "address",
	          "name": "",
	          "type": "address"
	        },
	        {
	          "internalType": "string",
	          "name": "",
	          "type": "string"
	        }
	      ],
	      "payable": false,
	      "stateMutability": "nonpayable",
	      "type": "function"
	    }
	  ],
	
bf770d57bbb5930cf5c12fb098f36271|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|182|1|V|javascript
	  [
	  {
	    inputs: [],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'constructor',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'owner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'userCount',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    name: 'users',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'getOwner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '_id',
	        type: 'uint256',
	      },
	    ],
	    name: 'retrieve',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: false,
	    inputs: [
	      {
	        internalType: 'string',
	        name: '_username',
	        type: 'string',
	      },
	    ],
	    name: 'create',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'function',
	  },
	];
b446f88d09376881001fae7784465acb|file:///Users/vanities/git/fun/bitchan/js/src/App.js|22|5|v|javascript
	const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
	    const contractAddress = '0x0C42Db7ae6230c778B1F6e05AfDF278216EA1B8B';
	    const UserContract = new web3.eth.Contract(userAbi, contractAddress);
	    const numUsers = await UserContract.methods.getNumUsers().call();
201a03050285b4c6cf56661992cf5e2d|file:///Users/vanities/git/fun/bitchan/js/src/user_abi.js|1|1|V|javascript
	export const userAbi = [
	  {
	    inputs: [],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'constructor',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'owner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'userCount',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    name: 'users',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: 'id',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: 'addr',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: 'username',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'getOwner',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [],
	    name: 'getNumUsers',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: true,
	    inputs: [
	      {
	        internalType: 'uint256',
	        name: '_id',
	        type: 'uint256',
	      },
	    ],
	    name: 'retrieve',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'view',
	    type: 'function',
	  },
	  {
	    constant: false,
	    inputs: [
	      {
	        internalType: 'string',
	        name: '_username',
	        type: 'string',
	      },
	    ],
	    name: 'create',
	    outputs: [
	      {
	        internalType: 'uint256',
	        name: '',
	        type: 'uint256',
	      },
	      {
	        internalType: 'address',
	        name: '',
	        type: 'address',
	      },
	      {
	        internalType: 'string',
	        name: '',
	        type: 'string',
	      },
	    ],
	    payable: false,
	    stateMutability: 'nonpayable',
	    type: 'function',
	  },
	];
91614b22105448e82f0bb207a284959c|file:///Users/vanities/git/fun/bitchan/solidity/test/user_tests.js|1|37|v|javascript
	MetaCoin
57f2db38462659c808c2e969f822a024|file:///Users/vanities/git/fun/bitchan/solidity/test/user_tests.js|4|14|v|javascript
	put 10000 MetaCoin in the first account
4b5ec3966df24203a911670fb34b96bc|file:///Users/vanities/git/fun/bitchan/solidity/test/user_tests.js|6|52|v|javascript
	accounts[0]
6ebb4d11e6b310b153d7c826431034b2|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|12|1|V|make
	test: build_truffle
		docker-compose run --rm truffle truffle test --stacktrace
e87de32c836bbaf23766292c230a8486|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|19|42|v|make
	test --stacktrace
93735cd742fbfd0bc4709b8eab7b7a9c|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589511233_deploy_user.js|3|19|v|javascript
	Migrations
dfa80a13de00ed50fc958581cdf5765e|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1_initial_migration.js|1|1|V|javascript
	const Migrations = artifacts.require("Migrations");
bcb093236a6969205d37aa6acf021156|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589511233_deploy_user.js|1|6|v|javascript
	 igrations
5ad5adf4065d5da7548dd4f2a80c0486|file:///Users/vanities/git/fun/bitchan/solidity/contracts/Migrations.sol|27|1|V|solidity
	
	pragma solidity >=0.4.21 <0.7.0;
	
	contract Migrations {
	  address public owner;
	  uint public last_completed_migration;
	
	  constructor() public {
	    owner = msg.sender;
	  }
	
	  modifier restricted() {
	    if (msg.sender == owner) _;
	  }
	
	  function setCompleted(uint completed) public restricted {
	    last_completed_migration = completed;
	  }
	}
7297b6785083d976196eb3e4130fdd45|file:///Users/vanities/git/fun/bitchan/solidity/contracts/Migrations.sol|30|1|V|solidity
	contract Migrations {
	  address public owner;
	  uint public last_completed_migration;
	
	  constructor() public {
	    owner = msg.sender;
	  }
	
	  modifier restricted() {
	    if (msg.sender == owner) _;
	  }
	
	  function setCompleted(uint completed) public restricted {
	    last_completed_migration = completed;
	  }
	}
6d0a8d9d3f0bb1d7be74f072e34a3f94|file:///Users/vanities/git/fun/bitchan/solidity/contracts/Migrations.sol|28|1|V|solidity
	pragma solidity >=0.4.21 <0.7.0;
f93b019e406981833680927b9f81cba6|file:///Users/vanities/git/fun/bitchan/solidity/contracts/Migrations.sol|2|1|V|solidity
	 pragma solidity ^0.4.8;
c66b7986d04ba6e8c4f46c14f2120047|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|15|1|V|make
	migrate: build_truffle
		docker-compose run --rm truffle bash -c "truffle create migration deploy_user && \
a129cdbb292dd9b3f016968683bac156|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|19|51|v|make
	create migration deploy_user && \
75c28c4702d0ce55edfaa812d018478d|file:///Users/vanities/git/fun/bitchan/solidity/contracts/Migrations.sol|22|1|V|solidity
	  function upgrade(address new_address) restricted {
	    Migrations upgraded = Migrations(new_address);
	    upgraded.setCompleted(last_completed_migration);
1fdb5e20e4a2a6af3654e71ac3ff355c|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589517228_deploy_user.js|5|3|V|javascript
	  //
44b099eb9d916e7e9b3ebba3db08a5c9|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589517228_deploy_user.js|5|19|v|javascript
	TodoList
9343abd2faad518f8d373a86f6e7b007|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|20|3|V|make
												 truffle migrate"
66a7ad43854c05b5a036c10aced80b23|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|20|34|v|make
	bash -c "truffle create migration deploy_user && \
e23b76b30e0b2b506d9c588b8e8d589d|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|16|70|v|make
	 && \
23ef63ac206076ca3f788bcda243f97a|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589517228_deploy_user.js|1|1|V|javascript
	var User = artifacts.require('../contracts/User.sol');
	
	module.exports = function (_deployer) {
	  // Use deployer to state migration tasks.
	  deployer.deploy(User);
	};
cdca5ce4b31c025e81eb2ba6c1d23af5|file:///Users/vanities/git/fun/bitchan/solidity/migrations/1589517841_deploy_user.js|7|1|V|javascript
	module.exports = function(_deployer) {
	  // Use deployer to state migration tasks.
	};
9f29e5f56920f2489385bcd49f6cea1f|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|3|1|V|make
	compile:
		docker-compose run --rm solidity -o /sources/output --abi --bin /sources/Bitchan.sol
7b4aaf500d8c80878a3073e1b79053ca|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|4|3|v|make
	docker-compose run --rm solidity -o /sources/output --abi --bin /sources/Bitchan.sol
a30151ceb5c06052cac9e899b97ffcef|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|5|26|v|make
	solidity -o /sources/output --abi --bin /sources/Bitchan.sol
dfe9d7171a27b56c0b4e1c7373b04b28|file:///Users/vanities/.ssh/config|38|1|V|sshconfig
	Host pi
	    HostName 192.168.1.27
	    User root
63a9f0ea7bb98050796b649e85481845|file:///Users/vanities/.ssh/config|44|10|v|sshconfig
	root
1367a65f2ba023596ed847ebc8789060|file:///Users/vanities/.ssh/config|45|1|V|sshconfig
	ssh 'pi@192.168.1.20'
bdecf36ff0186b3758871deaf6f98fba|file:///Users/vanities/tmux_miners|24|1|V|sh
	tmux new-window -t $SESSION:7 -n 'pc'
	tmux send-keys "ssh pc" C-m
8c7b47457a91ae818b6ad201353c5e76|file:///Users/vanities/tmux_miners|27|1|V|sh
	tmux new-window -t $SESSION:8 -n 'pi'
	tmux send-keys "ssh pi" C-m
36f6b4de75a08d7f4589bf7c1ee0bc32|file:///Users/vanities/git/fun/bitchan/solidity/docker-compose.yml|4|1|V|yaml
	  solidity:
	    image: ethereum/solc:stable
	    volumes:
	      - .:/sources 
	
	  truffle:
	    build:
	      context: ./
	      dockerfile: ./Dockerfile.truffle
	    working_dir: /sources/solidity
	    volumes:
	      - .:/sources 
	    depends_on:
	      - ganache
	
	
	  ganache:
	    image: trufflesuite/ganache-cli:next
	    ports:
	      - 9545:8545
	    command: >
	      ganache-cli \
	      --account="0x2264248e750146323373851aec1f3f700f6d9ed0ebdc934137c9e007a047197f,1000000000000000000" \
	      --unlock "0x96afb074FBF48A2b12e31D5f1aB2112d7643801B"
	    restart: on-failure
f14b7fc33725957cc867c795c96f8533|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|6|21|v|yaml
	bitchan-dev
3c0cad22075d5d14bad92a1ef8475a46|file:///Users/vanities/git/fun/bitchan/solidity/Makefile|2|1|V|make
	
	compile:
		#docker-compose run --rm solidity -o /sources/output --abi --bin /sources/Bitchan.sol
		docker-compose run --rm truffle truffle compile
	
	down: 
		docker-compose down --remove-orphans
	
	build_truffle:
		docker-compose build truffle
	
	test: build_truffle
		docker-compose run --rm truffle truffle test --stacktrace
	
	migrate-new: build_truffle
		docker-compose run --rm truffle truffle create migration deploy_user
	
	migrate: build_truffle
		docker-compose run --rm truffle truffle migrate
	
	migrate-reset: build_truffle
		docker-compose run --rm truffle truffle migrate --reset
	
	deploy: build_truffle
		docker-compose run --rm truffle truffle deploy
a53a148fbecd19a87b8ffc07b245212d|file:///Users/vanities/git/fun/bitchan/Makefile|19|1|V|make
	
	down: 
		docker-compose down --remove-orphans
146f3e248ba5132b02fc82bfcd44f548|file:///Users/vanities/git/fun/bitchan/js/src/Login.js|25|1|V|javascript
	      <FormGroup>
	        <Label for="exampleSelect">Select</Label>
	        <Input type="select" name="select" id="exampleSelect">
	          <option>1</option>
	          <option>2</option>
	          <option>3</option>
	          <option>4</option>
	          <option>5</option>
	        </Input>
	      </FormGroup>
	      <FormGroup>
	        <Label for="exampleSelectMulti">Select Multiple</Label>
	        <Input
	          type="select"
	          name="selectMulti"
	          id="exampleSelectMulti"
	          multiple
	        >
	          <option>1</option>
	          <option>2</option>
	          <option>3</option>
	          <option>4</option>
	          <option>5</option>
	        </Input>
	      </FormGroup>
	      <FormGroup>
	        <Label for="exampleText">Text Area</Label>
	        <Input type="textarea" name="text" id="exampleText" />
	      </FormGroup>
	      <FormGroup>
	        <Label for="exampleFile">File</Label>
	        <Input type="file" name="file" id="exampleFile" />
	        <FormText color="muted">
	          This is some placeholder block-level help text for the above input.
	          It's a bit lighter and easily wraps to a new line.
	        </FormText>
	      </FormGroup>
	      <FormGroup tag="fieldset">
	        <legend>Radio Buttons</legend>
	        <FormGroup check>
	          <Label check>
	            <Input type="radio" name="radio1" /> Option one is this and that—be
	            sure to include why it's great
	          </Label>
	        </FormGroup>
	        <FormGroup check>
	          <Label check>
	            <Input type="radio" name="radio1" /> Option two can be something
	            else and selecting it will deselect option one
	          </Label>
	        </FormGroup>
	        <FormGroup check disabled>
	          <Label check>
	            <Input type="radio" name="radio1" disabled /> Option three is
	            disabled
	          </Label>
	        </FormGroup>
	      </FormGroup>
	      <FormGroup check>
	        <Label check>
	          <Input type="checkbox" /> Check me out
	        </Label>
	      </FormGroup>
c7ad7cdd1bd709708dd5694ae5ab848d|file:///Users/vanities/git/fun/bitchan/js/src/SignUp.js|16|1|V|javascript
	      <FormGroup>
	        <Label for="examplePassword">Password</Label>
	        <Input
	          type="password"
	          name="password"
	          id="examplePassword"
	          placeholder="password placeholder"
	        />
	      </FormGroup>
7cfb26e365212a2626d500784e339575|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|22|5|V|javascript
	    await web3.ethereum.enable();
88723e7e654f94b6eed8c993a397f070|file:///Users/vanities/git/fun/bitchan/js/src/App.js|11|1|V|javascript
	function SignUp)
9ed138dcb56fab74c4015ab851e0e6b1|file:///Users/vanities/git/fun/bitchan/js/src/index.js|9|1|V|javascript
	    <Web3Provider>
a319c5276c4422f5f689b797c568ebf1|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailible.js|7|1|V|javascript
	It seems that you don&apos;t have an ETH account selected. If using
	MetaMask, please make sure that your wallet is unlocked and that
da89f32121152361fbfdbb54dfc77b48|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailible.js|7|1|v|javascript
	you have at least one account in your accounts list
be218e7b0bb8d58bbc3a94c247674bf1|file:///Users/vanities/git/fun/bitchan/js/src/index.js|11|41|v|javascript
	"AccountUnavailable.js"
fcdfc3d8e30da9c4fff9cac480b17c7d|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailable.js|2|1|V|javascript
	const ErrorTemplate = require('./ErrorTemplate');
2eb7513ba57bece767f6704379cc8e90|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailable.js|5|1|V|javascript
	export const AccountUnavailable = ErrorTemplate.bind(null, {
	  title: 'No ETH Account Available',
	  message: `Come back when you figure out how to web3.`,
	});
43cf22a9b22d3968007d0f1b96dafca3|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailable.js|2|1|V|javascript
	import { ErrorTemplate } from 'react-web3';
c838bb226d372d80b58878690be69a49|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailable.js|5|1|V|javascript
	export default AccountUnavailable;
528776539bdf76e611fc08b0ccc49b92|file:///Users/vanities/git/fun/bitchan/js/src/AccountUnavailable.js|3|1|V|javascript
	export web3UnavailableScreen={() => <div>You need web3!</div>};
528ca260cbf9f0cac739b455379bfead|file:///Users/vanities/git/fun/bitchan/js/src/index.js|13|63|v|javascript
	AccountUnavailable
acc493d3a63ca9ec6b3880213c130f86|file:///Users/vanities/git/fun/bitchan/js/src/index.js|7|1|V|javascript
	import { AccountUnavailable } from './AccountUnavailable';
2d9779388690487ee092a7e9fd2e065c|file:///Users/vanities/git/fun/bitchan/js/src/index.js|9|1|V|javascript
	web3UnavailableScreen={() => <div>You need web3!</div>};
2bb19cc9e7934afd2d273a7a21f38317|file:///Users/vanities/git/fun/bitchan/js/src/index.js|9|24|v|javascript
	() => 
08bb108f4318cdce6742408eedb0e031|file:///Users/vanities/git/fun/bitchan/js/src/ErrorTemplate.js|16|1|V|javascript
	const React = require('react');
	const IconNoWeb3 = require('./IconNoWeb3');
	const stylesheet = require('./stylesheet');
	
	function ErrorTemplate(props) {
	  return (
	    <div className="Web3Provider-container">
	      <style dangerouslySetInnerHTML={{ __html: stylesheet }} />
	      <div className="Web3Provider-wrapper">
	        <div className="Web3Provider-image">
	          <IconNoWeb3 />
	        </div>
	        <h1
	          className="Web3Provider-title"
	          dangerouslySetInnerHTML={{ __html: props.title }}
	        />
	        <p
	          className="Web3Provider-message"
	          dangerouslySetInnerHTML={{ __html: props.message }}
	        />
	      </div>
	    </div>
	  );
	}
	
	module.exports = ErrorTemplate;
6d0cea63972a8c33f6d84aa11e144718|file:///Users/vanities/git/fun/bitchan/js/src/ErrorTemplate.js|7|1|V|javascript
	It seems that you are using a browser without Web3 capabilities. Please
	make sure that you are using a web3-capable browser like mist or parity.
	If you are using MetaMask or Parity extension, make sure that it is
	enabled.
d7753867476f5e90e5717e27f93f124b|file:///Users/vanities/git/fun/bitchan/js/src/index.js|11|42|v|javascript
	web3UnavailableScreen
279fe39502bfc55511ffd16dac8e8d3a|file:///Users/vanities/git/fun/bitchan/js/src/ErrorTemplate.js|8|1|V|javascript
	
	module.exports = Web3Unavailable;
12e69035ce1f9c16dd611e501bdff41a|file:///Users/vanities/git/fun/bitchan/js/src/ErrorTemplate.js|4|43|v|javascript
	 const Web3Unavailable = ErrorTemplate.bind(null, {
865069d4f94b2e564fe76048b02803cd|file:///Users/vanities/git/fun/bitchan/js/src/ErrorTemplate.js|9|1|V|javascript
	module.exports = Web3Unavailable;
c8b679c727bab4b340e4edb6e5b6c7c3|file:///Users/vanities/git/fun/bitchan/js/src/index.js|7|36|v|javascript
	ErrorTemplate.js
94d333933de0176447fc8b2274b9d1ca|file:///Users/vanities/git/fun/bitchan/js/src/Web3Unavailable.js|2|1|V|javascript
	const React = require('react');
ad4e206408c1c59bfb8a057ba7857446|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|22|15|v|javascript
	Context
68ced0e3d5816beb04ecb0d27742bf72|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|21|5|V|javascript
	    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
27ccc4679ef95eea51c5b28ea6e161b6|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|21|5|V|javascript
	    const web3 = context.web3;
d9ce54080fc2e0f858c4c1145997d069|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|51|1|v|javascript
	SomeComponent
84e18ced69b2d00b5705ced5cda1c21a|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|24|27|v|javascript
	web3.eth.net.getNetworkType();
8a9b1e648b690164163c3e23ad65be72|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|22|1|V|javascript
	    const web3 = new Web3(Web3.givenProvider || 'http://localhost:8545');
	    const accounts = await web3.eth.getAccounts();
	    const network = await web3.eth.net.getNetworkType();
	    this.setState({ account: accounts[0], network: network });
b99889e918e42f94f376244f5bc9d164|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|27|29|v|javascript
	eth.net.getNetworkType()
1d0a744d3ec54b4a9f848c33d5735bf9|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|17|1|V|javascript
	  componentWillMount() {
	    this.loadBlockchainData();
	  }
	
	  async loadBlockchainData() {}
	
50d4f29b8c580f91b684db67825c48f8|file:///Users/vanities/git/fun/bitchan/js/package.json|26|5|V|json
	    "@drizzle/react-components": "1.5.1",
cb319a1904bd9894aa2def1878809274|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|1|1|V|yaml
	version: '3.7'
	
	services:
	
	  react:
	    container_name: react
	    build:
	      context: ./js
	      dockerfile: ./Dockerfile
	    volumes:
	      - ./js/src:/bitchan/src
	    ports:
	      - 3001:3000
	    environment:
	      - NODE_ENV=development
	      - CHOKIDAR_USEPOLLING=true
	    tty: true
	    depends_on:
	      - ganache
	
bd6c624daad4e48c21783cff10d60340|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|7|1|V|yaml
	    build:
	      context: ./js
	      dockerfile: ./Dockerfile
96bd0f27087af14ebe70d8acc82b453a|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|17|10|v|dockerfile
	https://terraria.org/system/dedicated_servers/archives/000/000/036/original/terraria-server-1402.zip
2561903b41d90fdd2c2779c8cc11e106|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|27|1|V|dockerfile
	
	# Commit Hash Metadata
	ARG VCS_REF
	LABEL org.label-schema.vcs-ref=$VCS_REF \
	    org.label-schema.vcs-url="https://github.com/beardedio/terraria"
	
	# Allow for external data
	VOLUME ["/config"]
	
	# Run the server
	WORKDIR /vanilla
	CMD ["./run.sh"]
359e6eceb59e74f4d1b96467ac3f62b0|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|25|5|v|dockerfile
	if [ ! -f /vanilla/TerrariaServer ]; then echo "Missing /vanilla/TerrariaServer"; exit 1; fi && \
ff63204b65fabafb9ce637380eddff2c|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|22|5|V|dockerfile
	    mv */Windows/serverconfig.txt /vanilla/serverconfig-default.txt && \
a3dbcc9cead9dc021aa26699e4432911|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|1|1|V|yaml
	#!/bin/bash
	tmux attach -t terraria
3ca2d1aabed23b9752da4d15e33e1994|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|7|17|v|yaml
	/containers/vanilla/1.4.0.1
965fe18174d58a24e63e3fa7a6d1ed4c|file:///Users/vanities/git/fun/pi/terraria/bin/install|4|1|V|
	systemctl start terraria-server.service
4399fd490541130b911342ae83fc965b|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|5|12|v|yaml
	vanities/bitchan
3cb1694141ab94dd52bb1d279f3cf493|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|10|12|v|yaml
	bitchan
a4c6efc45463660d16f9a022e2d638b1|file:///Users/vanities/git/work/funfunfun-backend/requirements.txt|2|1|V|text
	web3==5.7.0
0269221b85650006d2d08264be21338e|file:///Users/vanities/git/work/funfunfun-backend/requirements.txt|2|1|V|text
	django-web3-auth==0.1.0
f22f243c69021f81ef9e0f53f624163f|file:///Users/vanities/git/work/funfunfun-backend/scripts/seed_database|14|64|v|python
	mischke@protonmail.com
d854f4692cf16392e690b52c6ea636a9|file:///Users/vanities/git/work/funfunfun-backend/scripts/seed_database|14|64|v|python
	dmischke@protonmail.com
ed9f4b8f879ddbb59fda1057ea3a2810|file:///Users/vanities/git/work/funfunfun-backend/scripts/seed_database|3|1|V|python
	import os
b43fdd98b1fd705ae4c3a10cf25aad8a|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|5|22|v|yaml
	backend
0b9fa25eb27c0ea951c5444b7d7b3259|file:///Users/vanities/git/work/funfunfun-backend/requirements.txt|2|1|V|text
	web3==5.7.0
	django-web3-auth==0.1.0
e8b7e9741eda8ce6a896222052872f66|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/urls.py|6|1|V|python
	
	from web3auth import urls as web3auth_urls
	
	
	def login(request):
	    if not request.user.is_authenticated:
	        return render(request, "web3auth/login.html")
	    else:
	        return redirect("/admin/login")
	
	
	def auto_login(request):
	    if not request.user.is_authenticated:
	        return render(request, "web3auth/autologin.html")
	    else:
	        return redirect("/admin/login")
92bdb39c57eb151604d31c81966886a1|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/urls.py|11|1|V|python
	    url(r"^login/", login, name="login"),
	    url(r"^auto_login/", auto_login, name="autologin"),
	    url(r"^", include(web3auth_urls)),
5d54313a06aa739c9e2ff2c7f3c0f712|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/urls.py|4|1|V|python
	from django.shortcuts import render, redirect
b0a2f990ef02bc96701e022e716af847|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/urls.py|1|30|v|python
	incl
005f55af30f39fcee0a17feb0c98d1c6|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/urls.py|1|30|v|python
	ude, 
637be97958183d178d7055cea8e243b4|file:///Users/vanities/git/work/funfunfun-backend/requirements.txt|7|1|V|text
	rlp==1.2.0 
377422c30e7c9c32983e7a38002f63ae|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/settings.py|79|54|v|python
	"web3auth.apps.Web3AuthConfig"
55c99965d197f459dbf4121866cce3cf|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/settings.py|170|5|V|python
	    "web3auth.backend.Web3Backend",
d5ccd84f93362b170a264299d0c5178c|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/settings.py|234|1|V|python
	# Web3
	# ------------------------------------------------------------------------------
	#
	
	WEB3AUTH_SIGNUP_ENABLED = True
	WEB3AUTH_USER_ADDRESS_FIELD = "address"
	WEB3AUTH_USER_SIGNUP_FIELDS = []
	
	# Prints
	# ------------------------------------------------------------------------------
	#
1536b05ba511b4c6c5b2a0ef655a0465|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/settings.py|234|1|V|python
	# Web3
	# ------------------------------------------------------------------------------
	#
	
	WEB3AUTH_SIGNUP_ENABLED = True
	WEB3AUTH_USER_ADDRESS_FIELD = "address"
	WEB3AUTH_USER_SIGNUP_FIELDS = []
c430e76f208394c70953ecb8c2fcd89e|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/user/models.py|4|1|V|python
	from web3auth.utils import validate_eth_address
6d8f1e733f7e9132a3ce85734e5621f1|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/user/models.py|7|1|V|python
	    address = models.CharField(
	        max_length=42,
	        verbose_name=_("Ethereum wallet address"),
	        unique=True,
	        validators=[validate_eth_address],
	        null=True,
	        blank=True,
	    )
8eea13ba4281c303ecc553a4c89421a5|file:///Users/vanities/git/work/funfunfun-backend/funfunfun/user/models.py|2|1|V|python
	from django.db import models
	from django.utils.translation import ugettext_lazy as _
0cd30741d41ab8ad62e7feb15badf41c|file:///Users/vanities/git/work/django-init/Dockerfile|3|17|v|dockerfile
	funfunfun
09c1212d50a627dab8aae1eee686a476|file:///Users/vanities/git/work/django-init/README.md|1|3|v|markdown
	funfunfun-backend
bbbd36830adca93f233742b3f37c9f5c|file:///Users/vanities/git/work/django-init/README.md|2|1|V|markdown
	backend for the funfunfun app
f67da5314ffb6cf5413302c3f9c9f942|file:///Users/vanities/git/work/funfunfun-backend/Makefile|10|1|V|make
	down:
		docker-compose down --remove-orphans
e1751eac25581ab1de47c03413da9d6f|file:///Users/vanities/git/work/minary-api-django/Makefile|12|1|V|make
	test: image clean
		docker-compose run --rm test ./bin/test
		docker-compose down
123402c04dcfb6625f688f771a5fc05d|file:///Users/vanities/git/work/funfunfun-backend/Makefile|13|13|v|make
	clean
31a5da8375f305df6108ed4f4ce8bc58|file:///Users/vanities/git/work/funfunfun-backend/Makefile|15|2|V|make
		docker-compose down
86ccae7bc05b778aadfef563b091f324|file:///Users/vanities/git/work/minary-api-django/Makefile|13|1|V|make
		docker-compose run --rm test ./bin/test
eafddd653775578454e01f9a21b59bc6|file:///Users/vanities/git/work/minary-api-django/docker-compose.yml|32|1|V|yaml
	  test:
	    <<: *py
	    env_file:
	      - globals.test.env
	    container_name: coinmine_api_test
	    depends_on:
	      - celery_test
ff3d6b03e4834b79f4c995d8f3b6138b|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|26|9|v|yaml
	globals.test.env
5eee4dd62f37e541d907d8f1d8c3224a|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|27|5|V|yaml
	    container_name: coinmine_api_test
ec4eefdd9b845a85e6a2415d8938178e|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|27|1|V|yaml
	    depends_on:
	      - celery_test
93dfcc184a086ebf8f7e66ce4419317d|file:///Users/vanities/git/work/funfunfun-backend/env.dev|1|1|V|
	ENVIRONMENT=development
	DEBUG=True
	SECRET_KEY=some-secret-key
	DJANGO_SETTINGS_MODULE=funfunfun.settings
	LOG_LEVEL=CRITICAL
759b74ce43947f5f4c91aeddc3e5bad3|file:///Users/vanities/git/work/funfunfun-backend/env.test|1|13|v|
	development
37f487fc3015a101926144f7ebe9a655|file:///Users/vanities/git/work/minary-api-django/bin/test|1|1|V|sh
	#! /bin/bash -ev
	
	python manage.py makemigrations
	python manage.py migrate
	python manage.py test "$@" --parallel
c1f6bf847170a06891f390d46d27b3b2|file:///Users/vanities/git/work/funfunfun-backend/docker-compose.yml|22|1|V|yaml
	
	  test:
	    <<: *python
	    env_file:
	      - env.test
27144b55df1405ba99d39aeb1a40e42a|file:///Users/vanities/git/work/django-init/env.dev|1|1|V|
	ENVIRONMENT=development
	DEBUG=True
	SECRET_KEY=some-secret-key
	DJANGO_SETTINGS_MODULE=app.settings
	LOG_LEVEL=CRITICAL
0f3612504259f76109de8692e0634ab0|file:///Users/vanities/.ssh/config|42|1|V|sshconfig
	Host pi2
	    HostName 192.168.1.16
	    User pi
096270b016f7ab3174782949e4e173fc|file:///Users/vanities/git/work/TikTok-Api/test.py|2|204|v|python
	6828324284860728325
e417368fd1d8fe51bdbb2de7889035ac|file:///Users/vanities/git/work/TikTok-Api/test.py|3|1|v|python
	original_share_url
91b35ad4de9c549c2bd9f4f825f84265|file:///Users/vanities/git/work/TikTok-Api/test.py|7|86|v|python
	6718335390845095173
e03597486a8c626143a66de9d1cdde8e|file:///Users/vanities/git/work/TikTok-Api/examples/discover.py|1|1|V|python
	from TikTokApi import TikTokApi
34363b1fa8a06e1f950a8d5a1dd91689|file:///Users/vanities/git/work/TikTok-Api/test.py|3|1|V|python
	from tiktok.browser import browser
ff9237f5d3995f5a3b7c1142002363c1|file:///Users/vanities/git/work/TikTok-Api/tests/test_VideoByUrl.py|4|5|v|python
	api = TikTokApi()
	
320c78489d2245152ba71e1265e10ff2|file:///Users/vanities/git/work/TikTok-Api/tests/test_VideoByUrl.py|5|8|v|python
	esV = api.get_Video_By_TikTok(a
c0982d2c17fabb71ee990d72367d64f0|file:///Users/vanities/git/work/TikTok-Api/test.py|7|3|v|python
	esV = api.get_Video_By_Url(original_share_url)
fa4c9724b407f20789a1906789f2fcfb|file:///Users/vanities/git/work/TikTok-Api/test.py|6|2|v|python
	r.url
d71cbeef9a26173032c8a103e15f9d4e|file:///Users/vanities/git/work/TikTok-Api/test.py|7|29|v|python
	"https://www.tiktok.com/music/original-sound-6828605279433771782?language=en&u_code=dcdbiib1c7ibc2&_d=dcdbiklk21hife&utm_campaign=client_share&app=musically&utm_medium=ios&user_id=6828324284860728325&tt_from=copy&utm_source=copy&source=h5_m"
fd6cb23884c91708769c0de703595b92|file:///Users/vanities/git/work/TikTok-Api/test.py|24|5|V|python
	    def 
341331ea09336ac832bacdcf806d5141|file:///Users/vanities/git/work/TikTok-Api/test.py|7|4|v|python
	https://www.tiktok.com/music/original-sound-6828605279433771782?language=en&u_code=dcdbiib1c7ibc2&_d=dcdbiklk21hife&utm_campaign=client_share&app=musically&utm_medium=ios&user_id=6828324284860728325&tt_from=copy&utm_source=copy&source=h5_m"
0bb91c0b77b3a63764c2791f5976bfe3|file:///Users/vanities/git/work/TikTok-Api/test.py|31|9|V|python
	        user = 
a7b84d6354b9ad7f50b580037fe70ae2|file:///Users/vanities/git/work/minary/minary/adapters/amdmeminfo.py|1|1|V|python
	import re
6922cda0b5e399a0554e441aebf69a37|file:///Users/vanities/git/work/TikTok-Api/test.py|35|18|v|python
	"music/(.*).html"
edf9e7c61d278619929c616595c87a59|file:///Users/vanities/git/work/TikTok-Api/test.py|36|9|V|python
	        re.match("music/(.*).html")
f430e723be7af0efbe98a594433823e9|file:///Users/vanities/git/work/TikTok-Api/test.py|35|40|v|python
	/h5/share/music/6828605279433771782.html
6d4171a1f9fef1e1d4889504492b43c4|file:///Users/vanities/git/work/TikTok-Api/test.py|34|9|V|python
	        video_id = parsed_url.query
18473e182e2cdb55854b95401e302c54|file:///Users/vanities/git/work/TikTok-Api/test.py|34|16|v|python
	re.findall("music/(.*).html", parsed_url.path)[0]
b265ea236b990823680406ed2fd72574|file:///Users/vanities/git/work/TikTok-Api/test.py|11|1|V|python
	api = TikTokApi()
c16bf2542cc34567d355784564d365d7|file:///Users/vanities/git/work/TikTok-Api/test.py|25|9|V|python
	        pass
81b393cc9782ed54c7b3870ee4316eac|file:///Users/vanities/git/work/TikTok-Api/test.py|40|1|V|python
	
	        pass
de2f1a3de92779816cf6b3362a743d58|file:///Users/vanities/git/work/TikTok-Api/test.py|32|9|V|python
	        print("Parsed Url for ")
fea18a5962be96555b8c7fef3c60f9f2|file:///Users/vanities/git/work/TikTok-Api/test.py|28|16|v|python
	requests.get(share_link).url
07c73021a68b1918f4240d11157092cb|file:///Users/vanities/git/work/TikTok-Api/test.py|28|9|V|python
	        print()
18b71d495de8ae28c6ff4ea2fff67cd7|file:///Users/vanities/git/work/TikTok-Api/test.py|48|87|v|python
	scout2015
2d34cbf7977f50a94df7007c926cfcd7|file:///Users/vanities/git/work/TikTok-Api/test.py|48|16|v|python
	request.get("https://www.tiktok.com/oembed?url=https://www.tiktok.com/@{}/video/{}".format(username, video_id).json()
4535087b3673c535abcb5b6af295ff69|file:///Users/vanities/git/work/TikTok-Api/test.py|42|9|V|python
	        print("got video info from tiktok python api")
8c339f645446022badf99835fef039c8|file:///Users/vanities/git/work/TikTok-Api/test.py|47|23|v|python
	self.tiktok.getMusicObject(video_id
0d0cf7dc035e9159908d9e03feccfa4b|file:///Users/vanities/git/work/TikTok-Api/test.py|60|1|V|python
	        print("got video info from official tiktok api\n")
fd9bea88363b5d5ccc89215da42e990a|file:///Users/vanities/git/work/TikTok-Api/test.py|55|1|V|python
	    """
8e2656df44b3f5fab6c097746cb48337|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|8|5|v|python
	"https://www.tiktok.com/@ceciliaannborne/video/6817602864228207878", return_bytes=1
498cd229a58168a6e5dc858824dccc24|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|8|5|V|python
	    "https://www.tiktok.com/@ceciliaannborne/video/6817602864228207878", return_bytes=1
23dcb76f7688b97d99ebfd62dfdf4eb9|file:///Users/vanities/git/work/TikTok-Api/test.py|47|9|V|python
	        video_info = self.tiktok.getMusicObject(video_id)
185adacc4b3c99bbc31a68db023871f3|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|12|1|v|python
	tiktokData = api.get_Video_By_DownloadURL(
	    api.trending(count=1)[0]["video"]["downloadAddr"]
	)
9da56a4160dba305f06a338908fbbd2f|file:///Users/vanities/git/work/TikTok-Api/test.py|51|1|V|python
	        tiktok_data = api.get_Video_By_DownloadURL(
	            api.trending(count=1)[0]["video"]["downloadAddr"]
	        )
843fa9dcc24955dc7b35dae9064590eb|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|19|1|V|python
	with open("video.mp4", "wb") as out:
	    out.write(tiktokData)
8ed1400e5bbb084d82b8db88ff5ddfee|file:///Users/vanities/git/work/TikTok-Api/test.py|48|60|v|python
	6817602864228207878
b71d3d49e213248793a54ef086f9c862|file:///Users/vanities/git/work/TikTok-Api/test.py|52|1|V|python
	        print("\ngot video info from tiktok python api\n")
	        pprint.pprint(video_info)
	
	        username = video_info["musicInfo"]["author"]["uniqueId"]
	        more_video_info = self.get_video_stuff(username, video_id)
97a4e3b581ea70dc86102502736955e7|file:///Users/vanities/git/work/TikTok-Api/test.py|52|9|V|python
	        return
a2a6d9f49c666dc5c4d350d957aee019|file:///Users/vanities/git/work/TikTok-Api/test.py|48|14|v|python
	https://www.tiktok.com/@a/video/6828605285863673094
0263b0d798d1b2a87aab1a7c07e95a7f|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|1|1|V|python
	from TikTokApi import TikTokApi
	
	# Starts TikTokApi
	api = TikTokApi()
	
240fc2680ddfe2960981a58cc03b0a84|file:///Users/vanities/git/work/TikTok-Api/test.py|47|9|v|python
	tiktok_data = self.tiktok.get_Video_By_Url(
	            "https://www.tiktok.com/@a/video/6828605285863673094".format(video_id),
	            return_bytes=1,
	        )
d911ca34c454ebafb81b3a1c33f1d8c8|file:///Users/vanities/git/work/TikTok-Api/examples/downloadTikTok.py|7|1|v|python
	tiktokData = api.get_Video_By_Url(
	    "https://www.tiktok.com/@ceciliaannborne/video/6817602864228207878", return_bytes=1
	)
28502d7f415b7da6709dbe0400e49e7d|file:///Users/vanities/git/work/TikTok-Api/TikTokApi/tiktok.py|281|1|V|python
	            driver = webdriver.Chrome()
	        driver.get(video_url)
	        time.sleep(5)
	
	        soup = BeautifulSoup(driver.page_source, "html.parser")
	        data = json.loads(soup.find_all("script", attrs={"id": "videoObject"})[0].text)
	
	        if return_bytes == 0:
	            return data["contentUrl"]
	        else:
	            r = requests.get(data["contentUrl"])
	            return r.content
43b8da838e343fad39342e9594e19d3f|file:///Users/vanities/git/work/TikTok-Api/test.py|7|1|V|python
	original_share_url = "https://vm.tiktok.com/TWKaXf/"
834f6dd5723b9b39d4b3afd55a577104|file:///Users/vanities/git/work/TikTok-Api/test.py|7|1|V|python
	original_share_url = "https://vm.tiktok.com/TWKaXf/"
	r = requests.get(original_share_url)
	
	# "https://www.tiktok.com/music/original-sound-6828605279433771782?language=en&u_code=dcdbiib1c7ibc2&_d=dcdbiklk21hife&utm_campaign=client_share&app=musically&utm_medium=ios&user_id=6828324284860728325&tt_from=copy&utm_source=copy&source=h5_m"
	redirected_share_url = r.url
	# esV = api.get_Video_By_Url(original_share_url)
	# print(esV)
7e6b461f4652b2233b3fae64de4882d8|file:///Users/vanities/git/work/TikTok-Api/test.py|72|1|V|python
	if return_bytes == 0:
	    return data["contentUrl"]
	else:
9bdf1403166a4fdf4d4d3c9f903779ea|file:///Users/vanities/git/work/TikTok-Api/test.py|70|1|V|python
	print("hello")
bc1a3e672da0a5330351757d7299c998|file:///Users/vanities/git/work/TikTok-Api/TikTokApi/tiktok.py|1|1|V|python
	import asyncio
	import pyppeteer
	import random
	import requests
	from .browser import browser
	from bs4 import BeautifulSoup
	import time
	import json
	from selenium import webdriver
e063a32539cadab4ee00327bcff3a562|file:///Users/vanities/git/work/TikTok-Api/test.py|10|1|V|python
	from .browser import browser
497031794414a552435f90151ac3b54b|file:///Users/vanities/git/work/TikTok-Api/test.py|81|62|v|python
	Object
4a336eefc7b0ba86719297abca09c965|file:///Users/vanities/git/work/TikTok-Api/test.py|73|1|V|python
	video_url = "https://www.tiktok.com/@ceciliaannborne/video/6817602864228207878"
3e5b614161e384920b0edd0a8f945887|file:///Users/vanities/git/work/TikTok-Api/test.py|13|8|v|python
	lenium import 
ae8b69e9006066c382d24db4f35b17a9|file:///Users/vanities/git/work/TikTok-Api/test.py|13|1|V|python
	from selenium import webdriver
7f4d88a50463262f1ed702d210839979|file:///Users/vanities/git/work/TikTok-Api/test.py|10|12|v|python
	port BeautifulSoup
	import time
	import json
	from se
c5e6234fcf03913ba1832017d89e8a99|file:///Users/vanities/git/work/TikTok-Api/test.py|10|1|V|python
	from bs4 import BeautifulSoup
b6b4f63e3ef0e101d49897bf09f2b308|file:///Users/vanities/git/work/TikTok-Api/test.py|74|1|V|python
	driver = webdriver.Chrome()
8d45f33cab849a084e867c1735f08656|file:///Users/vanities/git/work/TikTok-Api/test.py|75|1|V|python
	driver.get(video_url)
79e7f791127598a2bef61b4e6e7ae607|file:///Users/vanities/git/work/TikTok-Api/test.py|79|1|V|python
	soup = BeautifulSoup(driver.page_source, "html.parser")
557fe9b7a5c8976ede7ea2d2b64e39f6|file:///Users/vanities/git/work/TikTok-Api/test.py|81|1|V|python
	data = json.loads(soup.find_all("script", attrs={"id": "videoObject"})[0].text)
f4e6c15d8a3c6430348fedfd4817668a|file:///Users/vanities/git/work/TikTok-Api/test.py|88|1|V|python
	json.loads(soup.find_all("script", attrs={"id": "videoObject"})[0].string).contentUrl
e8ccf703d5d3444a8a5f20674740aad7|file:///Users/vanities/git/work/TikTok-Api/test.py|81|1|V|python
	print("hello")
	print(r.content)
f09f74ba6aa784a2bb29ec9b126c3f64|file:///Users/vanities/git/work/TikTok-Api/test.py|76|1|V|python
	time.sleep(3)
76bde888362af6eb369d4f8631c5e199|file:///Users/vanities/git/work/TikTok-Api/test.py|47|1|V|python
	        tiktok_data = self.tiktok.get_Video_By_Url(
	            "https://www.tiktok.com/@a/video/6828605285863673094".format(video_id),
	            return_bytes=1,
	        )
	        with open("video.mp4", "wb") as out:
	            out.write(tiktok_data)
095b0ea24215f0a19e1e0caf85a11101|file:///Users/vanities/git/work/TikTok-Api/test.py|60|1|V|python
	# tta = TikTokAdapter()
	# tta.get_video(original_share_url)
16afbea09b3457242461994165f0f5f7|file:///Users/vanities/git/work/TikTok-Api/test.py|61|1|V|python
	# works
	# tta.tiktok.get_Video_By_DownloadURL("https://vm.tiktok.com/TWKaXf/")
	
01a55b4d936ead5b64bf94eb96dea476|file:///Users/vanities/git/work/TikTok-Api/test.py|62|15|v|python
	original_
13d2d13b95a0dbdd9c3100b6487e5810|file:///Users/vanities/git/work/TikTok-Api/test.py|16|1|V|python
	"""
	api_url = "https://www.tiktok.com/oembed?url=https://www.tiktok.com/@scout2015/video/{}".format(
	    video
	)
	"""
b57aa5bb64d1bf6e5e59fd3a59f18cfe|file:///Users/vanities/git/work/TikTok-Api/test.py|59|1|V|python
	driver = webdriver.Chrome()
	driver.get(video_url)
	
	soup = BeautifulSoup(driver.page_source, "html.parser")
	data = json.loads(soup.find_all("script", attrs={"id": "videoObject"})[0].string)
	r = requests.get(data["contentUrl"])
	
	with open("video.mp4", "wb") as out:
	    out.write(r.content)
	
	driver.quit()
0243045c38f8c77678444d99231c97e0|file:///Users/vanities/git/work/TikTok-Api/test.py|71|15|v|python
	"https://www.tiktok.com/@ceciliaannborne/video/6817602864228207878"
b0d72c67beadf7d06b4871ca54cabf79|file:///Users/vanities/git/work/TikTok-Api/test.py|68|42|v|python
	/https://vm.tiktok.com/TWGdN1/
cfe4989585e91716b5f5a75368917611|file:///Users/vanities/git/work/TikTok-Api/TikTokApi/browser.py|9|1|V|python
	        self.userAgent = "Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1"
4ec193ef7cd816e65a33fe09b5871c02|file:///Users/vanities/git/work/TikTok-Api/test.py|89|1|V|python
	headers = headers = {'user-agent': 'my-app/0.0.1'}
4d06f33d2ce93a325e155137bde03636|file:///Users/vanities/git/work/TikTok-Api/test.py|89|9|v|python
	= headers 
9d4c73f5ff6d374e6c978da743144bc2|file:///Users/vanities/git/work/TikTok-Api/TikTokApi/browser.py|9|26|v|python
	"Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1"
d4c71df15eb689e9dc5908fc0be8294b|file:///Users/vanities/git/work/TikTok-Api/6792361683743526150.csv|2|369|v|
	https://v16.muscdn.com/658fb5b65bd20d67919d43fdf1c6f1be/5ec49e42/video/tos/useast2a/tos-useast2a-ve-0068c002/4f1248923e3346d386c448e7b39efa49/?a=1233&br=3960&bt=1980&cr=0&cs=0&dr=0&ds=3&er=&l=20200519210425010189065137199D329A&lr=tiktok_m&qs=0&rc=M211NGh4O3ZvczMzZjczM0ApZTlnNzw7ZmU2NzRpMzRnOGcwbzRsLzFnLi5fLS1eMTZzczRiLTU2L182MzEyYV4yNTA6Yw%3D%3D&vl=&vr=","https://api2.musical.ly/aweme/v1/playwm/?video_id=v09044ac0000bp1l1sj84u2eo17rrj30",720,1280,8,8,"https://p16-tiktok-va.ibyteimg.com/obj/tos-maliva-p-0068/a0d38e043a704da787dc7b72c2dd6a5c_1581469949?x-expires=1589943600&x-signature=m5YHXyxH4Bx08NaniGjf1p0rgpc%3D","https://p16-tiktok-va.ibyteimg.com/obj/tos-maliva-p-0068/c9938ce7ccd24ba6b72119372d505f84_1581469949?x-expires=1589943600&x-signature=Uh5NBiSs7%2F7ONkquW7fjf07wzOg%3D"
d41c921ab6eaca2aa672a9798db581d4|file:///Users/vanities/git/work/TikTok-Api/test.ts|1|1|v|typescript
	const TikTokScraper = require('tiktok-scraper');
	const options = {
	    // Number of posts to scrape: {int default: 20}
	    number: 50,
	
	    // Set proxy {string[] | string default: ''}
	    // http proxy: 127.0.0.1:8080
	    // socks proxy: socks5://127.0.0.1:8080
	    // You can pass proxies as an array and scraper will randomly select a proxy from the array to execute the requests
	    proxy: '',
	
	    // Set to {true} to search by user id: {boolean default: false}
	    by_user_id: false,
	
	    // How many post should be downloaded asynchronously. Only if {download:true}: {int default: 5}
	    asyncDownload: 5,
	
	    // How many post should be scraped asynchronously: {int default: 3}
	    // Current option will be applied only with current types: music and hashtag
	    // With other types it is always 1 because every request response to the TikTok API is providing the "maxCursor" value
	    // that is required to send the next request
	    asyncScraping: 3,
	
	    // File path where all files will be saved: {string default: 'CURRENT_DIR'}
	    filepath: `CURRENT_DIR`,
	
	    // Custom file name for the output files: {string default: ''}
	    fileName: `CURRENT_DIR`,
	
	    // Output with information can be saved to a CSV or JSON files: {string default: 'na'}
	    // 'csv' to save in csv
	    // 'json' to save in json
	    // 'all' to save in json and csv
	    // 'na' to skip this step
	    filetype: `na`,
	
	    // Custom User-Agent
	    // {string default: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36' }
	    userAgent: '',
	
	    // Download video without the watermark: {boolean default: false}
	    // Set to true to download without the watermark
	    // This option will affect the execution speed
	    noWaterMark: true,
	    
	    // Create link to HD video: {boolean default: false}
	    // This option will only work if {noWaterMark} is set to {true}
	    hdVideo: true,
	};
	
	// Get single video metadata
	// input - WEB_VIDEO_URL
	// For example: https://www.tiktok.com/@tiktok/video/6807491984882765062
	// options - not required
	(async () => {
	    try {
	        const videoMeta = await TikTokScraper.getVideoMeta('https://www.tiktok.com/@tiktok/video/6807491984882765062', options);
	        console.log(videoMeta);
	    } catch (error) {
	        console.log(error);
	    }
	})();
8389f7816a1cf0c433c68657b61fbd5a|file:///Users/vanities/git/work/minary/minary/cli/mineOS/root/etc/systemd/system/minary-reboot.timer|1|1|V|systemd
	[Unit]
	Description=Run Minary Reboot Bi-Daily randomly from 02:40:00 - 04:40:00
	
	[Timer]
	OnCalendar=Sun,Tue,Thu 02:40:00
	AccuracySec=1us
	RandomizedDelaySec=7200
	
	[Install]
	WantedBy=multi-user.target
2004589466da0de4c8930c73119e84a9|file:///Users/vanities/git/fun/pi/services/terraria-reboot.timer|2|17|v|
	Minary
7ea0ecedb0d7dcb815e03d206ae4268a|file:///Users/vanities/git/fun/pi/services/terraria-reboot.timer|2|48|v|
	 - 04:40:00
3e1d37a39754c83c4838527c52e409f3|file:///Users/vanities/git/fun/pi/services/terraria-reboot.timer|6|1|V|
	AccuracySec=1us
	RandomizedDelaySec=7200
343625ce93003e7312a2256e186d15a5|file:///Users/vanities/git/work/minary/minary/cli/mineOS/root/etc/systemd/system/minary-reboot.service|1|1|V|systemd
	[Unit]
	Description=Minary Reboot
	After=multi-user.target
	
	[Service]
	User=root
	ExecStart=/usr/local/bin/hardreboot
	
	[Install]
	WantedBy=multi-user.target
6e620e287668f399ec9a24f955f09575|file:///Users/vanities/git/fun/pi/services/terraria-reboot.timer|2|13|v|
	reboot terraria server daily @ 3:00:00
185cebb80b5ff8d8bec9ba44dafb1e19|file:///Users/vanities/git/fun/pi/services/terraria-reboot.service|2|51|v|
	 Reboot
d0adda6c00ab185c0a4afc2b28a6120e|file:///Users/vanities/git/fun/pi/services/terraria-reboot.service|7|11|v|
	/usr/local/bin/hardreboot
05dd8ed6921133993d33d0dbf0b47847|file:///Users/vanities/git/fun/pi/services/terraria-reboot.service|1|1|V|
	[Unit]
	Description=reboot terraria server daily @ 3:00:00
	After=multi-user.target
	
	[Service]
	User=root
	ExecStart=reboot now
	
	[Install]
	WantedBy=multi-user.target
5b0e683bd99734e15e5db89c230e652c|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|7|11|v|
	reboot now
3cc3229e677a6c5e1751c679a1e0dddd|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|2|36|v|
	daily @ 3:00:00
dcbe8c6add36130702b7ab9f233b11eb|file:///Users/vanities/git/fun/pi/services/terraria-reboot.timer|1|1|V|
	[Unit]
	Description=reboot terraria server daily @ 3:00:00
	
	[Timer]
	OnCalendar=*-*-* 03:00:00
	
	[Install]
	WantedBy=multi-user.target
90a3ecf36bde59ea7e4c954fd5801a97|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|2|1|V|
	Description=backup terraria server every hour
857798eee3faf0b5c427597271c0e6c0|file:///Users/vanities/git/fun/pi/services/terraria-backup.timer|2|1|V|
	Description=
49e9c1ceca99bcd4efe7b0402b18b226|file:///Users/vanities/git/fun/pi/terraria/bin/install|3|18|v|sh
	terraria-server.service
dba7668224299f9fed1aad497f3c2d55|file:///Users/vanities/git/fun/pi/terraria/bin/install|5|1|V|sh
	sudo systemctl start terraria-server.service
	sudo systemctl enable terraria-server.service
48afe4bfa8946bb4dea79149bfd354dd|file:///Users/vanities/git/fun/pi/terraria/bin/install|8|1|V|sh
	sudo systemctl start terraria-server.service
aaabf0d39951f3e6c3e8a7911df524c2|file:///Users/vanities/git/fun/pi/terraria/bin/install|8|39|v|sh
	service
9dd11e7bccc81a7cfb0910c920dc4081|file:///Users/vanities/git/fun/pi/terraria/bin/install|8|1|V|sh
	sudo systemctl enable terraria-reboot.timer
cdaaecef1ec8e2d64cddef8d3bc922fd|file:///Users/vanities/git/fun/pi/services/terraria-backup.timer|1|1|v|
	[Unit]
	Description=backup terraria server every hour
	
	[Timer]
	OnCalendar=*-*-* *:00:00
	
	[Install]
	WantedBy=multi-user.target
fe67e3ada1fbf15206aab78dd204a381|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|1|1|v|
	[Unit]
	Description=backup terraria server every hour
	After=multi-user.target
	
	[Service]
	User=root
	ExecStart=/bin/cp /home/pi/terraria/config/*.wld /home/pi/terraria/config/backups
	
	[Install]
	WantedBy=multi-user.target
1603bb75f65ed0895a5b071b3259cf21|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|7|1|V|
	ExecStart=/bin/cp -r /home/pi/terraria/config/ /home/pi/terraria/config/backups
226d7a106cfce4d69cdb2d0968e23680|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|7|1|V|
	ExecStart=/bin/cp -r /home/pi/terraria/config/ /home/pi/terraria/backups
b081f69f86e0df5b0c50560f120a8d63|file:///Users/vanities/git/fun/bitchan/js/package.json|31|1|V|json
	    "@types/node": "",
	    "@types/react": "",
2a9e78de7f6e02f532a25b89ffb2ac70|file:///Users/vanities/git/fun/bitchan/js/package.json|32|5|V|json
	    "@types/jest": ""
5651ea4d4b6926118f9bf69f7853d4be|file:///Users/vanities/git/fun/bitchan/js/package.json|31|3|V|json
	    "@types/react-dom": "",
bde556a5fde634d470a76e79fb614ced|file:///Users/vanities/git/fun/bitchan/js/package.json|24|5|V|json
	    "typescript":"3.8.3",
edb274d8c594429b8ccc684d79d771f6|file:///Users/vanities/git/fun/bitchan/.gitignore|3|1|V|
	.DS_Store
6e9327d093091ca970ac24e90a3c9271|file:///Users/vanities/git/fun/bitchan/.gitignore|4|1|V|
	**/node_modules
928898fdc6241cfd5ad4c1f063a1e3a0|file:///Users/vanities/git/fun/bitchan/.gitignore|4|1|V|
	**/*.pyc
c012e8ce6ee67c5c4cfc27be06f3d663|file:///Users/vanities/git/fun/bitchan/js/.gitignore|1|1|V|conf
	# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
	
	# dependencies
	/node_modules
	/.pnp
	.pnp.js
	
	# testing
	/coverage
	
	# production
	/build
	
	# misc
	.DS_Store
	.env.local
	.env.development.local
	.env.test.local
	.env.production.local
	
	npm-debug.log*
	yarn-debug.log*
	yarn-error.log*
f7c3e40c48317b8c43753339c40316b3|file:///Users/vanities/git/fun/bitchan/js/package.json|18|1|V|json
	    "reactstrap": "8.4.1",
	    "react-router-dom": "5.2.0",
	    "react-art": "16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "5.1.0",
	    "react-web3": "1.2.0",
	    "drizzle": "1.4.0",
	    "@drizzle/react-components": "1.5.1",
	    "@drizzle/react-plugin": "1.5.1",
	    "@drizzle/store": "1.5.1",
c0e863ddd484540c091fbd65c0d73ad6|file:///Users/vanities/git/fun/bitchan/js/package.json|14|1|V|json
	    "core-js": "3.6.5",
499d0430ddf62d23c5209b9f20469382|file:///Users/vanities/git/fun/bitchan/js/package.json|12|1|V|json
	    "@types/react-test-renderer": "16.9.2",
f5c0d65b368fdd347b377f56e1a175c1|file:///Users/vanities/git/fun/bitchan/js/src/index.js|6|1|V|javascript
	import { Web3Provider } from 'react-web3';
	import { Web3Unavailable } from './Web3Unavailable';
374470a29d847eea4cda75c0036c61f5|file:///Users/vanities/git/fun/bitchan/js/src/index.js|11|1|V|javascript
	    <Web3Provider
	      web3UnavailableScreen={Web3Unavailable}
	      accountUnavailableScreen={Web3Unavailable}
	    >
d8b7dfa9c7b4b79af11d674b0212ffb1|file:///Users/vanities/git/fun/bitchan/js/src/index.js|16|1|V|javascript
	    </Web3Provider>
b815e5bcd3b0246c56e7f430225e098c|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|1|1|V|javascript
	import React, { Component } from 'react';
a4a63e935491255efd9b40a1c6c4af2c|file:///Users/vanities/git/fun/bitchan/js/src/Nav.js|1|1|V|javascript
	import React, { Component } from 'react';
	import Web3 from 'web3';
	import {
	  Navbar,
	  NavbarBrand,
	  Nav,
	  NavItem,
	  NavLink,
	  NavbarText,
	} from 'reactstrap';
	import PropTypes from 'prop-types';
	
	// https://www.dappuniversity.com/articles/ethereum-dapp-react-tutorial
	//
	
	class TopNav extends Component {
	  constructor(props, context) {
	    super(props, context);
	    this.state = {
	      account: context.web3.selectedAccount,
	      network: context.web3.network,
	    };
	  }
	
	  render() {
	    return (
	      <div>
	        <Navbar color="dark" dark expand="md">
	          <NavbarBrand href="/">bitchan</NavbarBrand>
	          <Nav className="mr-auto" navbar>
	            <NavItem>
	              <NavLink href="/board">Board</NavLink>
	            </NavItem>
	          </Nav>
	          <NavbarText>
	            {this.state.account} on {this.state.network}
	          </NavbarText>
	        </Navbar>
	      </div>
	    );
	  }
	}
	
	TopNav.contextTypes = {
	  web3: PropTypes.object,
	};
	
	export default TopNav;
bde8feaf1070223a1d8c1f3d69eeddba|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|34|v|dockerfile
	 --save
ebd9cee1db3f1904ae410252498935a3|file:///Users/vanities/git/fun/bitchan/js/package.json|21|5|V|json
	    //"web3": "^1.2.7",
79fa6aab52167c89d8625aa185401d99|file:///Users/vanities/git/fun/bitchan/js/package.json|30|4|V|json
	    "core-js": "3.6.5"
a3ed7570b00f5212b32cfdf364c59872|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|13|v|dockerfile
	y  --unsafe-perm=true
0c57b6d34c4c2735fc861b27f520fb02|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|18|1|V|dockerfile
	COPY package*.json ./
b31ec5f19793e2b7103acd7336754a1c|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|10|v|dockerfile
	*.json
e5788bc9a845acaa5781fc5c42df6a59|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|20|5|v|dockerfile
	npm install --global
a1572a6ddf2ec64b1f9ce7213a452b20|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|26|74|v|dockerfile
	TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
4f237a119b82f7ad2ae249cc8bbf2d5f|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|26|1|V|dockerfile
	RUN wget https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre4/TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip && \
	    unzip TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
b3d601665a94c5151dc0b197c3066429|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|20|5|v|dockerfile
	yarn install --dev
5df1933d85837561ad0efd45104f7b64|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|28|1|V|dockerfile
	
	COPY run-vanilla.sh /vanilla/run.sh
6d48dd1068a04065acf762b89fae19a4|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|26|6|v|dockerfile
	wget https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre4/TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
d3cc3e2e2cfd529557aee58d4a3d22b5|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|28|6|v|dockerfile
	unzip TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
20719c4dc77122dbd92c94b90c7a2223|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|17|14|v|yaml
	mono --server --gc=sgen -O=all TerrariaServer.exe -config /config/serverconfig.txt
c68763c0c7204310ef465cfd4d034441|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|13|19|v|yaml
	vanilla
525dcf037d732f13b8addff8862423ff|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|13|1|V|yaml
	    working_dir: /terraria/tshock
b947e3e5cebc04c9659602a2ea38ddfa|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|11|1|V|yaml
	       #volumes:
	      #- ./:/config
941949cdd0d6ca40ad48c683fdb5b2f0|file:///Users/vanities/git/fun/pi/terraria/docker-compose.yml|12|6|v|yaml
	########
ff81ce096a5e518a38a56f5bca3db6e8|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|26|1|V|dockerfile
	RUN mkdir -p /terraria/tshock/ && \
	    wget https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre4/TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip && \
	    unzip TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip && \
	    rm -rf TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
8dd841bb8fc5b99e56d0c8df0443f361|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|26|1|V|dockerfile
	#RUN wget https://github.com/Pryaxis/TShock/releases/download/v4.4.0-pre4/TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip && \
	#    unzip TShock_4.4.0_226_Pre4v2_Terraria1.4.0.2.zip
f839c815587173bdf92c29709f49823c|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|17|5|v|dockerfile
	mkdir /tmp/terraria && \
51633f36c0d137b677a6efb5645890cc|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|20|5|v|dockerfile
	unzip -q terraria-server-1402.zip
774e610e950210608e3a422b2536c10c|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|25|12|v|dockerfile
	/terraria/vanilla/
8df84b8343befcb208a708ac4f8800a2|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|7|1|V|
	ExecStart=/bin/cp -r /home/pi/terraria/config/* /home/pi/terraria/backups
567bcc214d9ef1eef522cc0e26b9462b|file:///Users/vanities/git/fun/pi/services/terraria-server.service|8|1|V|
	WorkingDirectory=/home/pi/pi/terraria
4858dab5b4ac16ad2b7d274698c2532a|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|8|33|v|
	/home
a6de10171979c58b0a6677ea60b7cf41|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|8|33|v|
	/terraria
54e7392205df537c5975d362c94994cf|file:///Users/vanities/git/fun/pi/services/terraria-backup.service|7|1|v|
	WorkingDirectory=/home/pi/pi/terraria
	ExecStart=/bin/bash -c '/bin/mkdir -p backups && /bin/cp config/* backups'
d7085bbfa367847d60a831b0307c1271|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|1|V|typescript
	const path = require('path');
1685850a87e37da2900eab63dbae3db7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	import * as path from 'path';
d6fe1d0be6347b8ef2427fa629c04485|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|13|v|typescript
	path
231d8f3c9449db9f434664ff2dec1167|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const os = require('os');
2e69a4e9c57932016b984bc9a211db71|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|32|v|typescript
	tiktok-scraper
f1251a2aa90b9520613a78f336e40e7a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|1|V|typescript
	const TikTokScraper = require('');
7c94c7fa56aeb4f04bdf4e371233a187|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|10|14|v|typescript
	, context
e00d69ab111530b110f2cd8bd8b54fb4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|25|11|v|typescript
	TikTokScraper.
fcb009806525585135bff194fc374028|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|31|v|typescript
	'tiktok-scraper'
f20bfd6bf3b11fab60bedb98da160b30|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|1|V|typescript
	const TikTokScraper = require();
dd3cb7fbafe9265355e3fdb87d1b7d48|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|1|V|typescript
	//const path = require('path');
8ba83a90a65d2cb551721de989743c0f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const os = require('os');
	const os = require('os');
	import { TikTok, Downloader } from 'tiktok-scraper';
619ca3e1725b0278299518fdbf261544|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const os = require('os');
	const os = require('os');
194befbccf26505786632679da0d1378|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|18|v|typescript
	, TikTokScraper from 'tiktok-scraper';
021ebec10ad37aeedc64fd1ab6367265|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|19|v|typescript
	 TikTokScraper
c44ef5299996d761d5e05e3d156ff57b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|20|5|V|json
	    "@types/node":
fa75e06e5c4a68825fe020d3f403a0d8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	import { TikTokScraper } from 'tiktok-scraper';
47d0304b91e4f79b8c60c90c0e62d0e5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|19|28|v|typescript
	throw new Error("One of the params must be provided.");
a71283f1578f7e69c06931b985ea107d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|18|30|v|typescript
	||throw new Error("One of the params must be provided.");;
58056c8d799570e063b8cdeb9f6a557b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|19|5|V|typescript
	    if (url === undefined) throw new Error("One of the params must be provided.");
26ad119e78dc7583ecde32e42e106d26|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|6|1|V|json
	tsc src/*.ts && mv src/*.ts lib",
48a9939c9f2ac53b81438a52218d382c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/lib/index.ts|11|13|v|typescript
	exports.processTikTok
d8c46d43f0754a0a74f99f493c329762|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|15|5|V|typescript
	    const newValue = snap.data();
7f7cfde5ec586119b48911a2c75851e5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|15|32|v|typescript
	newValue
a63a8baf0692f3e12d108185efcb9507|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|12|10|v|typescript
	request, response
10573b873d2fa5a365d558a45e328e47|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|15|32|v|typescript
	request
4b0639d8a2b6e1b988de4bc5b1276b5b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|16|32|v|typescript
	snap.data(
ac71fc4649b19e583a3decca05fd8c00|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|16|1|V|typescript
	    console.log("Got data: " + data);
8d777f385d3dfec8815d20f7496026dc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|20|22|v|typescript
	data
6784c98b4d70474dc7fb0d6a0e4ea6a6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|12|1|V|typescript
	// [END addMessageTrigger]
1ff31ae3b5c2c857d3be974d5bb1b684|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|14|3|V|typescript
	  // [START adminSdkAdd]
d43c26bbec8ff3091310dcdd77d4f8db|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|18|3|V|typescript
	  // [END adminSdkAdd]
78d08fb8d960eefaa25c4f38ab7a9b8d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|31|5|V|typescript
	    console.log("??? "+ snap.ref.url);
93851fac2bd2bbc81c5b9b1853bd82f9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|11|1|V|typescript
	/*
	export const addTikTok = functions.https.onRequest(async (request, result) => {
	  // Grab the text parameter.
	  const original = request.query.text;
	  // Push the new message into Cloud Firestore using the Firebase Admin SDK.
	  const writeResult = await admin.firestore().collection('messages').add({original: original});
	  // Send back a message that we've succesfully written the message
	  result.json({result: `Message with ID: ${writeResult.id} added.`});
	});
	*/
5f7888821d1d6882e2c97b5c32b79266|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|3|1|^v|typescript
	//
	//
	//
a116fcc89735c1f59152a1aacbd3ac74|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|13|1|V|typescript
	    // Get an object representing the document
	    // e.g. {'user': 'f3_chelstre', 'url': "https://vm.tiktok.com/3awDGF/"}
9fe61e22a0683a1483e968c45ce6227a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|17|5|V|typescript
	    /*
233af1f9b8b3806566a8560a5d1a37ad|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|18|5|V|typescript
	    // access a particular field as you would any JS property
155f18a0325cba32c4323137992dd5e7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|46|5|V|typescript
	    */
8e372bb298fc7f94c26398e3ba4857f6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|15|5|V|typescript
	    console.log("param? "+ context.params.url);
d5dc4c2890484efe1ae2d4adff423f96|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|14|5|V|typescript
	    console.log("Got data: " + data + " context: " + context.params);
3bad4c7dada6ff4df9070f0138f467b0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|14|5|V|typescript
	    console.log("??" + snap.get("url"));
2a08830d053c59e34f6f0501674ee805|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|14|1|V|typescript
	    const url = data?.url;
7af8dcd979e2c51500dcae81a688ff8b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|15|5|V|typescript
	    const user = data?.user;
285769d8e585af37e15d8eaa52dab2c7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|18|1|V|typescript
	      console.error('No url here!');
	      return
d377f73ab0dac0c1109fd76a2e028dfc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|38|22|v|typescript
	No url here!
1246607fc292b3db93582d68214880b6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|36|1|V|typescript
	    }
	    catch(err){
	      console.error('Could not download video!!' + err);
	      return
	    }
7c2a98fb7ea1a5dbe01845e8d1cd4e90|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|5|24|v|typescript
	require('tiktok-scraper');
56ed62fb34206adbcf89b1d9f0d3c338|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|5|24|v|typescript
	require(
3a8ebf67f68f90034d45495732354343|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|5|9|v|typescript
	ikTokScraper
39faa9d2d9585bb386497ba8f86910e3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/lib/index.ts|25|30|v|typescript
	 TikTokScraper.
ecf58eb6b514e85950e3d47f3ba6d7f9|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|5|1|v|markdown
	brew install 1password-cli
0588ca52031c8fbf0213bf797a4e3189|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|6|1|V|markdown
	brew cask install java
79c906c266fd96c0629e712bc5290f73|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|14|86|v|markdown
	USERNAME HERE
c531a3f8157e9053153225e55a90480b|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|14|8|v|markdown
	OP_SESSION_funfunfun="$(op signin https://funfunfun.1Password.com <ENTER YOUR 1PASS EMAIL HERE>@funfunfun.app <ENTER YOUR 1PASS SECRET KEY HERE> --raw
32746b6441a912417835527b6ebe91d3|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|14|1|v|markdown
	export OP_SESSION_funfunfun="$(op signin https://funfunfun.1Password.com <ENTER YOUR 1PASS EMAIL HERE>@funfunfun.app <ENTER YOUR 1PASS SECRET KEY HERE> --raw)
d5136b23b0f65623bd546ba552bc4f61|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|10|1|v|markdown
	op signin funfunfun
	
cee1cc90f19697e955ab8fe4fe47780f|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|23|1|v|markdown
	op get document "GCP test admin service key" > /tmp/serviceAccount-test.json
	
b279b4593590029fa7612614ad7f32e9|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|24|1|v|markdown
	cd path/to/repo/firebase/functions
	
f04b1e917b489a15c58993333718a370|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|5|1|V|markdown
	<<<<<<< Updated upstream
7214d751299cfb10519978e9fdf6bd2d|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|9|8|V|markdown
	=======
	brew install 1password-cli java
	>>>>>>> Stashed changes
47b73135ab4a0c7449cb8dc4e19813ec|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|17|1|V|typescript
	    const url = data?.url;
	    console.log("Got url: " +  url);
4014e8983e8056513900b2c9c56391d0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|40|1|V|typescript
	      console.log('Downloaded video');
5c18ef72771564b7f43c497dc507aeab|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|15|26|v|typescript
	context
6e6a29d80a027235b251069ad10099c4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|8|1|V|typescript
	const fetch = require('node-fetch');
2b8d86d66e7bcda19a35cda63ac7886b|file:///Users/vanities/git/fun/pi/terraria/Dockerfile|27|1|V|dockerfile
	ENV DOWNLOAD_URL=https://terraria.org/system/dedicated_servers/archives/000/000/036/original/terraria-server-1402.zip
	
	RUN mkdir -p /terraria/vanilla && \
	    cd /terraria/vanilla && \
	    wget $DOWNLOAD_URL && \
	    unzip -q terraria-server-1402.zip && \
	    rm -rf terraria-server-1402.zip && \
	    mv 1402/Linux/* /terraria/vanilla && \
	    rm -rf 1402 && \
	    chmod +x TerrariaServer* && \
	    rm -rf System.*.dll System.dll
8f20cbc43015bc79826c98a045906a3d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|16|1|^v|javascript
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
	//
31d0a31082abe6f2f27d6b9437aa6a97|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|20|6|v|json
	firebase-functions
b70b339e36281a21d272e0fffd83970d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|1|1|V|javascript
	const assert = require('assert');
a6d3a8d779267db17e50c6ff8265a388|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|3|3|V|javascript
	const test = require('firebase-functions-test')(
	  {
f16ba2ec7ba30288a1852bbdb7fe6666|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|12|1|v|markdown
	op signin funfunfun
43d7b2c9c705341607056102c74dd924|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|9|4|v|javascript
	/tmp/serviceAccount-test.json
34100a16b3702f5bb04a19f85af7811e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|18|1|V|javascript
	const wrapped = test.wrap(myFunctions.processTikTok);
6c01a41628f5d6b13e93a20a417bf532|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|42|44|v|javascript
	6792361683743526150.mp4
84befd915b02c7d5404b6d7addf5e520|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|42|43|v|javascript
	'6792361683743526150.mp4
ce7b337162b830504ff8d3e5512c9dd2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|58|1|V|javascript
	    console.log('Successfully deleted 6792361683743526150.mp4');
b4a75edc079b72d29c31948520709b33|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|11|14|v|json
	mocha --reporter spec
635995278d1c1c54f30119b7c7452423|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|20|1|V|javascript
	describe('processTikTok', function () {
	  describe('normal behavior', function () {
1c6211ef21cfca2251fe8585291afad3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/index.local.test.js|6|1|V|javascript
	  describe('normal behavior', function () {
d727acbf3cd8fc819c3c2efb6f820cc0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|21|2|v|javascript
	 describe('normal behavior', function () {
	
73aa7466d79e575f040ba2b40cf3b8c5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/index.local.test.js|6|2|V|javascript
	 describe('normal behavior', async () {
793bdc156040b955245f7e918ab838a0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|22|1|V|javascript
	    it('should create a storage bucket item from tiktok document creation', function () {
00e8e03f8f9707d92c4da7a1ae90bfaf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/index.local.test.js|7|1|V|javascript
	describe('onEpisodeTrackCreated', () => {
	  it('successfully invokes function', async () => {
de05befaa6d616056f211a3ed144b34d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/index.local.test.js|8|1|V|javascript
	    const wrapped = test.wrap(functions.onEpisodeTrackCreated);
b371ad4f30a1eb8c31ca74e2be5ebfaf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/index.local.test.js|8|5|V|javascript
	    const data = { name: 'hello - world', broadcastAt: new Date() };
f3804ca89698fe6122f93a0b9939294a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|24|1|V|json
	  "devDependencies": {
	    "@types/node": "^14.0.4",
	    "firebase-functions-test": "^0.2.1",
	    "jest": "^26.0.1",
	    "mocha": "^7.1.2",
	    "tslint": "^5.12.0",
	    "typescript": "^3.8.0"
	  },
3c77806c61cafad92031ebf5e412e0e7|file:///Users/vanities/git/fun/bitchan/js/package.json|18|5|V|json
	    "typescript": "~3.7.2",
900c0524b59930d5f237417610c70e40|file:///Users/vanities/git/fun/bitchan/js/package.json|36|5|V|json
	    "tslint": "^5.12.0",
3a17a7c696c364851b21e74d16b771ff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|11|1|V|json
	    "test": "jest test/"
f5f95b4932426f31fe09a5b5673a8cc0|file:///Users/vanities/git/fun/bitchan/js/package.json|34|1|V|json
	    "jest": "^26.0.1",
	    "mocha": "^7.1.2",
7f3a99efd6554fafcbfe6fdfd55f2052|file:///Users/vanities/git/fun/bitchan/js/package.json|33|5|V|json
	    "firebase-functions-test": "^0.2.1",
a5863bd2f60fbf95d5b8f5185c15e5a9|file:///Users/vanities/git/fun/bitchan/js/package.json|11|5|V|json
	    "@types/node": "^12.0.0",
8dbd6fb6288fc7ea24f65b6bfc5b63df|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|1|V|dockerfile
	COPY yarn.lock ./
74bc6869e3c37d020d272dfbb9802657|file:///Users/vanities/git/fun/bitchan/js/package.json|21|5|V|json
	    "web3-react": "^5.0.5",
f172851627a767457db346d6be08947c|file:///Users/vanities/git/fun/bitchan/js/package.json|23|5|V|json
	    "react-web3": "1.2.0",
63ce51dc35bea4fc1c40650830e9ccd6|file:///Users/vanities/git/fun/bitchan/js/package.json|19|5|V|json
	    "react-art": "16.13.1",
b6873f59162e5075366b0fd4bf2e08f0|file:///Users/vanities/git/fun/bitchan/js/package.json|19|1|V|json
	    "web3": "^1.2.7",
	    "bootstrap": "^4.4.1",
	    "styled-components": "5.1.0",
	    "drizzle": "1.4.0",
	    "@drizzle/react-components": "1.5.1",
	    "@drizzle/react-plugin": "1.5.1",
	    "@drizzle/store": "1.5.1"
a7484521b9ff84ec1376785d1ae3d8fc|file:///Users/vanities/git/fun/bitchan/js/package.json|6|1|V|json
	    "@testing-library/jest-dom": "^4.2.4",
	    "@testing-library/react": "^9.3.2",
	    "@testing-library/user-event": "^7.1.2",
	    "@types/react-test-renderer": "16.9.2",
	    "@types/jest": "^24.0.0",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0",
dff9b0601971ccaade0395123e6d2ae9|file:///Users/vanities/git/fun/bitchan/js/package.json|13|1|V|json
	    "@web3-react/types": "6.0.7",
1eec158c5ba521e66c4a70f026753685|file:///Users/vanities/git/fun/bitchan/js/package.json|14|1|V|json
	    "react": "^16.13.1",
	    "react-dom": "^16.13.1",
	    "react-scripts": "3.4.1",
	    "reactstrap": "8.4.1",
	    "react-router-dom": "5.2.0",
	    "react-art": "16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "5.1.0",
	    "react-web3": "1.2.0",
	    "drizzle": "1.4.0",
	    "@drizzle/react-components": "1.5.1",
	    "@drizzle/react-plugin": "1.5.1",
	    "@drizzle/store": "1.5.1"
f584a7662153fc8c49938350c777f33f|file:///Users/vanities/git/fun/bitchan/js/package.json|13|1|V|json
	    "@web3-react/types": "6.0.7",
	    "react": "^16.13.1",
	    "react-dom": "^16.13.1",
	    "react-scripts": "3.4.1",
	    "reactstrap": "8.4.1",
	    "react-router-dom": "5.2.0",
	    "react-art": "16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "5.1.0",
	    "react-web3": "1.2.0",
	    "drizzle": "1.4.0",
	    "@drizzle/react-components": "1.5.1",
	    "@drizzle/react-plugin": "1.5.1",
	    "@drizzle/store": "1.5.1"
075f20f47622fefcee479d295dfc7e57|file:///Users/vanities/git/fun/bitchan/js/package.json|26|1|V|json
	    "@drizzle/react-components": "1.5.1",
	    "@drizzle/react-plugin": "1.5.1",
	    "@drizzle/store": "1.5.1"
a69d492e6158407abd288ed95f6d050e|file:///Users/vanities/git/fun/bitchan/js/package.json|6|1|V|json
	    "@testing-library/jest-dom": "^4.2.4",
	    "@testing-library/react": "^9.3.2",
	    "@testing-library/user-event": "^7.1.2",
d5f5710e098da04b56a9aaf57dca6f56|file:///Users/vanities/git/fun/bitchan/js/package.json|6|1|V|json
	    "@testing-library/jest-dom": "^4.2.4",
	    "@testing-library/react": "^9.3.2",
	    "@testing-library/user-event": "^7.1.2",
	    "@types/react-test-renderer": "16.9.2",
	    "@types/jest": "^24.0.0",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0",
	    "@web3-react/types": "6.0.7",
81633833bc76556eebdc6735cd1f5153|file:///Users/vanities/git/fun/bitchan/js/package.json|6|1|V|json
	    "@testing-library/jest-dom": "^4.2.4",
	    "@testing-library/react": "^9.3.2",
	    "@testing-library/user-event": "^7.1.2",
	    "@types/react-test-renderer": "16.9.2",
	    "@types/jest": "^24.0.0",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0",
	    "@web3-react/types": "6.0.7",
	    "react": "^16.13.1",
	    "react-dom": "^16.13.1",
	    "react-scripts": "3.4.1",
	    "reactstrap": "8.4.1",
	    "react-router-dom": "5.2.0",
	    "react-art": "16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "5.1.0",
	    "react-web3": "1.2.0",
	    "drizzle": "1.4.0"
43781db5c40ecc39fd718685594f0956|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|19|v|dockerfile
	save
2856066342bc9b935f2b2d5826fbee1b|file:///Users/vanities/git/fun/bitchan/js/package.json|6|1|V|json
	    "@testing-library/jest-dom": "^5.8.0",
	    "@testing-library/react": "^10.0.4",
	    "@testing-library/user-event": "^10.3.3",
	    "@types/react-test-renderer": "^16.9.2",
	    "@types/jest": "^25.2.3",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0",
	    "@web3-react/types": "^6.0.7",
	    "react": "^16.13.1",
	    "react-dom": "^16.13.1",
	    "react-scripts": "^3.4.1",
	    "reactstrap": "^8.4.1",
	    "react-router-dom": "^5.2.0",
	    "react-art": "^16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "^5.1.0",
	    "react-web3": "^1.2.0",
	    "drizzle": "^1.4.0"
a468a4a4457539bdba3db0bc2bf8314a|file:///Users/vanities/git/fun/bitchan/js/package.json|13|1|V|json
	    "@web3-react/types": "^6.0.7",
	    "react": "^16.13.1",
	    "react-dom": "^16.13.1",
	    "react-scripts": "^3.4.1",
	    "reactstrap": "^8.4.1",
	    "react-router-dom": "^5.2.0",
	    "react-art": "^16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "^5.1.0",
	    "react-web3": "^1.2.0",
	    "drizzle": "^1.4.0"
314c8fa7bbaf8c2d8e4c85fe4ebaa795|file:///Users/vanities/git/fun/bitchan/js/package.json|13|1|V|json
	    "@web3-react/types": "^6.0.7",
0352bc588b3480050ce8f7d19725cfee|file:///Users/vanities/git/fun/bitchan/js/package.json|24|5|V|json
	    "react-web3": "^1.2.0",
6604107e13472ed648fdf4c7bbfc98ef|file:///Users/vanities/git/fun/bitchan/js/package.json|25|5|V|json
	    "drizzle": "^1.4.0"
f8795747df74c1d5f1e3e71f267e7388|file:///Users/vanities/git/fun/bitchan/js/package.json|17|1|V|json
	    "reactstrap": "^8.4.1",
	    "react-router-dom": "^5.2.0",
	    "react-art": "^16.13.1",
	    "web3": "^1.2.7",
	    "web3-react": "^5.0.5",
	    "bootstrap": "^4.4.1",
	    "styled-components": "^5.1.0",
	    "react-web3": "^1.2.0",
d03881e792bd7d461e5da55c4213014b|file:///Users/vanities/git/fun/bitchan/js/package.json|11|1|V|json
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0",
380e2b585606dfb15045451ee7c932d3|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|19|16|v|dockerfile
	 --global
6e9eb4a655ac15800fd18ef7bff8a4b9|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|22|1|V|dockerfile
	
	EXPOSE 
f8087e59fd95af1ae29e8fcb7ff1a3dc|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|11|22|v|yaml
	/src
43b5c9175984c071f30b873fdce0a000|file:///Users/vanities/git/fun/bitchan/js/Dockerfile|1|11|v|dockerfile
	current
949470f4e4e19c41c8e2a81d09cb917a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|37|1|V|javascript
	const wrapped = test.wrap(myFunctions.processTikTok);
	return wrapped(snap).then(async () => {
	  try {
	    return assert.fail(
	      await admin.storage().bucket().file('6792361683743526150.mp4').get()
	    );
	  } catch (err) {
	    console.error('Could not read from bucket' + err);
	    return;
	  }
	});
dd12d5b62c981a81c3607af3e44e3e23|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|14|1|V|javascript
	const snap = test.firestore.makeDocumentSnapshot(
	  { user: 'chelstre', url: 'https://vm.tiktok.com/3awDGF/' },
	  documentID
	);
aae0ee2fb4960aa2a55603697ead3b5a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|72|9|v|javascript
	https://github.com/firebase/firebase-functions/issues/437
d39e6d038ad9e1ceeb9c7e6390a61883|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|11|1|V|javascript
	const admin = require('firebase-admin');
e270c70868c094270042e7f7ff534860|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|15|1|V|javascript
	admin.initializeApp();
d36497e0b394d5c4dce9139488744846|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|24|9|V|javascript
	        try {
6bebf0755bda17712c4e701f5c7aba92|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|27|1|V|javascript
	        } catch (err) {
	          console.error('Could not read from bucket' + err);
	          return;
	        }
dd047007e618fe4fb555055deec79c81|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|12|1|V|javascript
	const myFunctions = require('../lib/index.js');
8ea8196c48af8003f94062f90231767a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|81|1|V|javascript
	
	test.cleanup();
4494f9b572486f4ebc80a70e649ca1bf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|23|5|V|javascript
	    // Do cleanup tasks.
af77962e6c56e27838c575986e3ecfd4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|37|47|v|javascript
	'6792361683743526150.mp4'
eb77d1677447e40e4540a90b5ad6c020|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|57|1|V|javascript
	/*
	// Create a reference to the file to delete
	var desertRef = storageRef.child('6792361683743526150.mp4');
	
	// Delete the file
	desertRef
	  .delete()
	  .then(function () {
	    // File deleted successfully
	    console.log('Successfully deleted 6792361683743526150.mp4');
	  })
	  .catch(function (error) {
	    // Uh-oh, an error occurred!
	    console.error('Could not delete 6792361683743526150.mp4');
	  });
	*/
e992283e4a537298c0af604d35995502|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|38|17|v|javascript
	admin.storage().bucket().file('6792361683743526150.mp4').get()
410895791813b84ea1f5a2f4434ee02e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|27|5|v|javascript
	admin.storage().bucket().file('6792361683743526150.mp4').get().delete()
79b4e7a051f5a9675e637e7f5fdb4f9e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|26|5|V|javascript
	    console.log(admin.storage().bucket().file('6792361683743526150.mp4').get());
6f3095950ab4a878a5d07d4134ce9eff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|26|5|V|javascript
	    console.log(
b6ed383feb7e26e4451ea7fe084bc7e3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|27|5|V|javascript
	    );
dbd802e69573cbadce115635e8294dd8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|25|5|V|javascript
	    console.log('hello!!');
0e6f6d05e83c0ed3e466bf74765ec317|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|24|5|V|javascript
	    // Reset the database.
466cabf28062f5da9f0e59dde0b93f04|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|30|5|V|javascript
	    //admin.database().ref('6792361683743526150').remove();
8696368811d2c20a9ba4d6949ba037da|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|28|7|V|javascript
	      .t()
d41d4956b164f5f3303e35ffce0d7f4d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|27|1|V|json
	    "jest": "^26.0.1",
8dc8b402f248fbb71a37b0eb84b87089|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|24|1|V|javascript
	    await admin.storage().bucket().file('6792361683743526150.mp4').delete();
0ebe7d4e0d38bcae154acc2a58116ad7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|26|39|v|javascript
	/tmp/hello
a9b6fb07f76199d2335c303c18c478ba|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|46|1|V|javascript
	/*
	return wrapped(snap).then(async () => {
	  try {
	    return assert.fail(
	      await admin.storage().bucket().file('6792361683743526150.mp4').get()
	    );
	  } catch (err) {
	    console.error('Could not read from bucket' + err);
	    return;
	  }
	});
	*/
660bf70e81d8ddb5a21d6f2d88880422|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|46|1|V|javascript
	
	// TODO remove file afterwards
	//      give it an access token?
	//      add metadata and tags?
	//      update the feed and tiktoks documents with the storage cdn url
	//      incorporate the mocha describes/its
	//      https://github.com/firebase/firebase-functions/issues/437 ?
9b4ea801af5a655968ea8ab04b38f8da|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|16|9|v|javascript
	remove file afterwards
229df0fcf20bebd9ea039647e565ac6d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|19|1|V|javascript
	//      incorporate the mocha describes/its
02255b9e836f76d49c88070e0e5e1188|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|19|1|V|javascript
	//      https://github.com/firebase/firebase-functions/issues/437 ?
01a67aa02bf37884d7767a6b298dc988|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|38|35|v|javascript
	https://vm.tiktok.com/3awDGF/
0c76e1d57734d0f0d6edee35348086a1|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|17|7|V|yaml
	      - CHOKIDAR_USEPOLLING=true
65f6baad5c1209b5a4c6c53fe2f22a96|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|2|38|v|typescript
	this.input
78fdd34224d079ed7e8161018b1ae20e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|8|1|V|typescript
	const fetch
dcdd6943f4edf7ea4b88ba5bfb9225a2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|27|1|V|typescript
	      const videoMeta = await tiktok.getVideoMeta(url, {
	        // Custom file name for the output files: {string default: ''}
	        noWaterMark: true,
	        // This option will only work if {noWaterMark} is set to {true}
	        hdVideo: true,
	      });
33341883087703dd84b276bf7c567ecc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|9|9|v|typescript
	'https://vm.tiktok.com/3awDGF/',
608f9d2ea98ac28bd4f815acf5fc01eb|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|7|1|V|typescript
	
	 const query = {
	   uri: 
	            method: 'GET',
	            json: true,
	        };
	const response = await this.request<string>(query);
0e87d443f28d54d79e2199df77d9d37f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|7|1|V|typescript
	const tiktok = require('tiktok-scraper');
fac3cf3a9ba2ff3cfa877ecc8a5c8225|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|11|13|v|typescript
	videoMeta
51656f54ccd3df4bd7736feada0ad768|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|4|1|V|typescript
	  await tiktok.getVideoMeta('https://vm.tiktok.com/3awDGF/', {
	  // Custom file name for the output files: {string default: ''}
	  noWaterMark: true,
	  // This option will only work if {noWaterMark} is set to {true}
	  hdVideo: true,
	});
db6c1d033d85c60953741ec4b87b76c9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|3|10|V|typescript
	const get = (async () => {
	});
714a0018a719c5a76ba21c6a8f3b6e8a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|10|1|V|typescript
	const s = await get();
ee873e02261c8976b7986a9943ae0f5a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|10|13|v|typescript
	get(
771e540e7f3b768f14b4fb762bf55a4e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|5|1|V|typescript
	  // Custom file name for the output files: {string default: ''}
	  noWaterMark: true,
	  // This option will only work if {noWaterMark} is set to {true}
	  hdVideo: true,
	});
	});
	const s = await get()
e5fff9f14a4be5ddf1a297b47a7da4fe|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|3|1|V|typescript
	const get = (async () => {
db699affeb6c527921165291c08a2e70|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|3|29|v|typescript
	'https://vm.tiktok.com/3awDGF/'
497d104f2b9d35f4718d5048283c9566|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|6|91|v|typescript
	'https://www.tiktok.com/@tiktok/video/6807491984882765062
6112323e540b2f1719e0844abea2e9f4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|3|3|V|typescript
	  await tiktok.getVideoMeta(, {
66be00b42168e0bc29ea0d7d8418ff35|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|5|33|v|typescript
	TikTokScraper
443613c56841858b0dcbce06912821e7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|27|5|v|typescript
	  const videoMeta = await tiktok.getVideoMeta(url, {
	        // Custom file name for the output files: {string default: ''}
	        noWaterMark: true,
	        // This option will only work if {noWaterMark} is set to {true}
	        hdVideo: true,
	      }
583ead0b8bd768a4cc258ebf6e4b2f5f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|17|1|V|typescript
	console.log(get());
086aa837a746c792d8c1c05520a3eeae|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test.ts|1|1|V|typescript
	const TikTokScraper = require('tiktok-scraper');
061ce3b5ac341e2914ce08822d6d1eb9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	import * as fs from 'fs';
	//import * as tiktok from 'tiktok-scraper';
	const tiktok = require('tiktok-scraper');
	import fetch from 'node-fetch';
373e3f0b13a987f1e93ab28fdc93d88b|file:///Users/vanities/git/fun/bitchan/js/package.json|27|5|V|json
	    "typescript": "^3.8.0",
a34a44835182210f39681d95ceb46092|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|44|8|v|typescript
	 uploadType: "media",
2c04f98759d784b2d79bd72e8df2457c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|44|7|V|typescript
	       
650788b8c2264f7438a4e39bde419b47|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|61|1|V|typescript
	      console.log("Downloading", url);
9462ad2ef05e277b24f9aa2a8cbc1599|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|68|1|V|typescript
	        console.log("Finished Downloading", url);
a693d3236842ae6ec41df7d65c0ac381|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|64|40|v|typescript
	 Downloading
b5eade0e5733b9fc0c5eb0de8873494a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|34|1|V|javascript
	    this.timeout(20000);
8121f9d7c298d5b9c053d5b186702720|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|31|1|V|typescript
	    try {
331758a1856d21e5e38e17cafb63ae8c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|56|1|V|typescript
	    } catch(err) {
	      console.error('Could not download video!!', err);
	      return
	    }
fb097ee93872e6d0d7be4188200517ec|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|14|3|V|typescript
	  memory: '1GB'
3a9f00a71f7e98b6de6f36877de1f32f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|40|1|V|typescript
	      const fileName = '/tmp/' + videoMeta.id + '.mp4';
3091feaa7ce89c5124e2f4e36598bd85|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|41|7|V|typescript
	      const tempFileName = '/tmp/' + videoMeta.id + '.mp4';
82f59766bb9bd39face06f42dbc7eb3d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|40|24|v|typescript
	'/tmp/'
fcb4497ae22f867efec355b5f5cc85b6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|41|38|v|typescript
	videoMeta.id + '.mp4';
a6a04307fd90d0c2821b45125e6a0a25|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|47|20|v|typescript
	Downloaded
cdffd0b004a795ffdc3a3be5e17d34c1|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|47|1|V|typescript
	      console.log('Uploading video');
b16fb59d5cdd7aa8c6bfd3edb84974c7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|64|3|V|typescript
	  try {
1f7e850ef2559c01eed862465fff902c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|51|35|v|typescript
	 image/png
c99d78ed213004f65d09f40fabefb59c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|76|45|v|typescript
	, url
6824bad48c1ca6ed64e4b335c8bcdc3c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|9|16|v|json
	firebase deploy --only functions
037c28309f015e6dda35cab4f39a1766|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|50|5|V|typescript
	    downloadFile
e7fa52f0009d06ae9fc211cf16897615|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|50|7|V|typescript
	      delete videoMeta[]
7345470551032912cab3b3eb60d1a8df|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|82|1|V|typescript
	
	const metaData = (()) => {
	  return {}
	
	}
c14fbdf30c6b7ebacc0e9832fa1cb876|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|54|28|v|typescript
	"username": videoMeta['authorMeta']['name']
3947ca074fbc308e43f5843160ad3dbe|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	//import { join, basename } from 'path';
	//import { tmpdir }  from 'os';
aaf1604425fdcc884fbc677f8b7d7320|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|1|V|typescript
	//import * as tiktok from 'tiktok-scraper';
27027e7692b3ca2ec6b7f3f049d8e1a2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|48|22|v|typescript
	/path/to/writable/directory
1922d14b70ec7a83a73a3929e2bfdeee|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|33|1|V|javascript
	  describe('normal behavior', function () {
	    this.timeout(20000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: 'https://vm.tiktok.com/3awDGF/' },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(
	          await admin.storage().bucket().file('6792361683743526150.mp4').get()
	        );
	      });
	    });
	  });
6d5957907a4fc7d2d19e9d9cd571986f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|27|1|V|javascript
	  after(async () => {
	    test.cleanup();
	    await admin.storage().bucket().file('6792361683743526150.mp4').delete();
	    fs.unlinkSync('/tmp/6792361683743526150.mp4');
	  });
7012a031cb439b35f8dbe41eb85a6c9d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|29|1|V|javascript
	    await admin.storage().bucket().file('6792361683743526150.mp4').delete();
	    fs.unlinkSync('/tmp/6792361683743526150.mp4');
07daa23746e6508ac9e21516a46fd4f5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|31|64|v|javascript
	46792361683743526150.mp4
63ede00ebe2c38c07af03f5e6b01b980|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|54|34|v|javascript
	'https://vm.tiktok.com/TpPPmo/
13c6f2f2b86279bae7dbc2bc09ede7d2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|59|67|v|javascript
	6818222898852089093
5c34a8627607774ed85b14766cf2ee5b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|32|27|v|javascript
	/tmp/6792361683743526150.mp4
b0783a85b8745512dcd3d29673d38736|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|26|1|V|javascript
	    videoId1 = '6792361683743526150.mp4';
14d78c179a1102848f6b804a7e8987a8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|62|48|v|javascript
	6818222898852089093.mp4
8ed5faceea288e0ecce1c46e2995bd3d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|32|1|V|javascript
	    await admin.storage().bucket().file(videoId1).delete();
	    fs.unlinkSync('/tmp/' + videoId1);
2958246358bf82665cd92c1671d5f1c1|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|64|47|v|javascript
	'6818222898852089093.mp4'
7972cebe96a5c05b8ab894f9877c8182|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|27|1|V|javascript
	    shareLink1 = 'https://vm.tiktok.com/3awDGF/';
5b54f191c86f7427d68be6131fd01df2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|60|34|v|javascript
	'https://vm.tiktok.com/TpPPmo/'
f69eafdde5adf7f7ff9d04c2bf6d56dd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|28|49|v|javascript
	'https://vm.tiktok.com/3awDGF/';
b45ef94ab166e144a99dca8fb4b3cda4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|55|30|v|javascript
	different file
9994843231d0c15b1bdbf2b95de6b6c9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|48|9|V|typescript
	        //configPath: '/tmp',
37922ef6efab9cee658bb42203cb30ba|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|50|9|V|typescript
	        uploadType: "media",
ef7c876f00f3acddd00fa671f52d0b1f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|55|44|v|typescript
	uuid
e45b0fe1855e2b6d950d693a395ac612|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|53|1|V|typescript
	          customMetadata: {},
4a6a306ae6c537b8317320ad45127171|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|53|1|V|typescript
	          metadata:{
	            firebaseStorageDownloadTokens: '',
	            customMetadata: videoMeta,
	          }
e6e04d30b419481436b86dd9c9f7c27d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|1|V|typescript
	import fetch from 'node-fetch';
a8b6debd5e233bd1ff32bbef40787b8f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|17|v|typescript
	 = require(
0b95c3b3c44f9a4829ae3bf9ed6fd0f9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	import {v4: uuidv4} from 'uuid';
c24819dfa677ab31fddabaaef6e5049b|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|7|1|V|typescriptreact
	const Web3Provider = require("react-web3");
3f3c6cfe60b6b1a1aef2d822788e3e1b|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|6|24|v|typescriptreact
	Web3Provider
085a0a7c5dbecc020cd7815483c8af8d|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|2|2|V|json
	 "compileOnSave": true,
c1003bfd29694a7c7e8b4de9b84ccf16|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|8|1|V|typescriptreact
	asdasdjads;
02ee622ebe31aa7cacc1e4ddc95a28d3|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|12|5|V|yaml
	      - /bitchan/node_modules
3254677a7917c6c01f55212f86c57fbf|file:///Users/vanities/git/fun/bitchan/js/.dockerignore|3|1|V|
	Dockerfile
a8f5f167f44f4964e6c998dee827110c|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|8|1|V|typescriptreact
	asdasd
d4b3492515cefcdce35735d537459e9f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|44|1|V|typescript
	      // push the mp4 to cloud storage
	      console.log('Uploading video...');
	      const bucket = admin.storage().bucket();
	
	      await bucket.upload(tempFileName, {
	        destination: fileName,
	        resumable: false,
	        metadata:{
	          contentType: 'video/mp4',
	          cacheControl: 'public, max-age=31536000',
	          metadata:{
	            firebaseStorageDownloadTokens: uuid(),
	            customMetadata: videoMeta,
	          }
	        }}
	      );
	      console.log('MP4 uploaded to Storage to', fileName);
4946a7afd6b6fbd73d3b8609450400e7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|66|13|V|typescript
	            customMetadata: videoMeta,
a113ea8d436d3f6fcb6358c24bcb1ff0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|29|41|V|typescript
	      // use scrapper to download mp4...
	      const videoMeta = await tiktok.getVideoMeta(url, {
	        // Custom file name for the output files: {string default: ''}
	        noWaterMark: true,
	        // This option will only work if {noWaterMark} is set to {true}
	        hdVideo: true,
	      });
	      console.log("Got video metadata:", videoMeta['videoUrlNoWaterMark']);
29e3259b0cd428e313994dc151b6c5f4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|34|7|V|typescript
	      console.log("Filename is", fileName);
919a71e8a2d73039dd5958961fdbd224|file:///Users/vanities/git/fun/bitchan/js/package.json|22|6|v|json
	react-web3
4e4d6c332b6fe62a63afe56171fd3725|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|8|1|V|typescriptreact
	haha
9f45d107088958acbaf994c30aa2183c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|28|48|v|javascript
	https://vm.tiktok.com/TpPPmo/
dc37e36cf3054c6a2b0518139da3c921|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|55|1|V|javascript
	  describe('normal behavior 20MB file', function () {
	    this.timeout(40000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink2 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId2).get());
	      });
	    });
	  });
8064f11a68786894f2f5e52445f365e8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|69|13|v|javascript
	normal behavior 20MB file
72526e2f703d62071434a522709a7e25|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|71|9|v|javascript
	should create a storage bucket item from tiktok document creation
112971fdb0c0f5936624194388c4ec61|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|55|3|V|javascript
	  /*
3ee1b650c4a5c6004ae559a0af9ecc09|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|81|1|V|javascript
	          await admin.storage().bucket().file(videoId1).getMetadata()
7803eb7b6ee7a1239bcb51ddae3400a1|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|71|1|V|javascript
	  describe('normal behavior of metadata', function () {
	    this.timeout(40000);
	    it('should have populated some metadata about the video on upload', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        // await admin.storage().bucket().file(videoId1).getMetadata().metadata['firebaseStorageDownloadTokens']
	        //https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/6823208578300529925.mp4?alt=media&token=1087fc74-6a2f-4dfa-84de-dce9f63c9a16
	        return console.log(
	          await admin.storage().bucket().file(videoId1).getMetadata()
	        );
	      });
	    });
e3d9a9ca94057998ada843e8c8872365|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|90|31|v|javascript
	some metadata about the video on upload
b88149b19e588ab47df2179568f29c3f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|102|136|v|javascript
	1087fc74-6a2f-4dfa-84de-dce9f63c9a16
dcad20648c603e00a3803e24a80a4967|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|65|1|V|javascript
	        return assert.ok(await admin.storage().bucket().file(videoId2).get());
7052461d1118fa0425a8851ed72f5559|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|108|1|V|javascript
	        return console.log(
	          await admin.storage().bucket().file(videoId1).getMetadata()
	        );
eb9e946321e828c3db072571c0e0f3ac|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|107|32|v|javascript
	admin.storage(
0ce8d1e7577271229c674ff57fe9edff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|107|32|v|javascript
	).bucket(
e4e37e57a93b07ae1e4e9a963a8b32fd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|107|32|v|javascript
	).file(videoId2
1c640ff21fc32548c8ecee55e7b0e394|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|107|32|v|javascript
	).get(
d669bbb5d8e230d15bb1e30d7daf6e71|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|1|V|typescript
	import fetch from "node-fetch";
9ce29f64c13d564412039a6e7d645339|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|108|24|v|javascript
	await fetch(url);
a15952472ca4d6d30c9c1dab3299fcdc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|108|9|V|javascript
	        const result = await fetch(url);
b609037e373665326b660729ca2aca07|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|98|1|V|javascript
	        const accessToken = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata()['metadata']['firebaseStorageDownloadTokens'];
ea30d2df1fb0c514eed5b97b054a87d0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|102|25|v|javascript
	['metadata']['firebaseStorageDownloadTokens'];
ea25ee83d00175d2af2eba73cb03d55d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|99|17|v|javascript
	admin.storage().bucket().file(videoId1).getMetadata()
31004d33f7940d2de92f8aec212b9d45|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|102|25|v|javascript
	[0]['metadata']['firebaseStorageDownloadTokens'];
d355552f9741a2c2860d68bbe89fe11c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|66|9|V|typescript
	        customMetadata: {"hello": "hello"}
bf639b0e9f617cb20b6cb02defe2233d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|64|24|v|typescript
	"hello": "hello"
fbcc826835ebd506a84aedaf25cd74ca|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|64|7|V|typescript
	      customMetadata: {},
d730dd3e2191e529b58a4c12217192e4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|67|1|V|typescript
	        ownerId: videoMetaData['authorMeta']['id'],
4d1f742e7e78edac17f26a6113bc2197|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|66|1|V|typescript
	        videoID: videoMetaData[id],
	        ownerId: videoMetaData['authorMeta']['id'],
	        ownerName: videoMetaData['authorMeta']['name'],
e2062ed3b4e32d5a9ea0cb1d7c5626b0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|87|3|V|javascript
	  */
a1720f938070c5df0b620d6a9e2c807d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|79|1|V|javascript
	        // await admin.storage().bucket().file(videoId1).getMetadata().metadata['firebaseStorageDownloadTokens']
	        //https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/6823208578300529925.mp4?alt=media&token=1087fc74-6a2f-4dfa-84de-dce9f63c9a16
	        return console.log(
	          await admin.storage().bucket().file(videoId1).getMetadata()
1d0e52eeaa9419726b8d9aebaf690878|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|92|1|V|javascript
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        console.log(metaData);
	        const accessToken =
	          metaData[0]['metadata']['firebaseStorageDownloadTokens'];
	        const url =
	          'https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/' +
	          videoId1 +
	          '?alt=media&token=' +
	          accessToken;
	        return assert.ok(await fetch(url));
43106d073ff813e5960a396f5588f0fd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|86|36|v|javascript
	firebaseStorageDownloadTokens
2470bfef5845f2f92328d78192a71578|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|85|9|V|javascript
	        const videoMeta = {metaData[0]['metadata']['videoID'];
c7d63bf149b164a4f9c612f1b321f17c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|85|50|v|javascript
	['videoID'];
6872c7e1d2b9e7c6931716cef4727685|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|87|15|V|javascript
	        const url =
	          'https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/' +
	          videoId1 +
	          '?alt=media&token=' +
	          accessToken;
ac22285b11b76e5cde7ab3ba4ce41f79|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|92|29|v|javascript
	await fetch(url
66eb6d8f51d21d5c5e5311e634a3c8ff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.test.js|84|9|V|javascript
	        console.log(metaData);
dc92e409e88dbca0ef0d75d08f098edb|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|99|1|V|typescript
	<Paste>
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	import * as fs from "fs";
	import fetch from "node-fetch";
	import { v4 as uuid } from "uuid";
	const tiktok = require("tiktok-scraper");
	
	admin.initializeApp();
	
	const runtimeOpts = {
	  timeoutSeconds: 300, // max=540
	};
	
	export const processTikTok = functions
	  .runWith(runtimeOpts)
	  .firestore.document("/tiktoks/{tiktokID}")
	  .onCreate(async (snap, _) => {
	    const data = snap.data();
	
	    const url = data?.url;
	    console.log("Got url:", url);
	    if (!url) {
	      console.error("No url in data!");
	      return;
	    }
	
	    try {
	      const videoMeta = await getVideoMetaData(url);
	      const videoUrl = videoMeta.videoUrlNoWaterMark;
	      const fileName = videoMeta.id + ".mp4";
	      const tempFileName = "/tmp/" + fileName;
	
	      const stringVideoMeta = {
	        videoID: videoMeta['id'],
	        ownerId: videoMeta['authorMeta']['id'],
	        ownerName: videoMeta['authorMeta']['name']
	      }
	
	      await downloadFile(videoUrl, tempFileName);
	      await uploadFile(tempFileName, fileName, stringVideoMeta);
	    } catch (err) {
	      console.error("Could not download/upload video!", err);
	      return;
	    }
	  });
	
	const getVideoMetaData = async (url: string) => {
	  // use scrapper to download mp4...
	  const videoMeta = await tiktok.getVideoMeta(url, {
	    // Custom file name for the output files: {string default: ''}
	    noWaterMark: true,
	    // This option will only work if {noWaterMark} is set to {true}
	    hdVideo: true,
	  });
	  console.log("Got video metadata:", videoMeta["videoUrlNoWaterMark"]);
	  return videoMeta;
	};
	
	const uploadFile = async (fromFilepath: string, toFilepath: string, videoMetaData: object) => {
	  // push the mp4 to cloud storage
	  console.log("Uploading video...");
	  const bucket = admin.storage().bucket();
	
	  await bucket.upload(fromFilepath, {
	    destination: toFilepath,
	    resumable: false,
	    metadata: {
	      contentType: "video/mp4",
	      cacheControl: "public, max-age=31536000",
	      metadata: {
	        firebaseStorageDownloadTokens: uuid(),
	        ...videoMetaData
	      },
	    },
	  });
	  console.log("MP4 uploaded to Storage to", toFilepath);
	};
	
	const downloadFile = async (url: string, path: string) => {
	  const res = await fetch(url);
	  const fileStream = fs.createWriteStream(path);
	  await new Promise((resolve, reject) => {
	    console.log("Downloading", url);
	    res.body.pipe(fileStream);
	    res.body.on("error", (err: Error) => {
	      console.log("Could not download video");
	      reject(err);
	    });
	    fileStream.on("finish", function () {
	      console.log("Finished downloading video");
	      resolve();
	    });
	  });
	};
c0051b9f98b41acafb2cef0c608e040c|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|6|1|V|typescriptreact
	//import Web3Provider from 'react-web3';
	//import { Web3Unavailable } from './Web3Unavailable';
2473ada2221ba6cbe6ca8052b853b903|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|11|1|V|typescriptreact
	    /*
	    <Web3Provider
	      web3UnavailableScreen={Web3Unavailable}
	      accountUnavailableScreen={Web3Unavailable}
	    >
	    */
d36fbde7ec0f0a968800b3f3a0ffd15d|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|12|7|V|typescriptreact
	      //</Web3Provider>
d1d3ea5dba38a23df2a4db76219bcbee|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|25|1|V|json
	    "webpack",
a78fb6ebe4a9ec9c3c7af0312dfb0869|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|26|1|V|json
	    "react-dom",
b1a412c95996a6196049bed5bf5fcbfd|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|37|1|V|json
	    "**/*.ts"
6319c955b935d4733e58bbcae33c1ec9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/tsconfig.json|14|5|V|json
	    "src"
f8e298d0925710991f54ff4a238007af|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/tsconfig.json|15|1|V|json
	    "react",
	    "react-dom",
	    "reactstrap"
3f6b14c0c48972b64aa3434bb89335be|file:///Users/vanities/git/fun/bitchan/js/src/App.tsx|1|1|V|typescriptreact
	import React from 'react';
	import logo from './logo.svg';
	import './App.css';
	
	function App() {
	  return (
	    <div className="App">
	      <header className="App-header">
	        <img src={logo} className="App-logo" alt="logo" />
	        <p>
	          Edit <code>src/App.tsx</code> and save to reload.
	        </p>
	        <a
	          className="App-link"
	          href="https://reactjs.org"
	          target="_blank"
	          rel="noopener noreferrer"
	        >
	          Learn React
	        </a>
	      </header>
	    </div>
	  );
	}
	
	export default App;
	
0b92a9679065b77fabb71ca7cc057c4b|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|11|1|V|yaml
	      - ./js:/bitchan
5a8d46396240140d74cba7449e31d17c|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|12|48|v|yaml
	/solidity
079d69b8325bc7b63e681831925c4cea|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|3|1|V|typescriptreact
	import './index.css';
fedcfa03f744b8c2a432011ac29fef53|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|20|5|V|typescriptreact
	    </DrizzleCon
96c49db914a0bada64686714716fe6e8|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|5|5|V|json
	    rootDir": "src",
a41b8d7afe5e5f8809c86b89dfd1547d|file:///Users/vanities/git/fun/bitchan/js/src/Nav.tsx|20|1|V|typescriptreact
	      account: context.web3.selectedAccount,
	      network: context.web3.network,
e91c1f09553c8de766a97801e765496e|file:///Users/vanities/git/fun/bitchan/js/src/Nav.tsx|25|40|v|typescriptreact
	SimpleStorage
295c5266731689fd9f833694f0672520|file:///Users/vanities/git/work/funfunfun-backend/firebase/6828605285863673094.csv|2|84|v|
	6828605279433771782
e1592019efc7ea0ff8807efc31a24a49|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	import * as fs from "fs";
	import fetch from "node-fetch";
	import { v4 as uuid } from "uuid";
	const tiktok = require("tiktok-scraper");
	
	admin.initializeApp();
	
	const runtimeOpts = {
	  timeoutSeconds: 300, // max=540
	};
	
	export const processTikTok = functions
	  .runWith(runtimeOpts)
	  .firestore.document("/tiktoks/{tiktokID}")
	  .onCreate(async (snap, _) => {
	    const data = snap.data();
	
	    const url = data?.url;
	    console.log("Got url:", url);
	    if (!url) {
	      console.error("No url in data!");
	      return;
	    }
	
	    try {
	      const videoMeta = await getVideoMetaData(url);
	      const videoUrl = videoMeta.videoUrlNoWaterMark;
	      const fileName = videoMeta.id + ".mp4";
	      const tempFileName = "/tmp/" + fileName;
	
	      const stringVideoMeta = {
	        videoID: videoMeta["id"],
	        ownerId: videoMeta["authorMeta"]["id"],
	        ownerName: videoMeta["authorMeta"]["name"],
	      };
	
	      await downloadFile(videoUrl, tempFileName);
	      await uploadFile(tempFileName, fileName, stringVideoMeta);
	    } catch (err) {
	      console.error("Could not download/upload video!", err);
	      return;
	    }
	  });
	
	const getVideoMetaData = async (url: string) => {
	  // use scrapper to download mp4...
	  const videoMeta = await tiktok.getVideoMeta(url, {
	    // Custom file name for the output files: {string default: ''}
	    noWaterMark: true,
	    // This option will only work if {noWaterMark} is set to {true}
	    hdVideo: true,
	  });
	  console.log("Got video metadata:", videoMeta["videoUrlNoWaterMark"]);
	  return videoMeta;
	};
	
	const uploadFile = async (
	  fromFilepath: string,
	  toFilepath: string,
	  videoMetaData: object
	) => {
	  // push the mp4 to cloud storage
	  console.log("Uploading video...");
	  const bucket = admin.storage().bucket();
	
	  await bucket.upload(fromFilepath, {
	    destination: toFilepath,
	    resumable: false,
	    metadata: {
	      contentType: "video/mp4",
	      cacheControl: "public, max-age=31536000",
	      metadata: {
	        firebaseStorageDownloadTokens: uuid(),
	        ...videoMetaData,
	      },
	    },
	  });
	  console.log("MP4 uploaded to Storage to", toFilepath);
	};
	
	const downloadFile = async (url: string, path: string) => {
	  const res = await fetch(url);
	  const fileStream = fs.createWriteStream(path);
	  await new Promise((resolve, reject) => {
	    console.log("Downloading", url);
	    res.body.pipe(fileStream);
	    res.body.on("error", (err: Error) => {
	      console.log("Could not download video");
	      reject(err);
	    });
	    fileStream.on("finish", function () {
	      console.log("Finished downloading video");
	      resolve();
	    });
	  });
	};
aaca13935927095265aba0671c4c89ff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|2|1|V|typescript
	const bar = require('./bar');
36f74604b394c012e2785e2c14cc1db8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	const processTikTok = require('./process_tiktok');
0f3e51a067b429580e71e8605482da17|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|38|v|typescript
	.processTikTok;
8bf2105e42878c5fad4886b9b7aca141|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|1|1|V|typescript
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	import * as fs from "fs";
f49839aba495481030deeaa9a4904ed0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/create_feed.ts|3|1|V|typescript
	import * as fs from "fs";
d576477e96a36036c6523b88959c69d6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/create_feed.ts|5|1|V|typescript
	// [END addMessageTrigger]
	  // Grab the text parameter.
78f10539e2198681bbc920ba38b24a6b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/create_feed.ts|6|3|V|typescript
	  // [START adminSdkPush]
3c6679411a91d8212192232b255a18e8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/create_feed.ts|8|3|V|typescript
	  // Redirect with 303 SEE OTHER to the URL of the pushed object in the Firebase console.
00a9cd6f87ceea7d11b070c31f4e13b2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/create_feed.ts|9|3|V|typescript
	  // [END adminSdkPush]
7ba24064b1f386c8a6d29456365c96b5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|1|1|V|javascript
	const fs = require('fs');
	const fetch = require('node-fetch');
	const assert = require('assert');
	
	//const functions = require('firebase-functions');
	const test = require('firebase-functions-test')(
	  {
	    databaseURL: 'https://funfunfun-test.firebaseio.com',
	    storageBucket: 'funfunfun-test.appspot.com',
	    projectId: 'funfunfun-test',
	  },
	  '/tmp/serviceAccount-test.json'
	);
	const admin = require('firebase-admin');
	const documentID = 'tiktoks/foobar';
	
	// TODO give it an access token?
	//      add metadata and tags?
	//      update the feed and tiktoks documents with the storage cdn url
	
	describe('processTikTok', () => {
	  let functions;
	  let shareLink1, shareLink2;
	  let videoId1, videoId2;
	
	  before(() => {
	    functions = require('../lib/index.js');
	    shareLink1 = 'https://vm.tiktok.com/3awDGF/';
	    shareLink2 = 'https://vm.tiktok.com/3mFJkB/';
	    videoId1 = '6792361683743526150.mp4';
	    videoId2 = '6821663181623020806.mp4';
	  });
	
	  after(async () => {
	    test.cleanup();
	    await admin.storage().bucket().file(videoId1).delete();
	    fs.unlinkSync('/tmp/' + videoId1);
	    await admin.storage().bucket().file(videoId2).delete();
	    fs.unlinkSync('/tmp/' + videoId2);
	  });
	
	  describe('normal behavior 4MB file', function () {
	    this.timeout(20000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId1).get());
	      });
	    });
	  });
	
	  describe('normal behavior 20MB file', function () {
	    this.timeout(60000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink2 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId2).get());
	      });
	    });
	  });
	
	  describe('normal behavior of metadata', function () {
	    this.timeout(20000);
	    it('should have populated some metadata about the video on upload', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const videoMeta = metaData[0]['metadata'];
	        delete videoMeta['firebaseStorageDownloadTokens'];
	        const expectedVideoMeta = {
	          videoID: '6792361683743526150',
	          ownerId: '6704092046275642374',
	          ownerName: 'chelstres',
	        };
	        return assert.deepEqual(expectedVideoMeta, videoMeta);
	      });
	    });
	  });
	
	  describe('normal behavior of open link', function () {
	    this.timeout(20000);
	    it('should have populated a randomly generated access token for download', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const accessToken =
	          metaData[0]['metadata']['firebaseStorageDownloadTokens'];
	        const url =
	          'https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/' +
	          videoId1 +
	          '?alt=media&token=' +
	          accessToken;
	        return assert.ok(await fetch(url));
	      });
	    });
	  });
	});
f90a640aa6ce926487865ccce42946d7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|44|1|V|javascript
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId1).get());
	      });
	    });
485a722c99676b6e415133424ca4659e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|45|1|V|javascript
	
	  describe('normal behavior 20MB file', function () {
	    this.timeout(60000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink2 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId2).get());
	      });
	    });
	  });
	
	  describe('normal behavior of metadata', function () {
	    this.timeout(20000);
	    it('should have populated some metadata about the video on upload', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const videoMeta = metaData[0]['metadata'];
	        delete videoMeta['firebaseStorageDownloadTokens'];
	        const expectedVideoMeta = {
	          videoID: '6792361683743526150',
	          ownerId: '6704092046275642374',
	          ownerName: 'chelstres',
	        };
	        return assert.deepEqual(expectedVideoMeta, videoMeta);
	      });
	    });
	  });
	
	  describe('normal behavior of open link', function () {
	    this.timeout(20000);
	    it('should have populated a randomly generated access token for download', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const accessToken =
	          metaData[0]['metadata']['firebaseStorageDownloadTokens'];
	        const url =
	          'https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/' +
	          videoId1 +
	          '?alt=media&token=' +
	          accessToken;
	        return assert.ok(await fetch(url));
	      });
	    });
	  });
	});
9b0f3bf09dfd99192f67489eb037e8f0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|45|1|V|javascript
	
	  describe('normal behavior 20MB file', function () {
	    this.timeout(60000);
	    it('should create a storage bucket item from tiktok document creation', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink2 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId2).get());
	      });
	    });
	  });
	
	  describe('normal behavior of metadata', function () {
	    this.timeout(20000);
	    it('should have populated some metadata about the video on upload', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const videoMeta = metaData[0]['metadata'];
	        delete videoMeta['firebaseStorageDownloadTokens'];
	        const expectedVideoMeta = {
	          videoID: '6792361683743526150',
	          ownerId: '6704092046275642374',
	          ownerName: 'chelstres',
	        };
	        return assert.deepEqual(expectedVideoMeta, videoMeta);
	      });
	    });
	  });
	
	  describe('normal behavior of open link', function () {
	    this.timeout(20000);
	    it('should have populated a randomly generated access token for download', () => {
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        const metaData = await admin
	          .storage()
	          .bucket()
	          .file(videoId1)
	          .getMetadata();
	        const accessToken =
	          metaData[0]['metadata']['firebaseStorageDownloadTokens'];
	        const url =
	          'https://firebasestorage.googleapis.com/v0/b/funfunfun-25991.appspot.com/o/' +
	          videoId1 +
	          '?alt=media&token=' +
	          accessToken;
	        return assert.ok(await fetch(url));
	      });
	    });
4b3e23b8fa8e8ddbec4c89b0132a89aa|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|45|3|V|javascript
	  });
9b661861ed0956a44829023adec84cec|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|29|5|V|javascript
	    shareLink2 = 'https://vm.tiktok.com/3mFJkB/';
77bbadf68c69bebf841bfd57c9167b73|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|30|5|V|javascript
	    videoId2 = '6821663181623020806.mp4';
2174be34cdef4d1190b16fee72c22d7f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|23|17|v|javascript
	, shareLink2;
9e2ae23b986acbc7851bfba66197ed62|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|24|15|v|javascript
	, videoId2;
8b969b9d29b9907fd02d5d23b73bb392|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|15|1|V|javascript
	const documentID = 'tiktoks/foobar';
c3e718db0ed7f10900f9e6073c2689c2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|16|1|V|javascript
	// TODO give it an access token?
	//      add metadata and tags?
	//      update the feed and tiktoks documents with the storage cdn url
89685383f7b30268269fed4794544fe8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|16|11|v|javascript
	processTikTok
1f5421e9be96733578d9bf8bd2786096|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|1|1|V|javascript
	const fs = require('fs');
	const fetch = require('node-fetch');
d95a0215910e2e6b3152e82b74c41f28|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|29|1|V|javascript
	    await admin.storage().bucket().file(videoId2).delete();
	    fs.unlinkSync('/tmp/' + videoId2);
b1f4361b7856b000c071bfbb84cabe28|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|31|13|v|javascript
	normal behavior 4MB file
f9363b8178847aa2bf495c556ecf35cf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|16|17|V|javascript
	  let shareLink1;
	  let videoId1;
5192fe79e449e12e943f7f8cb5ecf625|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|17|3|V|javascript
	  let videoId1;
f3ee8b76ca0aa700fabdb60ec75e144e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|3|V|typescript
	  // Push the new message into the Realtime Database using the Firebase Admin SDK.
de4e1f144c515ac77a2fa0d4add23e8c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|36|1|V|javascript
	    await admin.storage().bucket().file(videoId1).delete();
be24c6ac813e42f62ca72df5b58af518|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|3|V|typescript
	  //result.redirect(303, snapshot.ref.toString());
985d588d28d12409d30563f294874e6c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|117|1|V|javascript
	        return assert.ok(await fetch(url));
9d380b29eafc04de257d05a3e3a7be7f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|30|5|V|javascript
	    console.log();
159b016b4e3b28ecb577971767bda4fd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|58|1|V|javascript
	    it('should create a storage bucket item from tiktok document creation', () => {
e1085cb88f40a4ff7d6b92552e047761|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|30|25|v|javascript
	storage bucket item from tiktok document creation
9c2e1eaff1069017bccceefe77b3755d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|45|1|V|javascript
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
7db92d3c26147332775581e1b987c0c9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|50|1|V|javascript
	      return wrapped(snap).then(async () => {
980efa458451be2cd888600da5a3264b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|1|V|javascript
	      const wrapped = test.wrap(functions.addToFeed);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await fetch(url));
1bb30a5f7f98ce320e2a3591ccd01716|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|7|V|javascript
	      });
9ebdad1b8574ade052748b5c8a88c90b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|35|32|V|javascript
	          // Assert code is 303
	          assert.equal(code, 303);
50c0c143b857b7744691cf10c3ad376e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|7|53|v|typescript
	original}
b4a88417b3d0170d754c647c30b7216a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|15|v|typescript
	result
0f3ba2cdfc32f9ccc3aa81be03d30e69|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|17|1|V|javascript
	// TODO give it an access token?
	//      add metadata and tags?
f159b144b0a8fe974538307cd6bca577|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|17|1|V|javascript
	//      update the feed and tiktoks documents with the storage cdn url
21232f297a57a5a743894a0e4a801fc3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|10|26|v|typescript
	admin
da1f6fd1e271ba686eea27a595f5fa26|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|10|26|v|typescript
	admin.firestore()
a0bef483efaa96659c2caa91a932d597|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|17|3|V|typescript
	  console.log(snapshot);
92cfeede7f84e7eec7c0ee2e147cc749|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|16|3|V|typescript
	    push({url: url});
7937c7732980b2cbf4e142f3737e5049|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|11|10|v|typescript
	'Tokyo',
16cba6acfb6c7c8aa1c514d43313c20e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|12|5|V|typescript
	    country: 'Japan'
d8f82d282c3e3fe795a05ab4d3668ad5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|17|1|V|typescript
	  return addFeed.then(res => {
	    console.log('Add: ', res);
	  });
b8feb4da480e6c4150e3d8af32e82a43|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|3|V|typescript
	  console.log(url);
95f45e10cefcf434ed8ec0df3d7bc227|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|15|3|V|typescript
	  console.log(result);
ef00e9b4e85e926ab7619d9a59d4e2ce|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|1|1|v|javascript
	const assert = require('assert');
	
	//const functions = require('firebase-functions');
	const test = require('firebase-functions-test')(
	  {
	    databaseURL: 'https://funfunfun-test.firebaseio.com',
	    storageBucket: 'funfunfun-test.appspot.com',
	    projectId: 'funfunfun-test',
	  },
	  '/tmp/serviceAccount-test.json'
	);
	const admin = require('firebase-admin');
	
	describe('addToFeed', () => {
	  let functions;
	  let shareLink1;
	
	  before(() => {
	    functions = require('../lib/add_to_feed.js');
	    shareLink1 = 'https://vm.tiktok.com/3awDGF/';
	  });
	
	  after(async () => {
	    test.cleanup();
	    //await admin.storage().bucket().file(videoId1).delete();
	    //admin.database().ref('messages').remove();
	  });
	
	  describe('normal behavior of adding a url to feed', function () {
	    it('should create a database entrly in /feeds', () => {
	      const request = { query: { url: shareLink1 } };
	      // A fake response object, with a stubbed redirect function which does some assertions
	      const response = {
	        redirect: (code, url) => {
	          assert.equal(code, 200);
	          // If the database push is successful, then the URL sent back will have the following format:
	          const expectedRef = new RegExp(projectConfig.databaseURL + '/feeds/');
	          assert.isTrue(expectedRef.test(url));
	          done();
	        },
	      };
	
	      // Invoke addMessage with our fake request and response objects. This will cause the
	      // assertions in the response object to be evaluated.
	      functions.addToFeed(request, response);
	    });
	  });
	});
55712b249334575ea3bed18cc863a848|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|1|1|v|typescript
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	
	admin.initializeApp();
	
	export const addToFeed = functions.https.onRequest(async (request, result) => {
	  const url = request.query.url;
	  const db = admin.firestore();
	
	  await db.collection('/feed').add({
	    url: url
	  }).then(ref => {
	    console.log('Added document with ID: ', ref.id);
	  });
	});
51d693a84d63edc26d33019886e6a606|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|36|v|typescript
	https.onRequest
9dafe30348d1996db786137f375fe16d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|80|v|typescript
	request, result
243fc16005689707f86821d497d93da0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|33|7|V|typescript
	      const tempFileName = "/tmp/" + fileName;
facd23ba77772694d483e8d62cf81a39|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|4|1|V|typescript
	import * as os from "os";
7af10e4a0aae2488d31ca7d99fa88213|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|34|9|V|typescript
	        videoMeta.id + ".mp4";
8989250811e32788c63452c17491ffdb|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|33|5|V|javascript
	    fs.unlinkSync('/tmp/' + videoId1);
5d1e2a673ce22573fc2682a734d1c7ce|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|34|5|V|javascript
	    fs.unlinkSync('/tmp/' + videoId2);
050ab9064436d119724112ee65190a0e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|15|v|typescript
	request.query.url;
f0acbfe6b2900e02b25d4dce64dec55b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|10|3|V|typescript
	  const db = admin.firestore();
877a6d6d90a49ce496afaa5ed2ca7c62|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|26|v|typescript
	.getMetadata()
169e9730cb20bdd4b2c597d572e69949|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|27|5|V|javascript
	    //admin.database().ref('messages').remove();
d4f98bb302fec2507ca8e65f5811b2e2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|33|1|V|javascript
	      const request = { query: { url: shareLink1 } };
	      // A fake response object, with a stubbed redirect function which does some assertions
	      const response = {
	        redirect: (code, url) => {
	          assert.equal(code, 200);
	          // If the database push is successful, then the URL sent back will have the following format:
	          const expectedRef = new RegExp(projectConfig.databaseURL + '/feeds/');
	          assert.isTrue(expectedRef.test(url));
	          done();
	        },
	      };
	
	      // Invoke addMessage with our fake request and response objects. This will cause the
	      // assertions in the response object to be evaluated.
	      functions.addToFeed(request, response);
	    });
bbcaf39f7d2f9298c74a5ab5d2e73196|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|33|1|V|javascript
	      const request = { query: { url: shareLink1 } };
	      // A fake response object, with a stubbed redirect function which does some assertions
	      const response = {
	        redirect: (code, url) => {
	          assert.equal(code, 200);
	          // If the database push is successful, then the URL sent back will have the following format:
	          const expectedRef = new RegExp(projectConfig.databaseURL + '/feeds/');
	          assert.isTrue(expectedRef.test(url));
	          done();
	        },
	      };
	
	      // Invoke addMessage with our fake request and response objects. This will cause the
	      // assertions in the response object to be evaluated.
	      functions.addToFeed(request, response);
b5f453109399eeb2c2af2376ff55ab6f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|39|1|V|javascript
	      const wrapped = test.wrap(functions.processTikTok);
	      const snap = test.firestore.makeDocumentSnapshot(
	        { user: 'chelstre', url: shareLink1 },
	        documentID
	      );
	      return wrapped(snap).then(async () => {
	        return assert.ok(await admin.storage().bucket().file(videoId1).get());
f74218384aae33674c8bfb1afa055b21|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|40|1|V|javascript
	    });
5e896a1f1355795bb8f3d5554f5dcd88|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|41|11|v|javascript
	user:
058328bed5600085ff233fdcec425a70|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|41|11|v|javascript
	 'chelstre',
cf7e16c9e5071583f85ba921f23a25b9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|95|10|v|javascript
	ser:
786bd5f468cf4d30f225909fb1f12130|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|40|17|v|javascript
	admin.firestore().collection('feeds').doc(videoId1).get()
57b39ff217150e9f49ef2c350ef7bbf8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|33|1|V|javascript
	      this.timeout(20000);
4b43b9cf52991a11b13a8ff7a457f230|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|52|1|V|typescript
	export const process
3cf5b3fd73a0aa7f62b78a8fd40e3a25|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|30|9|V|typescript
	    try {
	      const videoMeta = await getVideoMetaData(url);
	      const videoUrl = videoMeta.videoUrlNoWaterMark;
	
	      const fileName = path.format({name: videoMeta.id, ext: MP4_EXTENSION});
	      const tempLocalFile = path.join(os.tmpdir(), fileName);
	
	      const stringVideoMeta = {
	        videoID: videoMeta["id"],
	        ownerId: videoMeta["authorMeta"]["id"],
	        ownerName: videoMeta["authorMeta"]["name"],
	      };
	
	      await downloadFile(videoUrl, tempLocalFile);
	      await uploadFile(tempLocalFile, fileName, stringVideoMeta);
	      fs.unlinkSync(tempLocalFile);
	    } catch (err) {
	      console.error("Could not download/upload video!", err);
	      return;
	    }
772cc84bc0ba7259e9162745476578d8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|17|3|V|javascript
	  let 
164c077684399dea1d8f66aa7b88faf6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|22|5|V|javascript
	    functions = require('../lib/process_tiktok.js');
460d30459ad88795850687a52b7ffba4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|22|33|v|javascript
	process_tiktok
fef2f7fadca591856344602f2d918708|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|37|1|V|javascript
	      const snap = test.firestore.makeDocumentSnapshot(
	        { url: shareLink1 },
	        documentID
	      );
cfede6f0fcbc8010d2ce9ba03456e92d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|23|5|V|javascript
	    uploadTiktok = require('../lib/process_tiktok.js');
b6484ec8f6381432ad37f84499407d89|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|22|5|V|javascript
	    import { uploadTiktok } from '../lib/process_tiktok.js';
57191c3fff87bc3b5fc12bcd13b19aec|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|17|3|V|javascript
	  let uploadTiktok;
09b864492993353b3c464892ed3a24d2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|13|1|V|javascript
	import { uploadTikTok } from '../lib/process_tiktok.js';
20f3266d6f21c57b8754b007c836fd0c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|32|1|V|typescript
	export const uploadTikTok = (async (shareLink: string) => {
	    try {
	      const videoMeta = await getVideoMetaData(shareLink);
	      const videoUrl = videoMeta.videoUrlNoWaterMark;
	
	      const fileName = path.format({name: videoMeta.id, ext: MP4_EXTENSION});
	      const tempLocalFile = path.join(os.tmpdir(), fileName);
	
	      const stringVideoMeta = {
	        videoID: videoMeta["id"],
	        ownerId: videoMeta["authorMeta"]["id"],
	        ownerName: videoMeta["authorMeta"]["name"],
	      };
	
	      await downloadFile(videoUrl, tempLocalFile);
	      await uploadFile(tempLocalFile, fileName, stringVideoMeta);
	      fs.unlinkSync(tempLocalFile);
	    } catch (err) {
	      console.error("Could not download/upload video!", err);
	      return;
	    }
	});
	
	
	const getVideoMetaData = (async (url: string) => {
	  // use scrapper to download mp4...
	  const videoMeta = await tiktok.getVideoMeta(url, {
	    // Custom file name for the output files: {string default: ''}
	    noWaterMark: true,
	    // This option will only work if {noWaterMark} is set to {true}
	    hdVideo: true,
	  });
	  console.log("Got video metadata:", videoMeta["videoUrlNoWaterMark"]);
	  return videoMeta;
	});
	
	const uploadFile = (async (
	  fromFilepath: string,
	  toFilepath: string,
	  videoMetaData: object
	) => {
	  // push the mp4 to cloud storage
	  console.log("Uploading video...");
	  const bucket = admin.storage().bucket();
	
	  await bucket.upload(fromFilepath, {
	    destination: toFilepath,
	    resumable: false,
	    metadata: {
	      contentType: "video/mp4",
	      cacheControl: "public, max-age=31536000",
	      metadata: {
	        firebaseStorageDownloadTokens: uuid(),
	        ...videoMetaData,
	      },
	    },
	  });
	  console.log("MP4 uploaded to Storage to", toFilepath);
	});
	
	const downloadFile = (async (url: string, localPath: string) => {
	  const res = await fetch(url);
	  const fileStream = fs.createWriteStream(localPath);
	  await new Promise((resolve, reject) => {
	    console.log("Downloading", url);
	    res.body.pipe(fileStream);
	    res.body.on("error", (err: Error) => {
	      console.log("Could not download video");
	      reject(err);
	    });
	    fileStream.on("finish", function () {
	      console.log("Finished downloading video");
	      resolve();
	    });
	  });
	});
5835fa5fb113a7a6e204dfe85eea0230|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|1|1|V|typescript
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	import * as fs from "fs";
	import * as os from "os";
	import * as path from "path";
	import fetch from "node-fetch";
	import { v4 as uuid } from "uuid";
	const tiktok = require("tiktok-scraper");
f5204d79cda27e4b83231ae74e23afb6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|1|1|V|typescript
	import * as functions from "firebase-functions";
c21f969b5f03d33d43e04f8f136e7682|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|9|16|v|typescript
	default
dae600ca2a003f016a94370376c6ce3d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|15|1|V|typescript
	const MP4_EXTENSION = ".mp4";
2b183fb87e2fb91e2f4378e65cfe2f9f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|13|34|v|javascript
	process_tiktok.js
b11049f1cff0119c25b281ba123fcad3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|14|1|V|javascript
	import uploadTikTok from '../lib/tiktok.js';
91655e6167367a8cf243ed8e08e3f5a2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|32|1|V|typescript
	
	export const uploadTikTok = (async (shareLink: string) => {
	    try {
	      const videoMeta = await getVideoMetaData(shareLink);
	      const videoUrl = videoMeta.videoUrlNoWaterMark;
	
	      const fileName = path.format({name: videoMeta.id, ext: MP4_EXTENSION});
	      const tempLocalFile = path.join(os.tmpdir(), fileName);
	
	      const stringVideoMeta = {
	        videoID: videoMeta["id"],
	        ownerId: videoMeta["authorMeta"]["id"],
	        ownerName: videoMeta["authorMeta"]["name"],
	      };
	
	      await downloadFile(videoUrl, tempLocalFile);
	      await uploadFile(tempLocalFile, fileName, stringVideoMeta);
	      fs.unlinkSync(tempLocalFile);
	    } catch (err) {
	      console.error("Could not download/upload video!", err);
	      return;
	    }
	});
	
	
	const getVideoMetaData = (async (url: string) => {
	  // use scrapper to download mp4...
	  const videoMeta = await tiktok.getVideoMeta(url, {
	    // Custom file name for the output files: {string default: ''}
	    noWaterMark: true,
	    // This option will only work if {noWaterMark} is set to {true}
	    hdVideo: true,
	  });
	  console.log("Got video metadata:", videoMeta["videoUrlNoWaterMark"]);
	  return videoMeta;
	});
	
	const uploadFile = (async (
	  fromFilepath: string,
	  toFilepath: string,
	  videoMetaData: object
	) => {
	  // push the mp4 to cloud storage
	  console.log("Uploading video...");
	  const bucket = admin.storage().bucket();
	
	  await bucket.upload(fromFilepath, {
	    destination: toFilepath,
	    resumable: false,
	    metadata: {
	      contentType: "video/mp4",
	      cacheControl: "public, max-age=31536000",
	      metadata: {
	        firebaseStorageDownloadTokens: uuid(),
	        ...videoMetaData,
	      },
	    },
	  });
	  console.log("MP4 uploaded to Storage to", toFilepath);
	});
	
	const downloadFile = (async (url: string, localPath: string) => {
	  const res = await fetch(url);
	  const fileStream = fs.createWriteStream(localPath);
	  await new Promise((resolve, reject) => {
	    console.log("Downloading", url);
	    res.body.pipe(fileStream);
	    res.body.on("error", (err: Error) => {
	      console.log("Could not download video");
	      reject(err);
	    });
	    fileStream.on("finish", function () {
	      console.log("Finished downloading video");
	      resolve();
	    });
	  });
	});
072a430d2fcd8747214dd67dbf8a8f27|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|3|1|V|typescript
	import * as fs from "fs";
	import * as os from "os";
	import * as path from "path";
	import fetch from "node-fetch";
	import { v4 as uuid } from "uuid";
827dd1d00f2c33cc25d756b16bf459bc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|4|1|V|typescript
	const tiktok = require("tiktok-scraper");
ecca24a76b27e2d4c974714e44100fe8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/tsconfig.json|14|1|V|json
	    "process_tiktok"
78a1e78f77d388218c7f3bb4938386ac|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|3|1|V|typescript
	import uploadTikTok from "../lib/tiktok.js"
4b5affb5d3c3c2b11efdd124695ecbff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|3|1|V|typescript
	const tiktok = require('../lib/tiktok.js');
293b4a58edd0aa1fa79d9864df3718a7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|13|1|V|javascript
	const uploadTikTok = require('../lib/tiktok.js');
547d468cee6427e3d6d7de7ab647965e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|34|7|V|javascript
	      tiktok.uploadTikTok(shareLink1);
1197a9aea6247e8d80ac20f755e5a4ae|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|25|5|V|javascript
	    await tiktok.uploadTikTok(shareLink1);
1964dd607cd5e2ceeaaaffea42a8ceff|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|34|6|v|javascript
	 tiktok.uploadTikTok(shareLink1);
6f0feddda20ac966df041e68b4419499|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|24|5|V|javascript
	    await tiktok.
c39e3a1ed10602d33ea56d7f556b61da|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|22|19|v|javascript
	https://vm.tiktok.com/3awDGF
291321c0cd7cf2336519d6bc6ae7da3f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|36|22|v|javascript
	await tiktok.uploadTikTok(shareLink1
6b8491b840750162117dc77370190a48|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|36|7|V|javascript
	      console.log(test);
3e166348126cfd67239e829dc213ae24|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|7|20|v|javascript
	'funfunfun-test.appspot.com',
2452479608f77e6c9bd4d7b5569cbd02|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|38|46|v|javascript
	'my-firebase-project-id.appspot.com'
74b420eba07f204fcef530191a85d9bf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|7|3|V|typescript
	  console.log("in!", object);
0250fac42f6f52eb4919fb55c91bc3f9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|7|26|v|typescript
	.getMetadata();
9f81f3c07476a0d97f6793673dd8e475|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|8|28|v|typescript
	metadata
0160351a9346506da14fd15bbbad7be6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|35|7|V|javascript
	      console.log(test.storage);
78a650620a49efb14c4edd32cdb32af2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|55|13|V|javascript
	            .data()
3fe9297ab7ac90d2a759c2296325698a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|14|18|v|typescript
	Added document with ID
c63a7fc48f402bde97ca739e34066342|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|16|3|V|typescript
	  return ref.id;
aa8549c566ec9fc1091d7f38f9ca3691|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|48|9|V|javascript
	        console.log(wrapped());
ec4c17cf6f5ff02f1034f788d0646fdc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|48|9|V|javascript
	        console.log(id);
c94068b4ce6bdb41efc1f53ff1ea3727|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|53|19|v|javascript
	NAWDfCOUC3vGcXTpRQlO
e4295d4cb9abcd7a24683623fcf17f62|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|50|55|v|javascript
	doc('asudhasdui').get()
0010569f3b75d30c062331371a63b21b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|54|19|v|javascript
	.url
3e25f37270c13686c7ba2eca362374b8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|50|11|V|javascript
	          const get = await admin
	            .firestore()
	            .collection('feed')
	            .doc('lf1us338gYSO5YyHtpiu')
	            .get()
1016250c92a41899b79dfcb14501cee6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|55|11|V|javascript
	          await admin.firestore().collection('feed').doc(videoId1).get()
76413b1c04ff6feaf13bf425506c2b04|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|53|9|V|javascript
	        console.log('lol', get.data());
3c87d01db585aa7b5fc526c7b7ed8137|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|62|v|typescript
	onFinalize
17b2fcf1aead8f48d8767f5c8582eb5b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|53|1|V|javascript
	        return assert.deepEqual(get.data(), {
	          url: 'https://vm.tiktok.com/3awDGF/',
cd9619d43b9d3a2bf0110c0cd908fd35|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|7|V|javascript
	      let get;
1ba8b1860ec1fd0ce737cf091ec5a1b9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|48|1|V|javascript
	        get = await admin
	          .firestore()
	          .collection('feed')
	          .doc('lf1us338gYSO5YyHtpiu')
	          .get();
22fd27d8f92ab516bcdef8d9f205ca6a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|1|V|javascript
	
	      get = await admin
	        .firestore()
	        .collection('feed')
	        .doc('lf1us338gYSO5YyHtpiu')
	        .get();
857d9abe63f79d025f4ab36428139379|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|37|v|javascript
	.then(async () => {});
4ee6677b8879d92a2d1d02448525da39|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|53|7|V|javascript
	      console.log(id);
0b03e87b03eb9e587ec98bada974c3ba|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|51|14|v|javascript
	'lf1us338gYSO5YyHtpiu'
ac7499c0be97f485f4f310ddf14c1a3e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|28|5|V|javascript
	    //await admin.storage().bucket().file(videoId1).delete();
db688ef555f3d246dc85f41fb412f5df|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|69|v|javascript
	.get();
afecd04e2cc2341de97acdcb54abafcb|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|47|1|V|javascript
	      const doc = await admin.firestore().collection('feed').doc(id).get();
3e669779f5034f8b0dc449ecef2db027|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|53|7|V|javascript
	      doc.delete();
4f88decd7b92262eb15d7823e351f34a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|51|6|V|javascript
	      console.log(doc);
7e1aece8e5e16eca9d2f461f79189e41|file:///Users/vanities/git/fun/bitchan/js/package.json|22|5|V|json
	    "web3-react": "^5.0.5"
adaeedeb4ef0df7f030e0360b1ecc80e|file:///Users/vanities/git/fun/bitchan/js/package.json|24|1|V|json
	    "@drizzle/react-components": "^1.5.1",
	    "@drizzle/react-plugin": "^1.5.1",
	    "@drizzle/store": "^1.5.1",
	    "@types/node": "^14.0.4",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0"
dda79c68871f8561bdf86cca685a0b98|file:///Users/vanities/git/fun/bitchan/js/package.json|29|1|V|json
	  "devDependencies": {
	  },
ec97ae67c7bf3dc317c0540bf4a94e41|file:///Users/vanities/git/fun/bitchan/js/package.json|14|1|V|json
	    "@types/node": "^14.0.4",
	    "@types/react": "^16.9.0",
	    "@types/react-dom": "^16.9.0"
53a29d9eae767c0c36e59c2cc516d953|file:///Users/vanities/git/fun/bitchan/js/src/Loading.tsx|36|1|V|typescriptreact
	export default Loading
353b03c6b2899928ba53776f84e3ff4c|file:///Users/vanities/git/fun/bitchan/js/src/LoadingConatiner.tsx|14|1|V|typescriptreact
	export default LoadingContainer
18a18c66c579e835ab2454f71ba73bd9|file:///Users/vanities/git/fun/bitchan/js/src/App.tsx|6|1|V|typescriptreact
	//import { SignUp } from './SignUp';
05f64ef6f511c4be977dba25a128f349|file:///Users/vanities/git/fun/bitchan/js/.dockerignore|1|1|V|
	node_modules
	npm-debug.log*
	Dockerfile
	Dockerfile.prod
	README.md
99be136f82ef702228c312d9ee1261e3|file:///Users/vanities/git/fun/bitchan/js/src/App.tsx|23|45|v|typescriptreact
	 || 'http://localhost:8545'
096a679f8426be3af900747bcb92bd32|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|12|10|v|yaml
	/solidity/build/contracts
20ff5a4b99e1839ef10a5dd15b66d4bb|file:///Users/vanities/git/fun/bitchan/js/tsconfig.json|10|1|V|json
	    "rootDir": "src",
363099dc9e75e45aec37f1dc7d2e883c|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|6|1|V|typescriptreact
	import { DrizzleContext } from "@drizzle/react-plugin";
ae43d241b2a1575250cc14a14e4951e9|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|3|1|V|typescriptreact
	import App from './App';
db657fe9570dbd6122764551d0a2f8e3|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|12|34|V|typescriptreact
	// 2. Setup the drizzle instance.
	const options = { contracts: [User] };
	const drizzleStore = generateStore(options);
	const drizzle = new Drizzle(options, drizzleStore);
7a68b015cfdd7da1259531b227eb9276|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|7|1|V|typescriptreact
	import User from "./contracts/User.json";
f9304bc1b01c9fb5823f2a48f2443ce9|file:///Users/vanities/git/fun/bitchan/js/src/set-up-drizzle.tsx|7|1|V|typescriptreact
	const options = { contracts: [SimpleStorage] };
	const drizzleStore = generateStore(options);
	const drizzle = new Drizzle(options, drizzleStore);
88a11f5b21afe5efddfd2e49bbc8e854|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|9|1|V|typescriptreact
	const options = { contracts: [User] };
	const drizzleStore = generateStore(options);
	const drizzle = new Drizzle(options, drizzleStore);
e5138ba0dc77de54592c2493ae521e6d|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|8|1|V|typescriptreact
	// 2. Setup the drizzle instance.
849b1ce202d3992653ecd3162374ae3b|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|9|31|v|typescriptreact
	 // Instantiate drizzle instance as you normally would.
bea97fa8a2b61c9e72405b3406dd6976|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|5|1|V|typescriptreact
	import { Drizzle, generateStore } from "@drizzle/store";
	import { DrizzleContext } from "@drizzle/react-plugin";
b19a14ec168d28b7a9cc3b051e6f9c52|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|5|1|V|typescriptreact
	import * as serviceWorker from './serviceWorker';
ef146a0b28d57dcd4b843c7fbf5e961c|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|17|5|V|typescriptreact
	    <DrizzleContext.Provider drizzle={drizzle}>
3bb5a1ed334d9f8c8c4a4c2cb6a2be1e|file:///Users/vanities/git/fun/bitchan/js/src/index.tsx|18|5|V|typescriptreact
	    </DrizzleContext.Provider>
6680dba00f3a88f66f8029a93d71d93c|file:///Users/vanities/git/fun/bitchan/js/src/set-up-drizzle.tsx|5|22|v|typescriptreact
	const
2d3ce19e9ce86d99b667ae7ac6bd4f9d|file:///Users/vanities/git/fun/bitchan/js/src/set-up-drizzle.tsx|6|1|V|typescriptreact
	  const options = { contracts: [User] };
	  const drizzleStore = generateStore(options);
aab4d2fbf416c50edf2230c2892abb41|file:///Users/vanities/git/fun/bitchan/js/src/set-up-drizzle.tsx|5|1|V|typescriptreact
	const options = { contracts: [User] };
	const drizzleStore = generateStore(options);
b2f0ad03b1bcdd7d376cf6d569e8fdb2|file:///Users/vanities/git/fun/bitchan/docker-compose.yml|31|18|v|yaml
	solidity
f51a9619195ff0e6cf24244ce042f4f4|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|18|7|V|typescriptreact
	      // Optional `node` to render on errors. Defaults to `'Error.'`.
f9357bdd0069fbcd014d15ef427ff4f7|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|12|1|V|typescriptreact
	console.log
ee21f98dbc9a72ae369582bc8cb78a23|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|19|7|V|typescriptreact
	      // Optional `node` to render while loading contracts and accounts. Defaults to `'Loading contracts and accounts.'`.
de8d24b5e6778eb136f868136f39b540|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|20|7|V|typescriptreact
	      // Optional `node` to render while loading `web3`. Defaults to `'Loading web3.'`.
a3834558ff56bf736022d40cbe7f5b13|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|16|1|V|typescriptreact
	    super(props);
b9d167093b6a9ca86fe5c38c90306101|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|17|1|V|typescriptreact
	    this.state = { numUsers: 0 };
3d462144bba09e590b7750df57e1be60|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|24|1|V|typescriptreact
	  async loadBlockchainData() {
	    const web3 = new Web3(Web3.givenProvider);
	    // TODO: make this contract Address automatic
	    const contractAddress = '0x695f57efefbf06623ea23bffc43909b2e268c5f4';
	    const UserContract = new web3.eth.Contract(User.abi, contractAddress);
	    const numUsers = await UserContract.methods.getNumUsers().call();
	    this.state = { numUsers: numUsers };
	  }
74d93e99ce0113167888c1e4fa1e6b3d|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|20|1|V|typescriptreact
	  componentWillMount() {
	    this.loadBlockchainData();
	  }
	
559d0596ed575e7dc81ebc3a22abe15f|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|5|1|V|typescriptreact
	import User from './contracts/User.json';
8e1090433e59429e1ae59968c4eb9d9c|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|2|1|V|typescriptreact
	import Web3 from 'web3';
82dc7327d1bbdabbed3f1d6eaebb0a47|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|19|7|V|typescriptreact
	      loadingContractsAndAccounts="Also still loading."
93a960219e7f5e3088663b3995c65359|file:///Users/vanities/git/fun/bitchan/client/src/setup_drizzle.tsx|9|3|V|typescriptreact
	  console.log("Setting up Drizzle:" , options, drizzleStore);
8ddf3b0dd6217cb7ad1ab2c77bb4cbc8|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|11|1|V|typescriptreact
	console.log("HEUJE")
6fb7b21f16af609568b50e066f81ccb4|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|15|3|V|typescriptreact
	  console.log("HEUJE");
e88c813c4266a86dd065cf12f1e2dcb6|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|12|1|V|typescriptreact
	      const {
	        drizzle,
	        useCacheCall,
	        useCacheEvents,
	        useCacheSend
	      } = drizzleReactHooks.useDrizzle()
3f18cded80444a8983299cdf91269647|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|25|1|V|typescriptreact
	    this.state = {
	      dataKey: null
	    };
08a65d17553eedbfc33022029602829c|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|29|1|V|typescriptreact
	  componentDidMount() {
	    const { drizzle } = this.props;
	    const contract = drizzle.contracts.User;
	
	    // get and save the key for the variable we are interested in
	    const dataKey = contract.methods["storedData"].cacheCall();
	    this.setState({ dataKey });
	  }
471a5335feaa506f66e0442189cf6199|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|41|18|v|typescriptreact
	.state.account
1c59797c4528efd2e7496931b64f62c5|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|21|1|V|typescriptreact
	      useCacheCall,
	      useCacheEvents,
	      useCacheSend
6386392bbfa062e09bd08bb658f5de02|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|20|1|V|typescriptreact
	      drizzle,
6d05535de4592648cb56ee66768ec7b4|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|21|1|V|typescriptreact
	      useCacheEvents,
	      useCacheSend
97217ecb1e08403b10b1cc023e349d5b|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|19|5|V|typescriptreact
	    const { useCacheCall} = drizzleReactHooks.useDrizzle()};
de9709e225fb278682b00d1b6c7e9c47|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|22|1|V|typescriptreact
	    const drizzleState = drizzleReactHooks.useDrizzleState(drizzleState => ({
	        account: drizzleState.accounts[0]
	      }))
f4e2347629af7b7af60b3fb8597abcfd|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|17|1|V|typescriptreact
	      <drizzleReactHooks.Initializer
	      error="There was an error."
	      loadingContractsAndAccounts="Also still loading."
	      loadingWeb3="Still loading."
2e5c0ec03258db47556c9ccfc5dafc2a|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|17|1|V|typescriptreact
	      <drizzleReactHooks.Initializer
	      error="There was an error."
	      loadingContractsAndAccounts="Also still loading."
	      loadingWeb3="Still loading."
	    >
2c19793b2499db3432ff308a5efbf6d0|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|19|5|V|typescriptreact
	    </drizzleReactHooks.DrizzleProvider>
55a90f7d751f3c316e5b28bac9e4f43f|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|18|5|V|typescriptreact
	      </drizzleReactHooks.Initializer>
56bbc8a7d6bbe0161fcfac687f3ac5e4|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|12|1|V|typescriptreact
	import { drizzleReactHooks } from '@drizzle/react-plugin'
ed180478c7a4689360aa29e7adfa80f7|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|3|1|V|typescriptreact
	import TopNav from "./Nav";
940b60bab3d1d728a3ee725c9b6fed1d|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|13|1|V|typescriptreact
	  constructor(props) {
	    super(props);
2bf214a824cfb41e2f48b98dfc796a45|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|19|1|V|typescriptreact
	  constructor(props, context) {
	    super(props, context);
72bc04716f22f7be6390002f09ef17c7|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|22|3|V|typescriptreact
	  render() {
22ab9eccf99474f2dd4c64592d92279c|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|37|1|V|typescriptreact
	  }
	}
c4f82fc8a072e0d2cec145961a3c0499|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|24|5|V|typescriptreact
	    <div>
b082895fab4c56c1aba17dcc672fca3a|file:///Users/vanities/git/fun/bitchan/client/src/Nav.tsx|35|5|V|typescriptreact
	    </div>
2e7480fae6c68652ba9ff5d493531c6d|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|14|5|V|typescriptreact
	    <drizzleReactHooks.DrizzleProvider drizzle={drizzle}>
07bfedef32b311342cce39a16e6186b4|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|7|1|V|typescriptreact
	import { drizzleReactHooks } from "@drizzle/react-plugin";
b80d4732df15aad662374f0f3e3a5160|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|7|1|V|typescriptreact
	import { Drizzle, generateStore } from "@drizzle/store";
b533b4c7af9215ba1842e7ab69bc15f4|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|19|1|V|typescriptreact
	import React from "react";
	import { BrowserRouter as Router, Switch, Route } from "react-router-dom";
	
	import { drizzleReactHooks } from '@drizzle/react-plugin'
	
	import TopNav from "./Nav";
	
	function Board() {
	  return <h3>Board</h3>;
	}
	
	export default class App extends React.Component {
	  drizzleState = drizzleReactHooks.useDrizzleState((drizzleState) => ({
	      accounts: drizzleState.getNumUsers,
	    }));
	    Home = this.Home.bind(this);
	
	  Home() {
	    return <h3>Number of users: {this.drizzleState.numUsers}</h3>;
	  }
	
	  render() {
	    return (
	      <div className="App">
	        <Router>
	          <div>
	            <TopNav />
	            <Switch>
	              <Route exact path="/">
	                <this.Home />
	              </Route>
	              <Route exact path="/board">
	                <Board />
	              </Route>
	            </Switch>
	          </div>
	        </Router>
	      </div>
	    );
	  }
	}
70dd19a5a79bd92cabe04ae2de48178b|file:///Users/vanities/git/fun/bitchan/client/src/index.tsx|13|1|V|typescriptreact
	import React from "react";
	import ReactDOM from "react-dom";
	import * as serviceWorker from "./serviceWorker";
	
	import App from "./App";
	
	import { DrizzleContext } from "@drizzle/react-plugin";
	import { setupDrizzle } from "./setup_drizzle";
	
	const drizzle = setupDrizzle();
	
	ReactDOM.render(
	  <React.StrictMode>
	    <DrizzleContext.Provider drizzle={drizzle}>
	      <App />
	    </DrizzleContext.Provider>
	  </React.StrictMode>,
	  document.getElementById("root")
	);
	
	// If you want your app to work offline and load faster, you can change
	// unregister() to register() below. Note this comes with some pitfalls.
	// Learn more about service workers: https://bit.ly/CRA-PWA
	serviceWorker.unregister();
565008a5d9dcbc24c7c510b638e22098|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|22|1|V|typescriptreact
	export default App;
	import React from "react";
	import { DrizzleContext } from "@drizzle/react-plugin";
	
	export default () => (
	  <DrizzleContext.Consumer>
	    {drizzleContext => {
	      const { drizzle, drizzleState, initialized } = drizzleContext;
	
	      if (!initialized) {
	        return "Loading...";
	      }
	
	      return (
	        <MyDrizzleApp drizzle={drizzle} drizzleState={drizzleState} />
	      );
	    }}
	  </DrizzleContext.Consumer>
	)
11f3d131f5d02ce17d78a784c6e3c34c|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|5|1|V|typescriptreact
	import "./App.css";
0a2e174e2f4f1744aa4dc57081f8f787|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|4|1|V|typescriptreact
	import logo from "./logo.png";
acfc5080c50bfdf99a1ace8e7de8bb98|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|25|13|V|typescriptreact
	            <img src={logo} alt="drizzle-logo" />
3cfeb3a8dfc41c9890b405cfbfdf9694|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|175|1|V|typescriptreact
	          <div className="section">
	            <h2>ComplexStorage</h2>
	            <p>
	              This contract shows data types with additional considerations.
	              Note in the code the strings below are converted from bytes to
	              UTF-8 strings and the device data struct is iterated as a list.
	            </p>
	            <p>
	              <strong>String 1: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="ComplexStorage"
	                method="string1"
	                toUtf8
	              />
	            </p>
	            <p>
	              <strong>String 2: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="ComplexStorage"
	                method="string2"
	                toUtf8
	              />
	            </p>
	            <strong>Single Device Data: </strong>
	            <ContractData
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="ComplexStorage"
	              method="singleDD"
	            />
	            <strong>Array of UInts: </strong>
	            <ContractData
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="ComplexStorage"
	              method="getUintarray"
	            />
	          </div>
	          <div className="section">
	            <h2>ComplexStorage with Custom Rendering</h2>
	            <p>
	              This is the same data as above, but enhanced with a custom render
	              function.
	            </p>
	            <p>
	              <strong>String 1: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="ComplexStorage"
	                method="string1"
	                toUtf8
	                render={data => (
	                  <>
	                    This is the value: <b>{data}</b>
	                  </>
	                )}
	              />
	            </p>
	            <p>
	              <strong>String 2: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="ComplexStorage"
	                method="string2"
	                toUtf8
	                render={myRender}
	              />
	            </p>
	            <strong>Single Device Data: </strong>
	            <ContractData
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="ComplexStorage"
	              method="singleDD"
	              render={displayData => {
	                var i = 0;
	                const displayObjectProps = [];
	
	                Object.keys(displayData).forEach(key => {
	                  if (i !== key) {
	                    displayObjectProps.push(
	                      <li key={i}>
	                        Element {i} has key: <strong>{key}</strong>
	                        <br />
	                        and value: {`${displayData[key]}`}
	                      </li>
	                    );
	                  }
	
	                  i++;
	                });
	                return <ol>{displayObjectProps}</ol>;
	              }}
	            />
	            <strong>Array of UInts: </strong>
	            <ContractData
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="ComplexStorage"
	              method="getUintarray"
	              render={displayData => (
	                <ol>
	                  {displayData.map(v => (
	                    <li key={v}>
	                      value: <strong>{v}</strong>
	                    </li>
	                  ))}
	                </ol>
	              )}
	            />
	          </div>
bd898b1e526a35c071742cd63d847df4|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|14|1|V|typescriptreact
	  events: {
	    SimpleStorage: ["User"],
	  },
44796ba5fbc9f1658cf3e208afa83af8|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|13|15|v|typescriptreact
	SimpleStorage, ComplexStorage, TutorialToken
9f3a2c820690576b5c956733c8e47f2b|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|2|1|V|typescriptreact
	import ComplexStorage from "./contracts/ComplexStorage.json";
	import TutorialToken from "./contracts/TutorialToken.json";
2b41a4cd5de4489451f6ff92d319630f|file:///Users/vanities/git/fun/bitchan/client/package.json|14|6|v|json
	@drizzle/react-component
514cc9fd80c23e25725976e3524c46b7|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|7|1|V|typescriptreact
	const myRender = data => (
	  <>
	    Value=<b>{data}</b>
	  </>
	);
c3dd03b06c457bb5f5d9e458ac0c94d9|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|12|1|V|typescriptreact
	  polls: {
	    accounts: 1500,
	  },
8f899de24ae187ace32e858240405ec0|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|52|1|V|typescriptreact
	          <div className="section">
	            <h2>SimpleStorage</h2>
	            <p>
	              This shows a simple ContractData component with no arguments,
	              along with a form to set its value.
	            </p>
	            <p>
	              <strong>Stored Value: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="SimpleStorage"
	                method="storedData"
	              />
	            </p>
	            <ContractForm
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="SimpleStorage"
	              method="set"
	            />
	            <p>
	              <strong>Stored Boolean Value: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="SimpleStorage"
	                method="storedBool"
	              />
	            </p>
	            <ContractForm
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="SimpleStorage"
	              method="setBool"
	            />
	
	            <h2>SimpleStorage with Custom Rendering</h2>
	            <p>
	              This is the same contract as above, but here we customize the ContractForm's rendered component's style.
	            </p>
	            <ContractForm
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="SimpleStorage"
	              method="set"
	              render={({ inputs, inputTypes, state, handleInputChange, handleSubmit }) => (
	                <form onSubmit={handleSubmit}>
	                  {inputs.map((input, index) => (
	                    <input
	                      style={{ fontSize: 30 }}
	                      key={input.name}
	                      type={inputTypes[index]}
	                      name={input.name}
	                      value={state[input.name]}
	                      placeholder={input.name}
	                      onChange={handleInputChange}
	                    />
	                  ))}
	                  <button
	                    key="submit"
	                    type="button"
	                    onClick={handleSubmit}
	                    style={{ fontSize: 30 }}
	                  >
	                    Submit Big
	                  </button>
	                </form>
	
	              )}
	            />
	          </div>
	
	          <div className="section">
	            <h2>TutorialToken</h2>
	            <p>
	              Here we have a form with custom, friendly labels. Also note the
	              token symbol will not display a loading indicator. We've
	              suppressed it with the <code>hideIndicator</code> prop because we
	              know this variable is constant.
	            </p>
	            <p>
	              <strong>Total Supply: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="TutorialToken"
	                method="totalSupply"
	                methodArgs={[{ from: accounts[0] }]}
	              />{" "}
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="TutorialToken"
	                method="symbol"
	                hideIndicator
	              />
	            </p>
	            <p>
	              <strong>My Balance: </strong>
	              <ContractData
	                drizzle={drizzle}
	                drizzleState={drizzleState}
	                contract="TutorialToken"
	                method="balanceOf"
	                methodArgs={[accounts[0]]}
	              />
	            </p>
	            <h3>Send Tokens</h3>
	            <ContractForm
	              drizzle={drizzle}
	              drizzleState={drizzleState}
	              contract="TutorialToken"
	              method="transfer"
	              labels={["To Address", "Amount to Send"]}
	            />
	          </div>
ba088ee502481d00a051ead07f38a449|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|5|19|v|typescriptreact
	 ContractData,
8f1eaa504cad8f749f116cdb3f7e48db|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|5|19|v|typescriptreact
	 ContractForm
9a6d699bd1d46f8ba201f63b5e845694|file:///Users/vanities/git/fun/bitchan/client/src/MyComponent.tsx|16|7|V|typescriptreact
	      const { accounts } = drizzleState;
8f9bfe9d1345237cb3b2b205864da075|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|11|15|v|typescriptreact
	User
6ed2d3fe9cedc2621c997fafe62494b9|file:///Users/vanities/git/fun/bitchan/client/src/drizzleOptions.tsx|1|1|V|typescriptreact
	import User from "./contracts/User.json";
	
	const options = {
	  web3: {
	    block: false,
	    fallback: {
	      type: "ws",
	      url: "ws://127.0.0.1:8545",
	    },
	  },
	  contracts: [User],
	};
	
	export default options;
bfa2c1654da4f7984bfe676042a93c68|file:///Users/vanities/git/fun/bitchan/client/src/setup_drizzle.tsx|1|1|V|typescriptreact
	import { Drizzle, generateStore } from "@drizzle/store";
	
	import { options } from
	
	
	export const setupDrizzle = () => {
	  console.log("setticng up drizzle");
	  const options = { contracts: [User] };
	  const drizzleStore = generateStore(options);
	  console.log("Setting up Drizzle:", options, drizzleStore);
	  return new Drizzle(options, drizzleStore);
	};
567e49fb3c034e90e5d11a7a330182b9|file:///Users/vanities/git/fun/bitchan/client/src/drizzle/drizzleSetup.tsx|8|3|V|typescriptreact
	  const options = { contracts: [User] };
23007df949e479b24696a89931eedb4b|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|8|17|v|typescriptreact
	new Drizzle(drizzleOptions);
16f91b75ba1709f4b26e1cbbc32bcc06|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|5|1|V|typescriptreact
	import drizzleOptions from "./drizzleOptions";
b62abae9ff49fa19b7ff156ecdb4f5aa|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|5|10|v|typescriptreact
	drizzleSetup
769cb5317a3970e8afe88a588751242f|file:///Users/vanities/git/fun/bitchan/client/src/drizzle/drizzleOptions.tsx|13|1|V|typescriptreact
	
	export default options;
f02f40cb93acbf352865b8a9cd7cbfa0|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|6|22|v|typescriptreact
	yComponent
781459f92af70ec4529fe36e13310602|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|6|21|v|typescriptreact
	MyComponent
80bf73262749e66ed393c7794cbbc7f9|file:///Users/vanities/git/work/funfunfun-backend/firebase/README.md|25|1|v|markdown
	op get document "GCP test admin service key" > /tmp/serviceAccount-test.json
437749ff4e0f9e0413b51b0d293dd804|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|5|30|V|javascript
	//const functions = require('firebase-functions');
	const test = require('firebase-functions-test')(
	  {
	    databaseURL: 'https://funfunfun-test.firebaseio.com',
	    storageBucket: 'funfunfun-test.appspot.com',
	    projectId: 'funfunfun-test',
	  },
	  '/tmp/serviceAccount-test.json'
	);
	const admin = require('firebase-admin');
8981248e749b44115f684304f4a6a066|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/index.js|2|1|V|javascript
	//const functions = require('firebase-functions');
00a61645a3abe8b92a9d0c9bb3d005dc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/run_tests|3|10|v|sh
	test/process_tiktok_test.js
7f042435185748124432431978624b8f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/run_tests|4|1|V|sh
	mocha --reporter spec test/process_tiktok_test.js
f1001dfecaf02a7cd4e43577af5f3879|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/run_tests|6|10|v|sh
	test/add_to_feed_test.js
a54508c1251c6aee222aa4b04ee24c8d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/run_tests|6|1|V|sh
	npm test 
3ac609bb0287f19bfc899abec5f7a6bd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	import { processTikTok } from './process_tiktok';
00eed8fea4b6ae8824d9f41646da5761|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const processTikTok = require("./process_tiktok");
	
	//import { processTikTok } from './process_tiktok';
	//import { addToFeed } from './add_to_feed';
	
	exports.processTikTok = processTikTok;
	//exports.addToFeed = addToFeed;
a8beccf268d8b96664a9a2bd49e737cc|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|2|1|V|typescript
	import * as admin from "firebase-admin";
bcb8a2f73cff332ada1b43eec11f9e4e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|2|1|V|typescript
	import * as admin from "firebase-admin";
	
	admin.initializeApp();
e3781923b91e775ed7b8f13b582f7a17|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|13|4|v|typescript
	: any
2245023265ae4cf87d02c8b6ba991139|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|6|21|v|typescript
	config
3a5fc37e438f2f5b39da496d59255f29|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const config = functions.config().firebase
9142843303222dea853bd8343a7fe61e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	console.log("Initializing apps")
1816a08eb5f1f1280541ca966b25847e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|7|1|V|typescript
	exports.foo = foo.foo;
	exports.bar = bar.bar;
fc5dfd3c88c382a28a570003645ac353|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|7|v|typescript
	foo = require('./foo');
b2d4990e5f3af74e4085b456820699df|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	const addToFeed 
9313a22d4458ba87372b95c878ad578f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	from {addToFeed }
efa88d0f37f9f0185d8b2bf3fba5f083|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|11|1|V|typescript
	exports.bar = bar.bar;
6fe127d2c024eff2b7e8db931deeb711|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	const loadFunctions = require('firebase-function-tools')
	const functions = require('firebase-functions')
cc1eb1a58fa875ccdad016fd5c21e2d7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	import {addToFeed} from "./add_to_feed"
e3632441181048cf11287fc21b947904|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|9|v|typescript
	addToFeed
c84f92047028f94151f3e298a76dfbd4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|32|v|typescript
	add_to_feed
02c6ed5dd3f207a0b6c94da042456c77|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|8|1|V|typescript
	exports.addToFeed = addToFeed;
c0934fc1be86b05c0dd3a974bb29c9c9|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|7|v|typescript
	initializeApp
a147f47a1ebf2541c37809aa83d05ec8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	admin.initializeApp()
f7a89922aea4e23df46c5ddc2afc95c6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	const admin = require('firebase-admin')
4a7f4e8e6aae3b70633ff92821717eae|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|7|1|V|typescript
	
	//loadFunctions(__dirname, exports)
a931a61f536821157d8e179199f1a136|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|1|V|typescript
	admin.initializeApp("addToFeed");
7cbf4e92b0cf5863cdd475254851c6cd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	import {addToFeed} from "./add_to_feed"
	import {processTikTok} from "./process_tiktok"
07b0a8fc5f05510657567f9aedee1c7e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|13|1|V|typescript
	//loadFunctions(__dirname, exports)
e5707f178f4c0b8602afff8727f468c2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|14|1|V|typescript
	*/
	
	const loadFunctions = require('firebase-function-tools')
	const functions = require('firebase-functions')
	const admin = require('firebase-admin')
	const config = functions.config().firebase
	admin.initializeApp(config)
	loadFunctions(__dirname, exports)
cc7d4f5bda03245660c784746dbe422c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|2|22|v|typescript
	firebase-admin
c8c981808f22d129be2a924e7a04047b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|7|1|V|typescript
	module.exports = admin;
b2507468f95156358fa490fd543ad2f0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|14|v|typescript
	export
5cbee90178fbbcf3c742964e65675357|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	export const admin;
150afc324b7fbc3931023e96d81bd032|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	export 
50d5437848819b1d410fdeef7b90966d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|23|v|typescript
	wipeoutConfig
b372bbc594536b8bf40f8a4517e21e6e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|2|1|V|typescript
	import {admin}from "./index";
19ce3a2da40fd0b7082256cf62dc344a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|10|17|v|typescript
	 = addToFeed;
b064df7465d53c7cbc15124ec8b17cf8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|11|22|v|typescript
	= processTikTok;
77847259193ac817e453a667eb1044f3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|3|29|V|typescript
	export const initialize = (config) => {
	  global.init = Object.freeze(config);
	};
6d8650cb2c0ca29ea3c2f096f648ff5f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|13|1|V|typescript
	addToFeed.initialize(CONFIG);
9fdbb8c246c68d9831560a19913e8d2e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	const admin = require('firebase-admin'); const functions = require('firebase-functions');
	
	admin.initializeApp(functions.config().firebase);
	
	const CONFIG = {
	    'credential': admin.credential.applicationDefault(),
	    'db': admin.database(),
	    'serverValue': admin.database.ServerValue,
	    'users': functions.auth.user(),
	    'DB_URL': functions.config().firebase.databaseURL,
	  };
	
001a58856b6e578153ae83eecabff518|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|21|v|typescript
	ddToFeed"
d6a87f2245fa6884ceb25c1647d33ec3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|7|8|v|typescript
	{tiktok}
9314ed0b9a8acd027f25d6417219f01a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|7|1|V|typescript
	import * as tiktok from 'tiktok'
3dc9f446025a62e5822940248b540da1|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|7|1|V|typescript
	impo
cab8111fd0b710a336c898e539090e34|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|3|44|v|typescript
	void
acd5c3db6a031550325dc4c75723091d|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|8|1|V|typescript
	admin.firestore
3a8f38f23e1db571e6f32f8a7d88d0be|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|5|1|V|typescript
	admin.fir
0acb726d835652cb05b7ad4238d4b1d8|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|9|3|V|typescript
	  something(() => rsitenrasit)
51718398f14c2c7248fa166b1c749400|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|11|14|v|typescript
	a, b
d29609864a4309f0631eb68faf190e64|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|11|24|v|typescript
	c, d
21aa4098830c1a5b39acd83c6bc27c96|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|2|1|V|typescript
	
	
	
	function foo(firestore) {
	  return function() {
	    firestore
	  }
	}
	
	const bar = (deps) => (func, args) =>  {
	  a, b, c, d
	}
	
	bar(a, b)(c, d);
	
	
	
	
33ab4e11ba45fac62395ec20567b0553|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|7|9|v|typescript
	uploadTikTok
6211a5112c35bdc646328c4ce88a30fd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|37|27|v|typescript
	tiktok
d6384114a248a28815f49a1cbdd59d9e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/tiktok.ts|7|23|v|typescript
	tiktok 
2df2cafa6f5aac95f4547e00828db5fd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|21|49|v|javascript
	(admin.firestore)
8cf566dd21e5e09a39a9e5ea5db9dfa4|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|21|1|V|javascript
	    functions = require('../lib/index.js');
c5298cf1e8876b42b700934abb99851b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|11|1|V|typescript
	admin.firestor
d59ac3d0dbe88783c2a574ffae449312|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|8|31|v|typescript
	firestore
20e60f5df0504e6dfb7d2ea560f29630|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|3|34|v|typescript
	) => FirebaseFirestore.Firestore
c15faeb143fbd3c67adb1ebebdaad2ce|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|22|5|V|javascript
	    console.log(functions.addToFeed);
e6bc2a9f5b41e14cf7b0777b4a89e6c7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|3|v|typescript
	return 
6f13ae853a5bbe4271d34724c185e546|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|1|V|typescript
	const add = a, b => a + b
20b83a4bf8a26a005f76f764ef0c1afd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|23|v|typescript
	 = (app: admin.app.App) => {
66318e8b957a90e77713f9998eb656fa|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	const app = admin.initializeApp();
	admin.initializeApp
36cf4cebb3f1656262954d50323e5b25|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	import * as admin from "firebase-admin";
	
	const app = admin.initializeApp();
06a451ae793fc47fb4ac0558806ce58f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	import * as admin from "firebase-admin";
	
	const app = admin.initializeApp();
	admin.initializeApp
	
3d6763571b31fbc76a7e6406051beeb0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|3|1|V|typescript
	import * as admin from './admin';
7a2cb86d5d2a66cb0f3ebd398f473ec3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|26|v|typescript
	(app: admin.app.App) => {
e70c4df10ef0983b9c8c31bd06b2a2c3|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|26|v|typescript
	return
a12870bde22bdb8814007c99002ad62b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|4|1|V|typescript
	const admin = require('./admin');
d73e87abef864e3eb5c762318431f8fe|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|3|1|V|typescript
	export const app = admin.initializeApp();
eaf75ffe9760130bbaf88b52c1aebdb7|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|3|1|V|typescript
	const app = admin.initializeApp();
	admin.initializeApp
	
50486bcdf1a621154cb7d09004517079|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|37|V|typescript
	import * as admin from "firebase-admin";
	
9516025fc3362109982324e81f5fd00b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|2|1|V|typescript
	import * as app from './admin';
3e85a70400506c6c58d679f750be9f88|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|10|v|typescript
	 from
b8b357e8dae69dd6e936c81b9c0a7032|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|33|7|V|javascript
	      console.log('aroistt.narsitenarsioten', functions);
328a40442a5ca8a90e871b9b2c41edc0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|1|V|typescript
	require('./akmin');
80792387ce8c7c82b2f60908810795e2|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|1|V|typescript
	require('./admin');
dcbfefe4ceaaca4cac59fa1c6abd9ad0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/package.json|21|5|V|json
	    "firebase-function-tools": "^1.1.4",
dc4aa7f6676343fe2879bee174da9983|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|1|1|V|typescript
	import * as functions from "firebase-functions";
	import * as admin from "firebase-admin";
	
	try {admin.initializeApp(functions.config().firebase);} catch(e) {} 
6475401835b1a121403b2effe5534814|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|1|V|typescript
	try {admin.initializeApp(functions.config().firebase, "process") ;} catch(e) {} 
5075140835d0bc504791c76b04c33d2b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|56|v|typescript
	process
5181284ade0442ad24600ae379c02049|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|6|v|typescript
	admin.initializeApp(functions.config(
ced921276ee39b589db147833793852c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|6|v|typescript
	admin.initia
6420e90fd061faa0ad0c898eadc36791|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|6|v|typescript
	admin.initializeApp(fun
768208b6eba59bdddb40de310cad3406|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|6|v|typescript
	admin.initializeApp
009f11caf3ba00c88ab9c65772d36073|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|6|v|typescript
	admin.initializeApp(functions.config().firebase, "add") ;
092c429dfd9365ca95e55e9b379a5203|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|1|V|typescript
	require('./admin');
	try {} catch(e) {} 
fa912e1aead50d0b92cb066a20818a61|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|21|v|typescript
	functions.config(
620e4d92af4eeb2575c41bc948292d39|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|23|v|typescript
	firebase, "bar"
34339c18ca68bc30ae0d93f5ac80ce2f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|4|1|V|typescript
	import * as admin from "firebase-admin";
	
	admin.initializeApp(functions.config().firebase, "bar");
c1257372c3da5f97123d1f62b0b517dd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|1|V|typescript
	require('./admin')
fa3e34e25f731b00280b93f8f8ed0f3a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|26|v|typescript
	add.
34683996ee8f9380eeafcef9a5e441ba|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|4|24|v|typescript
	= addToFeed;
8b9411af1d5a40144f559999df53c4ad|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|4|1|V|typescript
	console.log("initializing app...");
	try {admin.initializeApp(functions.config().firebase);} catch(e) {} 
dd8a88ab78340b1626d41b161b6acd17|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|5|1|V|typescript
	try {admin.initializeApp(functions.config().firebase);} catch(e) {} 
037d9191d8e94839c2f6edf2f3e22c57|file:///Users/vanities/git/work/funfunfun-backend/firebase/firebase.json|21|1|V|json
	      "**/node_modules/**"
7a8e8cd6299da0aeee3fdd49bad538ad|file:///Users/vanities/git/work/funfunfun-backend/firebase/firebase.json|22|7|V|json
	      "functions/test/**"
8edf6c2e2fe7bf50c935efdf042d20e1|file:///Users/vanities/git/work/funfunfun-backend/firebase/firebase.json|20|1|V|json
	      "**/.*",
3ec03583f8eaec275cb2183db769ff47|file:///Users/vanities/git/work/funfunfun-backend/firebase/firebase.json|22|11|v|json
	node_modules
ea7025478e0e25cff04567cdd9df9d7e|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|6|1|V|typescript
	    admin.initializeApp(functions.config().firebase);
c70362809f57545ddd86856bc64672a0|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|21|v|typescript
	).firebase
ada2c0ad05f2e9ac36bf0c0e8e835449|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|2|1|V|typescript
	import * as tiktok from  './tiktok';
a8160f2a6f3a4cbcc2c99dd02b60bbd5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|1|V|typescript
	admin.initializeApp(functions.config().firebase, "addToFeed");
5c7b671eba0af546512df4f133164e04|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/admin.ts|6|44|v|typescript
	 admin.app.App
627cffc7ebed1fa9575b609d4bff5b4f|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|4|1|V|typescript
	import * as admin from "firebase-admin";
	
	admin.initializeApp(functions.config().firebase, "addToFeed");
38d0a9db314ad3d69ab061daa2405fa5|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|15|v|typescript
	functions.config().firebase,
b56cc35324ba2a96ab1ca9fd63c78f0c|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|5|1|V|typescript
	const app = initializeApp("addToFeed");
675f446e332a44d228d9b7c77dc8c7ce|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|1|V|typescript
	admin.initializeApp(functions.config().firebase, "processTikTok");
487da28530b840b87fb6ca8850d04394|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|3|1|V|typescript
	import {initializeApp} from './admin';
727ca40799a230e47d6103802b117e2a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|6|3|V|typescript
	  admin.initializeApp();
dfcc75345447d6313cf88048403dff88|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|15|1|V|typescript
	    admin.initializeApp();
db7f8bd2080e30e2dbdad43534f50cf6|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/index.ts|1|1|V|typescript
	require("./admin");
495bba758121f0c4a5d5d7ec267f2211|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/add_to_feed_test.js|43|1|V|javascript
	          shareLink: shareLink1,
95bbfd6b55d63c8e889e7b9fa2c2c669|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/test/process_tiktok_test.js|84|11|V|javascript
	          shareLink
590032c9d3453091612dc28b978d86af|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|10|1|V|typescript
	    console.log('Got object', object);
ba21936490c4f4f5de030f38f66d671b|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|12|18|v|typescript
	Got object
a8cfde6331bd59eb2ac96f8911c4b666|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|12|29|v|typescript
	object
293bf149a5e5d6356d7e69d9ebb69faf|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|11|5|V|typescript
	    const metaData = object["metadata"];
6e65e7379660aa4c22f7944447b7d040|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|12|5|V|typescript
	    console.log('Metadata', metaData);
268060527bc6c0022bb231d71f93eb88|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|10|30|v|typescript
	 object
eec4336365358930ee1e154bfe46f19a|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/add_to_feed.ts|12|57|v|typescript
	 : "";
c24423297065a173099e001292224bdf|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|1|6|V|typescriptreact
	import React, { Component } from "react";
	import { Drizzle } from '@drizzle/store';
2d9853f0fb31a4c71314515aea374b66|file:///Users/vanities/.config/nvim/init.vim|114|1|V|vim
	\   'javascript': ['prettier'],
3576f69b09065139d645c6b1de3e31e6|file:///Users/vanities/.config/nvim/init.vim|124|1|V|vim
	let g:syntastic_check_on_open=1
ecf33799a07dccf38877630e6d1f2232|file:///Users/vanities/.config/nvim/init.vim|146|1|V|vim
	
	" call neomake#configure#automake('nrwi', 500)
	" let g:neomake_open_list = 2
	"
	"
	
	set statusline+=%#warningmsg#
	set statusline+=%{SyntasticStatuslineFlag()}
	set statusline+=%*
	
	let g:syntastic_check_on_open=1
	let g:syntastic_always_populate_loc_list = 1
	let g:syntastic_auto_loc_list = 1
	let g:syntastic_check_on_open = 1
	let g:syntastic_check_on_wq = 0
	
	au BufNewFile,BufRead *.ts setlocal filetype=typescript
	au BufNewFile,BufRead *.tsx setlocal filetype=typescript.tsx
8580293f108b14008a0ba4d0aec0acd0|file:///Users/vanities/.config/nvim/init.vim|93|1|V|vim
	Plug 'vim-syntastic/syntastic'
bec64e38c54bb366b3d25390c21554e1|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|1|V|typescript
	const runtimeOpts = {
2af484bfee3139251637b716956c6ebd|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|6|1|V|typescript
	  timeoutSeconds: 300, // max=540
451a4ef0cb21b82b4ad2c193e3b54f54|file:///Users/vanities/git/work/funfunfun-backend/firebase/functions/src/process_tiktok.ts|8|1|V|typescript
	askjasd
adc24ae24184bf2a5a53fa737ef99edf|file:///Users/vanities/git/fun/bitchan/client/src/App.tsx|5|53|v|typescriptreact
	.tsx
31078d3cf17a6aac8c857d2b151d19dc|file:///Users/vanities/.config/nvim/init.vim|92|1|V|vim
	Plug 'rrethy/vim-hexokinase', { 'do': 'make hexokinase' }
e5e254d3fc1b6ac08d6aaac6ca9c5d92|file:///Users/vanities/.config/nvim/init.vim|122|1|V|vim
	map <C-E> :NERDTreeToggle<CR>
	let NERDTreeQuitOnOpen=1
	let NERDTreeShowHidden=1
	let NERDTreeIgnore = ['\.pyc$']
	
22298524c7fcfe8a3ec73d28304a6a00|file:///Users/vanities/.config/nvim/init.vim|64|1|V|vim
	Plug 'scrooloose/nerdtree'
a2b6a6e634d9db46c49dd36b182773fd|untitled:1|4|1|v|startify
	   |                                 |
	   | - Alan Perlis                   |
	   *---------------------------------*
	          o
	           o   ^__^
	            o  (oo)\_______
	               (__)\       )\/\
	                   ||----w |
	                   ||     ||
	
	   [
b0048f3342a76cd550faec9409eb9ff9|file:///Users/vanities/.config/nvim/init.vim|46|1|V|vim
	"------------------------ COC ------------------------
	" coc for tslinting, auto complete and prettier
	Plug 'neoclide/coc.nvim', {'do': 'yarn install --frozen-lockfile'}"
	let g:coc_global_extensions = ['coc-tslint-plugin', 'coc-tsserver', 'coc-emmet', 'coc-css', 'coc-html', 'coc-json', 'coc-yank', 'coc-prettier']
	"------------------------ VIM TSX ------------------------
	" by default, if you open tsx file, neovim does not show syntax colors
	" vim-tsx will do all the coloring for jsx in the .tsx file
	Plug 'ianks/vim-tsx'
	"------------------------ VIM TSX ------------------------
	" by default, if you open tsx file, neovim does not show syntax colors
	" typescript-vim will do all the coloring for typescript keywords
	Plug 'leafgarland/typescript-vim'
	"------------------------ THEME ------------------------
	" most importantly you need a good color scheme to write good code :D
	Plug 'dikiaap/minimalist'
	
8cd53a68d33b5527457d2628c863994e|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|27|22|V|typescriptreact
	  const dispatch = use
94a50188f1a4cc1d60d9d0d4180a5df1|file:///Users/vanities/.config/nvim/init.vim|239|1|V|vim
	setl comments-=n:>
cc2b5d3a648fb8551bb1af1d2d322e83|file:///Users/vanities/.config/nvim/init.vim|238|1|V|vim
	let g:typescript_compiler_binary = 'tsc'
5357cf0fde2e8943f64fcf5dd6d24a3d|file:///Users/vanities/.config/nvim/init.vim|239|1|V|vim
	autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact
e3373f9984644eb2ba5d04551013666e|file:///Users/vanities/.config/nvim/init.vim|238|1|V|vim
	" set filetypes as typescriptreact
6119bce85f2a1f5db814f3bdc15c2b9b|file:///Users/vanities/.config/nvim/init.vim|238|1|V|vim
	" set filetypes as typescriptreact
	autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact
402c5a6fe4c04c7d269c4532baecc8ee|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|71|58|v|typescript
	wallet
236914f56081524733603cb5ea5491dd|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|71|5|v|typescript
	Requests.signUpOrLogin(metaMask.accounts?.toString(), metaMask.provider);
4112ff22361f7e4d2a6a4d15e7cfbe10|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|73|10|V|typescript
	      metaMask.provider
c9b0263183226748c9b308457790fdc4|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|97|7|v|typescript
	metaMask
1131f9faf04b0dd69996c1b6835d5726|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|122|7|v|typescript
	coinbaseWallet
388acd162f419509149740725413376a|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|122|7|v|typescript
	walletConnect
d42540a3795f5a9cd1958dfab841178f|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|71|1|V|typescript
	    Requests.signUpOrLogin(wallet?.accounts.toString, wallet.provider);
a50b59780e8338e3e88cab1d35327657|file:///Users/vanities/git/work/open3/open3-client/src/components/web3/walletConfiguration.tsx|23|35|V|typescript
	import { Requests } from "api/requests";
12b6d3d956d45a297e2b882b2d70ef35|file:///Users/vanities/.config/nvim/init.vim|240|1|V|vim
	
	require'nvim-treesitter.configs'.setup {
	  highlight = {
	    enable = true,
	    -- Setting this to true will run `:h syntax` and tree-sitter at the same time.
	    -- Set this to `true` if you depend on 'syntax' being enabled (like for indentation).
	    -- Using this option may slow down your editor, and you may see some duplicate highlights.
	    -- Instead of true it can also be a list of languages
	    additional_vim_regex_highlighting = false,
	  },
	}
33daf27117810b2074254f59d932ff96|file:///Users/vanities/.zshrc|143|34|V|zsh
	alias gm="git checkout master && git pull origin master"
e5c6c31395e0025237791c3a96ca323f|file:///Users/vanities/.zshrc|144|1|V|zsh
	alias gp="git pull"
	alias gpo="git pull origin"
a4f5aad5ca8b5422c80a029a5ef10751|file:///Users/vanities/.zshrc|145|1|V|zsh
	alias gco="git checkout"
	alias gcob="git checkout -b"
21ec7f16dd5d299c798014276f958473|file:///Users/vanities/.zshrc|143|12|v|zsh
	git pull origin master
8983dfa6ec8a92134e4f56c43b250f4e|file:///Users/vanities/.zshrc|144|12|v|zsh
	git checkout master
74bb7554308413811936b688a7c28049|file:///Users/vanities/git/work/open3/open3-client/src/pages/projects.tsx|2|1|V|typescript
	import Head from "next/head";
46f8305c22e25ccfa84153f14ce20811|file:///Users/vanities/git/work/open3/open3-client/src/pages/projects.tsx|3|1|V|typescript
	import { ProjectCard } from "../components/project/card";
6e539a9842eb91fed5f8b6cc78dcf2ed|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|1|1|V|typescript
	import { retry } from "@reduxjs/toolkit/query/react";
56ad4451d36d768d52942d64cbd01dfb|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|8|15|v|typescript
	accounts/auth/
7a90e38a211ece1c346928e7d1f3e968|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|8|15|v|typescript
	accounts
2e07220ffe49e620e324f44fac4b106d|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|8|15|v|typescript
	/auth
e47eb7516a7733b2cfe23ed08c41fad5|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|10|20|V|typescript
	        body: credentials,
2bbe57617993ea5b6314362244545e32|file:///Users/vanities/git/work/open3/open3-client/src/types/projects.d.ts|1|1|V|typescript
	export interface 
660436accf468ec8d01a3616863e01a4|file:///Users/vanities/git/work/open3/open3-client/src/types/projects.d.ts|2|18|v|typescript
	AccountAuth
f3ebbaa2c4238c5d17b741e6ac455e62|file:///Users/vanities/git/work/open3/open3-client/src/types/projects.d.ts|1|24|V|typescript
	// what the backend is expecting
	export interface ProjectListRequest {
	  public_address: string;
	  message: string;
	  signature: string;
	}
fa53b91ccc1b78668d5af58e1ed3a485|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|2|69|v|typescript
	auth
1d07ddea7087b4b4feb9934892c1ddfd|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|2|15|v|typescript
	AccountAuthRequest, AccountAuthResponse 
7915553e7e53fe52df018f10ab329165|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|6|48|v|typescript
	AccountAuthRequest
6d7032951b7e5e19656f730e2701c15a|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|18|16|v|typescript
	login 
d3ed68f7315b7e72b8d886b2278fcac3|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|7|15|v|typescript
	credentials
11064f634fd8ef4932dfcc960e00c6fc|file:///Users/vanities/git/work/open3/open3-client/src/api/projects.ts|15|19|v|typescript
	LoginMutation
